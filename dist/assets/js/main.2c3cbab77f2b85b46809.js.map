{"version":3,"file":"assets/js/main.2c3cbab77f2b85b46809.js","mappings":"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","sources":["webpack://rush-dashboard/./src/services/apiService.js","webpack://rush-dashboard/./src/utils/excelParser.js","webpack://rush-dashboard/./src/components/ConfirmationDialog.js","webpack://rush-dashboard/./src/utils/formatter.js","webpack://rush-dashboard/./src/components/AgentCard.js","webpack://rush-dashboard/./src/components/AgentModal.js","webpack://rush-dashboard/./src/components/ModernAgentsPage.js","webpack://rush-dashboard/./src/components/ModernSMRanking.js","webpack://rush-dashboard/./src/components/ModernProductsAnalysis.js","webpack://rush-dashboard/./src/components/ModernNewClientsPage.js","webpack://rush-dashboard/./src/components/ModernFastwebPage.js","webpack://rush-dashboard/./src/components/ModernHistoricalAnalysis.js","webpack://rush-dashboard/./src/components/ModernSettingsPage.js","webpack://rush-dashboard/./src/components/TestPage.js","webpack://rush-dashboard/./src/components/ModernDashboard.js","webpack://rush-dashboard/./src/components/ModernSidebar.js","webpack://rush-dashboard/./src/components/ModernTopbar.js","webpack://rush-dashboard/./src/App.js","webpack://rush-dashboard/./src/reportWebVitals.js","webpack://rush-dashboard/./src/index.js"],"sourcesContent":["/**\n * API Service per RUSH Dashboard\n * Gestisce tutte le chiamate al backend PHP/MySQL\n */\n\n// ✅ SOLUZIONE: Usa sempre l'API di produzione per evitare problemi localhost\nconst DEFAULT_API_BASE_URL = 'https://rush.nicolaruotolo.it/api';\n\nconst resolveRuntimeEnv = () => {\n  try {\n    return import.meta.env ?? {};\n  } catch (error) {\n    if (typeof process !== 'undefined' && process.env) {\n      return {\n        MODE: process.env.NODE_ENV,\n        VITE_API_BASE_URL: process.env.VITE_API_BASE_URL ?? process.env.REACT_APP_API_BASE_URL,\n      };\n    }\n    return {};\n  }\n};\n\nconst runtimeEnv = resolveRuntimeEnv();\nconst mode = runtimeEnv.MODE || 'development';\nconst API_BASE_URL = runtimeEnv.VITE_API_BASE_URL ?? DEFAULT_API_BASE_URL;\n\n// 🔄 ALTERNATIVA: Se vuoi distinguere sviluppo/produzione\n// Imposta VITE_API_BASE_URL nello specifico file `.env` per l'ambiente desiderato.\n\nconst isProduction = mode === 'production';\n\nconst SENSITIVE_KEYS = new Set([\n  'token',\n  'authorization',\n  'password',\n  'sessiontoken',\n  'session_token',\n  'auth',\n]);\n\nconst sanitizeForLogging = (value, seen = new WeakSet(), depth = 0) => {\n  if (value === null || typeof value !== 'object') {\n    return value;\n  }\n\n  if (value instanceof Date) {\n    return value.toISOString();\n  }\n\n  if (value instanceof Error) {\n    return {\n      name: value.name,\n      message: value.message,\n      stack: isProduction ? undefined : value.stack,\n    };\n  }\n\n  if (seen.has(value)) {\n    return '[Circular]';\n  }\n\n  if (depth > 3) {\n    return '[Object]';\n  }\n\n  seen.add(value);\n\n  try {\n    if (Array.isArray(value)) {\n      return value.map((item) => sanitizeForLogging(item, seen, depth + 1));\n    }\n\n    return Object.entries(value).reduce((acc, [key, val]) => {\n      const normalizedKey = String(key).toLowerCase();\n\n      if (SENSITIVE_KEYS.has(normalizedKey)) {\n        acc[key] = '[REDACTED]';\n        return acc;\n      }\n\n      acc[key] = sanitizeForLogging(val, seen, depth + 1);\n      return acc;\n    }, {});\n  } finally {\n    seen.delete(value);\n  }\n};\n\nconst createLogger = (method) => (...args) => {\n  if (isProduction) {\n    return;\n  }\n\n  const sanitizedArgs = args.map((arg) => sanitizeForLogging(arg));\n  method(...sanitizedArgs);\n};\n\nconst logDebug = createLogger(console.log.bind(console));\nconst logError = createLogger(console.error.bind(console));\nconst logWarn = createLogger(console.warn.bind(console));\n\nconst SESSION_STORAGE_KEY = 'rush-dashboard:api-session';\n\nclass ApiError extends Error {\n  constructor(message, statusCode, details = null) {\n    super(message);\n    this.name = 'ApiError';\n    this.statusCode = statusCode;\n    this.details = details;\n  }\n}\n\nclass ApiService {\n  constructor() {\n    this.token = null;\n    this.currentUser = null;\n    this.expiresAt = null;\n    this.sessionActive = false;\n    this.baseURL = API_BASE_URL;\n\n    // 🐛 DEBUG: Mostra quale URL sta usando\n    logDebug(`🔗 API URL configurata: ${this.baseURL}`);\n    logDebug(`🌍 Environment: ${mode}`);\n\n    this.loadStoredSession();\n  }\n\n  /**\n   * Effettua una richiesta HTTP con gestione completa degli errori\n   */\n  async makeRequest(endpoint, options = {}) {\n    const url = `${this.baseURL}/${endpoint.replace(/^\\//, '')}`;\n\n    const {\n      skipAuthErrorHandling = false,\n      headers: customHeaders = {},\n      credentials: requestedCredentials,\n      ...fetchOptions\n    } = options;\n\n    const isFormData = fetchOptions.body instanceof FormData;\n\n    const headers = {\n      ...this.getAuthHeaders(),\n      ...customHeaders,\n    };\n\n    if (fetchOptions.body !== undefined && fetchOptions.body !== null && !isFormData && !('Content-Type' in headers)) {\n      headers['Content-Type'] = 'application/json';\n    }\n\n    let credentials = requestedCredentials;\n\n    if (credentials === undefined && typeof window !== 'undefined') {\n      try {\n        const baseOrigin = new URL(this.baseURL, window.location.href).origin;\n        if (baseOrigin === window.location.origin) {\n          credentials = 'include';\n        }\n      } catch (error) {\n        logWarn('Impossibile determinare l\\'origin dell\\'API:', error);\n      }\n    }\n\n    const config = {\n      ...fetchOptions,\n      headers,\n      ...(credentials !== undefined ? { credentials } : {}),\n    };\n\n    try {\n      logDebug(`🚀 API Request: ${config.method || 'GET'} ${url}`);\n\n      const response = await fetch(url, config);\n      \n      // 🐛 DEBUG: Mostra la risposta\n      logDebug(`📡 Response Status: ${response.status} ${response.statusText}`);\n      \n      const data = await response.json();\n\n      if (!response.ok) {\n        // Se token non valido, logout automatico\n        if (response.status === 401) {\n          if (skipAuthErrorHandling) {\n            this.clearSession();\n          } else {\n            this.handleAuthError();\n          }\n        }\n\n        throw new ApiError(data.error || 'Errore della richiesta', response.status, data);\n      }\n\n      logDebug(`✅ API Response: ${endpoint}`, data);\n      return data;\n\n    } catch (error) {\n      logError(`❌ API Error: ${endpoint}`, error);\n      \n      if (error instanceof ApiError) {\n        throw error;\n      }\n      \n      // Errori di rete o CORS\n      if (error instanceof TypeError && error.message.includes('fetch')) {\n        logError(`🌐 Network Error: Impossibile raggiungere ${url}`);\n        logError('📋 Possibili cause:');\n        logError('   - Server non raggiungibile');\n        logError('   - Problemi CORS');\n        logError('   - Connessione internet assente');\n        \n        throw new ApiError(\n          'Errore di connessione. Controlla la connessione internet.', \n          0\n        );\n      }\n      \n      throw new ApiError('Errore di comunicazione con il server', 0, error);\n    }\n  }\n\n  /**\n   * Gestisce errori di autenticazione\n   */\n  handleAuthError({ shouldReload = true } = {}) {\n    logWarn('🔒 Token non valido, logout automatico');\n    this.clearSession();\n    if (shouldReload) {\n      window.location.reload();\n    }\n  }\n\n  /**\n   * Headers per autenticazione\n   */\n  getAuthHeaders() {\n    return this.token ? { 'Authorization': `Bearer ${this.token}` } : {};\n  }\n\n  clearSession() {\n    this.token = null;\n    this.currentUser = null;\n    this.expiresAt = null;\n    this.sessionActive = false;\n\n    if (typeof window === 'undefined' || !window.localStorage) {\n      return;\n    }\n\n    try {\n      window.localStorage.removeItem(SESSION_STORAGE_KEY);\n    } catch (error) {\n      logWarn('Impossibile rimuovere la sessione dal localStorage:', error);\n    }\n  }\n\n  /**\n   * Salva il token di autenticazione\n   */\n  setToken(token) {\n    this.token = token || null;\n\n    if (this.token) {\n      this.saveSessionToStorage();\n    }\n  }\n\n  saveSessionToStorage() {\n    if (typeof window === 'undefined' || !window.localStorage) {\n      return;\n    }\n\n    try {\n      const sessionData = {\n        token: this.token,\n        currentUser: this.currentUser,\n        expiresAt: this.expiresAt,\n        sessionActive: this.sessionActive,\n      };\n\n      window.localStorage.setItem(SESSION_STORAGE_KEY, JSON.stringify(sessionData));\n    } catch (error) {\n      logWarn('Impossibile salvare la sessione nel localStorage:', error);\n    }\n  }\n\n  loadStoredSession() {\n    if (typeof window === 'undefined' || !window.localStorage) {\n      return;\n    }\n\n    try {\n      const storedData = window.localStorage.getItem(SESSION_STORAGE_KEY);\n\n      if (!storedData) {\n        return;\n      }\n\n      const sessionData = JSON.parse(storedData);\n\n      if (sessionData?.expiresAt && new Date(sessionData.expiresAt) <= new Date()) {\n        this.clearSession();\n        return;\n      }\n\n      this.token = sessionData?.token || null;\n      this.currentUser = sessionData?.currentUser || null;\n      this.expiresAt = sessionData?.expiresAt || null;\n      this.sessionActive = Boolean(sessionData?.sessionActive && sessionData?.token);\n    } catch (error) {\n      logWarn('Impossibile caricare la sessione dal localStorage:', error);\n\n      try {\n        window.localStorage.removeItem(SESSION_STORAGE_KEY);\n      } catch (removeError) {\n        logWarn('Impossibile ripulire la sessione corrotta dal localStorage:', removeError);\n      }\n    }\n  }\n\n  // ================================\n  // AUTHENTICATION METHODS\n  // ================================\n\n  /**\n   * Login utente\n   */\n  async login(username, password) {\n    try {\n      logDebug(`🔐 Tentativo login per: ${username}`);\n\n      const response = await this.makeRequest('login', {\n        method: 'POST',\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (!response.success) {\n        throw new Error(response.error || 'Login fallito');\n      }\n\n      this.setToken(response.token || null);\n      this.currentUser = response.user || null;\n      this.expiresAt = response.expires_at || null;\n      this.sessionActive = true;\n\n      this.saveSessionToStorage();\n\n      logDebug('✅ Login successful for:', response.user?.username || 'utente sconosciuto');\n\n      return {\n        success: true,\n        user: this.currentUser,\n        token: this.token\n      };\n\n    } catch (error) {\n      logError('❌ Login failed:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Logout utente\n   */\n  async logout() {\n    try {\n      await this.makeRequest('logout', { method: 'POST', skipAuthErrorHandling: true });\n    } catch (error) {\n      logWarn('Errore durante logout:', error);\n    } finally {\n      this.clearSession();\n    }\n  }\n\n  /**\n   * Controlla se l'utente è autenticato\n   */\n  isAuthenticated() {\n    if (this.token) {\n      if (this.expiresAt && new Date(this.expiresAt) <= new Date()) {\n        this.clearSession();\n        return false;\n      }\n      return true;\n    }\n\n    if (this.sessionActive) {\n      if (this.expiresAt && new Date(this.expiresAt) <= new Date()) {\n        this.clearSession();\n        return false;\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Ottieni utente corrente\n   */\n  getCurrentUser() {\n    return this.currentUser;\n  }\n\n  /**\n   * Prova a ripristinare una sessione attiva utilizzando cookie/token\n   */\n  async restoreSession() {\n    try {\n      const response = await this.makeRequest('profile', {\n        skipAuthErrorHandling: true,\n      });\n\n      if (!response) {\n        this.clearSession();\n        return { success: false };\n      }\n\n      const user = response.user || response.profile || response.data || null;\n\n      if (!user) {\n        this.clearSession();\n        return { success: false };\n      }\n\n      this.currentUser = user;\n      this.sessionActive = true;\n\n      if (response.token) {\n        this.setToken(response.token);\n      }\n\n      if (response.expires_at) {\n        this.expiresAt = response.expires_at;\n      }\n\n      this.saveSessionToStorage();\n\n      return { success: true, user };\n\n    } catch (error) {\n      if (error instanceof ApiError && error.statusCode === 401) {\n        this.clearSession();\n        return { success: false };\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * Cambia password\n   */\n  async changePassword(currentPassword, newPassword) {\n    return await this.makeRequest('change-password', {\n      method: 'POST',\n      body: JSON.stringify({\n        current_password: currentPassword,\n        new_password: newPassword\n      }),\n    });\n  }\n\n  // ================================\n  // FILE MANAGEMENT METHODS\n  // ================================\n\n  /**\n   * Carica tutti i file dal server\n   */\n  async loadFiles() {\n    try {\n      const response = await this.makeRequest('uploads');\n      logDebug('📁 Files loaded from server:', response.files?.length || 0);\n      return response.files || [];\n    } catch (error) {\n      logError('❌ Error loading files:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Carica dati completi di un file specifico\n   */\n  async getFileData(fileDate) {\n    try {\n      const response = await this.makeRequest(`file-data/${fileDate}`);\n      logDebug(`📊 File data loaded for ${fileDate}:`, response);\n      return response;\n    } catch (error) {\n      logError(`❌ Error loading file data for ${fileDate}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Salva/aggiorna un file sul server\n   */\n  async saveFile(fileData) {\n    try {\n      logDebug('💾 Saving file:', fileData.name, fileData.date);\n      \n      const response = await this.makeRequest('upload', {\n        method: 'POST',\n        body: JSON.stringify({ fileData }),\n      });\n      \n      logDebug('✅ File saved successfully:', response);\n      return response;\n    } catch (error) {\n      logError('❌ Error saving file:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Elimina un file dal server\n   */\n  async deleteFile(fileDate) {\n    try {\n      logDebug(`🗑️ Deleting file: ${fileDate}`);\n      \n      const response = await this.makeRequest(`uploads/${fileDate}`, {\n        method: 'DELETE',\n      });\n      \n      logDebug('✅ File deleted successfully:', response);\n      return response;\n    } catch (error) {\n      logError(`❌ Error deleting file ${fileDate}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Carica un file Excel con FormData (per upload con file binario)\n   */\n  async uploadFile(file, parsedData) {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('data', JSON.stringify(parsedData));\n      \n      logDebug('📤 Uploading file:', file.name);\n      \n      const response = await this.makeRequest('upload-file', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          // Non impostare Content-Type per FormData - il browser lo fa automaticamente\n          ...this.getAuthHeaders()\n        }\n      });\n      \n      logDebug('✅ File uploaded successfully:', response);\n      return response;\n    } catch (error) {\n      logError('❌ Error uploading file:', error);\n      throw error;\n    }\n  }\n\n  // ================================\n  // DASHBOARD METHODS\n  // ================================\n\n  /**\n   * Ottieni statistiche dashboard generali\n   */\n  async getDashboardStats() {\n    try {\n      const response = await this.makeRequest('dashboard/stats');\n      logDebug('📈 Dashboard stats loaded:', response);\n      return response;\n    } catch (error) {\n      logError('❌ Error loading dashboard stats:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Ottieni statistiche per un periodo specifico\n   */\n  async getStatsForPeriod(startDate, endDate) {\n    try {\n      const response = await this.makeRequest(`stats/period?start=${startDate}&end=${endDate}`);\n      logDebug(`📊 Period stats loaded (${startDate} - ${endDate}):`, response);\n      return response;\n    } catch (error) {\n      logError('❌ Error loading period stats:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Ottieni ranking SM\n   */\n  async getSMRanking(fileDate = null) {\n    try {\n      const endpoint = fileDate ? `sm-ranking/${fileDate}` : 'sm-ranking';\n      const response = await this.makeRequest(endpoint);\n      logDebug('🏅 SM ranking loaded:', response);\n      return response;\n    } catch (error) {\n      logError('❌ Error loading SM ranking:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Ottieni dettagli agenti\n   */\n  async getAgentsDetails(fileDate = null) {\n    try {\n      const endpoint = fileDate ? `agents/${fileDate}` : 'agents';\n      const response = await this.makeRequest(endpoint);\n      logDebug('👥 Agents details loaded:', response);\n      return response;\n    } catch (error) {\n      logError('❌ Error loading agents details:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Ottieni analisi prodotti\n   */\n  async getProductsAnalysis(fileDate = null) {\n    try {\n      const endpoint = fileDate ? `products/${fileDate}` : 'products';\n      const response = await this.makeRequest(endpoint);\n      logDebug('📦 Products analysis loaded:', response);\n      return response;\n    } catch (error) {\n      logError('❌ Error loading products analysis:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Ottieni dati nuovi clienti\n   */\n  async getNewClientsData(fileDate = null) {\n    try {\n      const endpoint = fileDate ? `new-clients/${fileDate}` : 'new-clients';\n      const response = await this.makeRequest(endpoint);\n      logDebug('🆕 New clients data loaded:', response);\n      return response;\n    } catch (error) {\n      logError('❌ Error loading new clients data:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Ottieni dati Fastweb Energia\n   */\n  async getFastwebData(fileDate = null) {\n    try {\n      const endpoint = fileDate ? `fastweb/${fileDate}` : 'fastweb';\n      const response = await this.makeRequest(endpoint);\n      logDebug('⚡ Fastweb data loaded:', response);\n      return response;\n    } catch (error) {\n      logError('❌ Error loading Fastweb data:', error);\n      throw error;\n    }\n  }\n\n  // ================================\n  // USER PROFILE METHODS\n  // ================================\n\n  /**\n   * Ottieni profilo utente\n   */\n  async getUserProfile() {\n    try {\n      const response = await this.makeRequest('profile');\n      logDebug('👤 User profile loaded:', response);\n      return response;\n    } catch (error) {\n      logError('❌ Error loading user profile:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Aggiorna profilo utente\n   */\n  async updateUserProfile(profileData) {\n    try {\n      const response = await this.makeRequest('profile', {\n        method: 'PUT',\n        body: JSON.stringify(profileData),\n      });\n      logDebug('✅ User profile updated:', response);\n      return response;\n    } catch (error) {\n      logError('❌ Error updating user profile:', error);\n      throw error;\n    }\n  }\n\n  // ================================\n  // UTILITY METHODS\n  // ================================\n\n  /**\n   * Test connessione API (health check)\n   */\n  async healthCheck() {\n    try {\n      const response = await this.makeRequest('health');\n      logDebug('💚 API health check passed:', response);\n      return response;\n    } catch (error) {\n      logError('❤️‍🩹 API health check failed:', error);\n      return { success: false, error: error.message };\n    }\n  }\n\n  /**\n   * Ottieni versione API e info sistema\n   */\n  async getSystemInfo() {\n    try {\n      const response = await this.makeRequest('system-info');\n      logDebug('ℹ️ System info loaded:', response);\n      return response;\n    } catch (error) {\n      logError('❌ Error loading system info:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Cleanup sistema (solo admin)\n   */\n  async cleanup() {\n    try {\n      const response = await this.makeRequest('cleanup', {\n        method: 'POST',\n      });\n      logDebug('🧹 System cleanup completed:', response);\n      return response;\n    } catch (error) {\n      logError('❌ Error during system cleanup:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Download backup dati completo (client-side)\n   */\n  async exportData() {\n    try {\n      logDebug('📥 Starting data export...');\n      \n      const files = await this.loadFiles();\n      const fullData = {};\n\n      // Carica dati completi per ogni file in parallelo\n      const filePromises = files.map(async (file) => {\n        try {\n          const fileData = await this.getFileData(file.file_date);\n          return {\n            key: file.file_date,\n            value: {\n              fileInfo: {\n                name: file.file_name,\n                displayDate: file.display_date,\n                uploadDate: file.upload_date,\n                size: file.file_size\n              },\n              ...fileData\n            }\n          };\n        } catch (error) {\n          logWarn(`⚠️ Errore caricamento file ${file.file_date}:`, error);\n          return null;\n        }\n      });\n\n      const fileResults = await Promise.all(filePromises);\n\n      for (const result of fileResults) {\n        if (result) {\n          fullData[result.key] = result.value;\n        }\n      }\n      \n      const exportData = {\n        exportDate: new Date().toISOString(),\n        version: '1.0.0',\n        files: fullData,\n        metadata: {\n          totalFiles: files.length,\n          exportedBy: this.getCurrentUser()?.username\n        }\n      };\n      \n      // Crea e scarica file JSON\n      const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n        type: 'application/json'\n      });\n      \n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `rush-dashboard-backup-${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n      \n      logDebug('✅ Data export completed successfully');\n      return { success: true, message: 'Export completato con successo' };\n      \n    } catch (error) {\n      logError('❌ Error during data export:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Import dati da backup JSON\n   */\n  async importData(backupFile) {\n    try {\n      logDebug('📤 Starting data import...');\n      \n      const formData = new FormData();\n      formData.append('backup', backupFile);\n      \n      const response = await this.makeRequest('import', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          ...this.getAuthHeaders()\n        }\n      });\n      \n      logDebug('✅ Data import completed:', response);\n      return response;\n      \n    } catch (error) {\n      logError('❌ Error during data import:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Ottieni logs attività (solo admin)\n   */\n  async getActivityLogs(limit = 100, offset = 0) {\n    try {\n      const response = await this.makeRequest(`logs?limit=${limit}&offset=${offset}`);\n      logDebug('📋 Activity logs loaded:', response);\n      return response;\n    } catch (error) {\n      logError('❌ Error loading activity logs:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Cerca nei dati\n   */\n  async search(query, filters = {}) {\n    try {\n      const response = await this.makeRequest('search', {\n        method: 'POST',\n        body: JSON.stringify({ query, filters }),\n      });\n      logDebug('🔍 Search completed:', response);\n      return response;\n    } catch (error) {\n      logError('❌ Error during search:', error);\n      throw error;\n    }\n  }\n\n  // ================================\n  // ADMIN METHODS\n  // ================================\n\n  /**\n   * Ottieni tutti gli utenti (solo admin)\n   */\n  async getUsers() {\n    const response = await this.makeRequest('users');\n    // Il backend ora restituisce correttamente un oggetto con una chiave 'users'.\n    if (response && Array.isArray(response.users)) {\n      return response.users;\n    }\n    // Fallback per risposte non valide o vuote.\n    return [];\n  }\n\n  /**\n   * Aggiorna il ruolo di un utente (solo admin)\n   */\n  async updateUserRole(userId, role) {\n    return await this.makeRequest(`users/${userId}/role`, {\n      method: 'PUT',\n      body: JSON.stringify({ role }),\n    });\n  }\n\n  /**\n   * Aggiorna la password di un utente (solo admin)\n   */\n  async adminUpdateUserPassword(userId, newPassword) {\n    return await this.makeRequest(`users/${userId}/password`, {\n      method: 'PUT',\n      body: JSON.stringify({ new_password: newPassword }),\n    });\n  }\n\n  /**\n   * Crea un nuovo utente (solo admin)\n   */\n  async createUser(userData) {\n    return await this.makeRequest('users', {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  /**\n   * Elimina un utente (solo admin)\n   */\n  async deleteUser(userId) {\n    return await this.makeRequest(`users/${userId}`, {\n      method: 'DELETE',\n    });\n  }\n\n\n  // ================================\n  // BATCH OPERATIONS\n  // ================================\n\n  /**\n   * Operazioni batch su più file\n   */\n  async batchOperation(operation, fileIds, options = {}) {\n    try {\n      const response = await this.makeRequest('batch', {\n        method: 'POST',\n        body: JSON.stringify({\n          operation,\n          fileIds,\n          options\n        }),\n      });\n      logDebug(`✅ Batch operation '${operation}' completed:`, response);\n      return response;\n    } catch (error) {\n      logError(`❌ Error during batch operation '${operation}':`, error);\n      throw error;\n    }\n  }\n}\n\n// Crea istanza singleton\nexport const apiService = new ApiService();\n","// src/utils/excelParser.js - PARSER COMPLETAMENTE DINAMICO E ROBUSTO\n\nimport * as XLSX from 'xlsx';\n\n/**\n * 🎯 MAPPATURA DINAMICA BASATA SUI NOMI DEGLI HEADER\n * Questo sistema cerca le colonne in base al CONTENUTO dell'header, non alla posizione\n */\nconst DYNAMIC_FIELD_PATTERNS = {\n  // Identificatori agente (OBBLIGATORI)\n  'AGENTE': {\n    patterns: ['nome agente', 'agente', 'nome', 'cognome agente', 'consulente'],\n    required: true,\n    description: 'Nome/Cognome dell\\'agente'\n  },\n  'SM': {\n    patterns: ['sm', 'sales manager', 'coordinatore', 'coord', 'manager'],\n    required: true,\n    description: 'Sales Manager / Coordinatore'\n  },\n  'DISTRETTO': {\n    patterns: ['distretto'],\n    required: false,\n    description: 'Distretto di appartenenza'\n  },\n  \n  // Metriche finanziarie (OBBLIGATORIE)\n  'FATTURATO_RUSH': {\n    patterns: ['fatturato rush', 'rush fatturato', 'fat rush'], // Rimosso 'fatturato' generico\n    required: true,\n    description: 'Fatturato Rush dell\\'agente'\n  },\n  'FATTURATO_COMPLESSIVO': {\n    patterns: ['fatturato complessivo', 'fatturato totale', 'totale fatturato'], // Rimosso 'fatturato agente'\n    required: true,\n    description: 'Fatturato Complessivo dell\\'agente'\n  },\n  'BONUS_RISULTATI': {\n    patterns: ['importo totale'],\n    required: false,\n    description: 'Bonus economico per risultati'\n  },\n  \n  // Prodotti voce (opzionali ma importanti)\n  'SIM_VOCE': {\n    patterns: ['sim voce totali', 'sim voce'],\n    required: false,\n    description: 'Contratti SIM Voce'\n  },\n  'SIM_DATI': {\n    patterns: ['sim dati totali', 'sim dati'],\n    required: false,\n    description: 'Contratti SIM Dati'\n  },\n  'MNP': {\n    patterns: ['sim mnp voce', 'mnp'],\n    required: false,\n    description: 'Contratti MNP'\n  },\n\n  // Nuovi campi prodotti e fatturati specifici\n  'EASY_RENT': { patterns: ['easy rent'], required: false, description: 'Contratti Easy Rent' },\n  'LINK_OU': { patterns: ['link ou'], required: false, description: 'Contratti Link OU' },\n  'LINK_OA': { patterns: ['link oa'], required: false, description: 'Contratti Link OA' },\n  'LINK_OA_START': { patterns: ['link oa start'], required: false, description: 'Contratti Link OA Start' },\n  'INTERNI_OA': { patterns: ['interni oa'], required: false, description: 'Contratti Interni OA' },\n  'FATTURATO_VOCE': { patterns: ['fatturato voce'], required: false, description: 'Fatturato Voce' },\n  'FATTURATO_DATI': { patterns: ['fatturato dati'], required: false, description: 'Fatturato Dati' },\n  'FATTURATO_EASY_RENT': { patterns: ['fatturato easy rent'], required: false, description: 'Fatturato Easy Rent' },\n  'FATTURATO_OU': { patterns: ['fatturato ou'], required: false, description: 'Fatturato OU' },\n  'FATTURATO_OA': { patterns: ['fatturato oa'], required: false, description: 'Fatturato OA' },\n  'FATTURATO_EASY_DEAL': { patterns: ['fatturato easy e complex deal'], required: false, description: 'Fatturato Easy & Complex Deal' },\n  'FATTURATO_ALTRO': { patterns: ['fatturato altro'], required: false, description: 'Fatturato Altro' },\n  'FATTURATO_SERVIZI_DIGITALI': { patterns: ['fatturato servizi digitali'], required: false, description: 'Fatturato Servizi Digitali' },\n  'FATTURATO_CUSTOM': { patterns: ['fatturato custom'], required: false, description: 'Fatturato Custom' },\n  'SDM': { patterns: ['sdm'], required: false, description: 'Contratti SDM' },\n  'FATTURATO_SDM': { patterns: ['fatturato sdm'], required: false, description: 'Fatturato SDM' },\n  'SSC': { patterns: ['ssc'], required: false, description: 'Contratti SSC' },\n  'FATTURATO_SSC': { patterns: ['fatturato ssc'], required: false, description: 'Fatturato SSC' },\n  'YOUR_BACKUP': { patterns: ['your backup'], required: false, description: 'Contratti Your Backup' },\n  'FATTURATO_YOUR_BACKUP': { patterns: ['inflow your backup'], required: false, description: 'Fatturato Your Backup' },\n  'CLOUD_NAS': { patterns: ['cloud nas'], required: false, description: 'Contratti Cloud NAS' },\n  'FATTURATO_CLOUD_NAS': { patterns: ['inflow cloud nas'], required: false, description: 'Fatturato Cloud NAS' },\n  'EASY_GDPR': { patterns: ['easy gdpr'], required: false, description: 'Contratti Easy GDPR' },\n  'FATTURATO_EASY_GDPR': { patterns: ['fatturato easy gdpr'], required: false, description: 'Fatturato Easy GDPR' },\n  'MIIA': { patterns: ['miia'], required: false, description: 'Contratti MIIA' },\n  'FATTURATO_MIIA': { patterns: ['inflow miia'], required: false, description: 'Fatturato MIIA' },\n  'FATTURATO_NUOVO_CLIENTE': { patterns: ['fatturato nuovo cliente'], required: false, description: 'Fatturato Nuovo Cliente' },\n  'BSALES_MOBILE': { patterns: ['bsales mobile'], required: false, description: 'Contratti Bsales Mobile' },\n  'PDA_DIGITALE': { patterns: ['pda digitale'], required: false, description: 'Contratti PDA Digitale' },\n  \n  // Prodotti dati\n  'ADSL': {\n    patterns: ['adsl', 'adsl casa', 'internet casa'],\n    required: false,\n    description: 'Contratti ADSL'\n  },\n  'FIBRA': {\n    patterns: ['fibra', 'ftth', 'fibra ottica', 'fibra casa'],\n    required: false,\n    description: 'Contratti Fibra'\n  },\n  'FIBRA_BUSINESS': {\n    patterns: ['fibra business', 'fibra aziendale', 'ftth business'],\n    required: false,\n    description: 'Contratti Fibra Business'\n  },\n  \n  // Prodotti energia\n  \n  // Nuovi clienti e station\n  'NUOVO_CLIENTE': {\n    patterns: ['nuovo cliente', 'nuovi clienti', 'nc', 'new customers', 'clienti nuovi'],\n    required: false,\n    description: 'Nuovi Clienti acquisiti'\n  },\n  'STATION': {\n    patterns: ['station', 'tim station', 'negozi'],\n    required: false,\n    description: 'Contratti via Station'\n  },\n  \n  // Fastweb\n  'FASTWEB_ENERGIA': {\n    patterns: ['fastweb energia', 'fw energia', 'fastweb luce gas'],\n    required: false,\n    description: 'Contratti Fastweb Energia'\n  },\n  \n  // Altri campi utili\n  'TOTALE_PEZZI': {\n    patterns: ['totale pezzi', 'pezzi totali', 'tot pezzi', 'pieces'],\n    required: false,\n    description: 'Totale contratti/pezzi'\n  },\n  'NUMERO': {\n    patterns: ['n.', 'numero', 'n', '#', 'id'],\n    required: false,\n    description: 'Numero identificativo'\n  }\n};\n\n/**\n * 🔍 TROVA LA RIGA HEADER AUTOMATICAMENTE\n * Cerca la riga che contiene più keywords tipiche degli header\n */\nfunction findHeaderRow(worksheet) {\n  const range = XLSX.utils.decode_range(worksheet['!ref'] || 'A1:A1');\n  const headerKeywords = ['agente', 'nome', 'fatturato', 'rush', 'sm', 'coordinatore', 'inflow'];\n  \n  let bestRow = -1;\n  let bestScore = 0;\n  \n  // Controlla le prime 15 righe per trovare gli header\n  for (let row = 0; row <= Math.min(15, range.e.r); row++) {\n    let score = 0;\n    let cellCount = 0;\n    \n    for (let col = 0; col <= Math.min(50, range.e.c); col++) {\n      const cellRef = XLSX.utils.encode_cell({r: row, c: col});\n      const cell = worksheet[cellRef];\n      \n      if (cell && cell.v !== undefined && cell.v !== '') {\n        cellCount++;\n        const cellText = cell.v.toString().toLowerCase();\n        \n        // Conta quante keywords header sono presenti\n        for (const keyword of headerKeywords) {\n          if (cellText.includes(keyword)) {\n            score += 10;\n          }\n        }\n        \n        // Bonus se la cella sembra un header tipico\n        if (cellText.length > 2 && cellText.length < 35) {\n          score += 1;\n        }\n      }\n    }\n    \n    // Normalizza il punteggio e considera solo righe con almeno 5 header\n    if (cellCount > 5) {\n      const normalizedScore = score + cellCount;\n      if (normalizedScore > bestScore) {\n        bestScore = normalizedScore;\n        bestRow = row;\n      }\n    }\n  }\n  \n  if (bestRow === -1) {\n    throw new Error('Impossibile trovare una riga di header valida nel file.');\n  }\n\n  console.log(`✅ Riga header selezionata dinamicamente: ${bestRow + 1} (punteggio: ${bestScore})`);\n  return bestRow;\n}\n\n/**\n * 🎯 MAPPATURA INTELLIGENTE CON FUZZY MATCHING\n * Trova le colonne anche con piccole variazioni nei nomi\n */\nfunction createIntelligentMapping(worksheet, headerRow) {\n  const range = XLSX.utils.decode_range(worksheet['!ref'] || 'A1:A1');\n  const mapping = {};\n  const availableColumns = [];\n  const missingColumns = [];\n  const warnings = [];\n  \n  // Estrai tutti gli header disponibili\n  const headers = [];\n  for (let col = 0; col <= range.e.c; col++) {\n    const cellRef = XLSX.utils.encode_cell({r: headerRow, c: col});\n    const cell = worksheet[cellRef];\n    if (cell && cell.v !== undefined && cell.v !== '') {\n      const colLetter = XLSX.utils.encode_col(col);\n      const headerText = cell.v.toString().trim();\n      headers.push({ col: colLetter, name: headerText, normalized: headerText.toLowerCase() });\n      availableColumns.push(`${colLetter}: ${headerText}`);\n    }\n  }\n  \n  console.log(`📋 Trovati ${headers.length} header nel file`);\n  \n  const mappedHeaders = new Set();\n\n  // Fase 1: Cerca corrispondenze esatte per la massima precisione\n  for (const [fieldKey, fieldConfig] of Object.entries(DYNAMIC_FIELD_PATTERNS)) {\n    for (const header of headers) {\n      if (mappedHeaders.has(header.col)) continue; // Salta header già mappato\n\n      for (const pattern of fieldConfig.patterns) {\n        if (header.normalized === pattern.toLowerCase()) {\n          mapping[fieldKey] = header.col;\n          mappedHeaders.add(header.col);\n          console.log(`✅ [EXACT] ${fieldKey} → ${header.col} (\"${header.name}\")`);\n          break; // Trovato, passa al campo successivo\n        }\n      }\n      if (mapping[fieldKey]) break; // Trovato, passa al campo successivo\n    }\n  }\n\n  // Fase 2: Cerca corrispondenze parziali per i campi non ancora mappati\n  for (const [fieldKey, fieldConfig] of Object.entries(DYNAMIC_FIELD_PATTERNS)) {\n    if (mapping[fieldKey]) continue; // Salta i campi già mappati\n\n    let bestMatch = null;\n    let bestScore = 0;\n\n    for (const header of headers) {\n      if (mappedHeaders.has(header.col)) continue;\n\n      for (const pattern of fieldConfig.patterns) {\n        let score = 0;\n        const normalizedPattern = pattern.toLowerCase();\n\n        // Evita che \"fatturato\" matchi \"fatturato complessivo\"\n        if (fieldKey === 'FATTURATO_RUSH' && header.normalized.includes('complessivo')) {\n            continue;\n        }\n\n        if (header.normalized.includes(normalizedPattern)) {\n          // Privilegia i match più lunghi e specifici\n          score = 80 + normalizedPattern.length;\n        } else if (normalizedPattern.includes(header.normalized)) {\n          score = 60 + header.normalized.length;\n        }\n\n        if (score > bestScore) {\n          bestScore = score;\n          bestMatch = header;\n        }\n      }\n    }\n\n    if (bestMatch) {\n      mapping[fieldKey] = bestMatch.col;\n      mappedHeaders.add(bestMatch.col);\n      console.log(`✅ [PARTIAL] ${fieldKey} → ${bestMatch.col} (\"${bestMatch.name}\") [score: ${bestScore}]`);\n    } else {\n      if (fieldConfig.required) {\n        missingColumns.push({\n          field: fieldKey,\n          patterns: fieldConfig.patterns,\n          required: true,\n          description: fieldConfig.description\n        });\n        console.warn(`❌ OBBLIGATORIO MANCANTE: ${fieldKey}`);\n      } else {\n        warnings.push({\n          field: fieldKey,\n          patterns: fieldConfig.patterns,\n          required: false,\n          description: fieldConfig.description\n        });\n        console.log(`⚠️ Opzionale mancante: ${fieldKey} (sarà 0)`);\n      }\n    }\n  }\n  \n  return { \n    mapping, \n    missingColumns, \n    warnings, \n    availableColumns,\n    totalColumns: headers.length \n  };\n}\n\n/**\n * 📊 PARSING DINAMICO DI UNA RIGA AGENTE\n */\nfunction parseAgentRow(worksheet, row, mapping) {\n  const getColumnValue = (fieldKey, expectedType = 'auto') => {\n    const column = mapping[fieldKey];\n    if (!column) return expectedType === 'number' ? 0 : '';\n    \n    const cellRef = `${column}${row + 1}`;\n    const cell = worksheet[cellRef];\n    return cleanCellValue(cell, expectedType);\n  };\n  \n  const agent = {};\n  \n  // Campi base (obbligatori)\n  agent.nome = getColumnValue('AGENTE', 'string');\n  agent.sm = getColumnValue('SM', 'string');\n  agent.distretto = getColumnValue('DISTRETTO', 'string');\n  \n  // 🔧 FIX: Metriche finanziarie con calcolo corretto\n  agent.fatturatoRush = getColumnValue('FATTURATO_RUSH', 'number');\n  agent.bonusRisultati = getColumnValue('BONUS_RISULTATI', 'number');\n  \n  // ⭐️ NUOVA STRUTTURA DATI PER IL FRONTEND (basata sui requisiti)\n  agent.fatturato = {\n    complessivo: getColumnValue('FATTURATO_COMPLESSIVO', 'number')\n  };\n\n  // Prodotti voce\n  agent.simVoce = getColumnValue('SIM_VOCE', 'number');\n  \n  // Prodotti dati\n  agent.adsl = getColumnValue('ADSL', 'number');\n  agent.simDati = getColumnValue('SIM_DATI', 'number');\n  agent.fibra = getColumnValue('FIBRA', 'number');\n  agent.fibraBusiness = getColumnValue('FIBRA_BUSINESS', 'number');\n  \n  // Prodotti energia\n  agent.fastwebEnergia = getColumnValue('FASTWEB_ENERGIA', 'number');\n  \n  // Altri\n  agent.nuovoCliente = getColumnValue('NUOVO_CLIENTE', 'number');\n  agent.station = getColumnValue('STATION', 'number');\n  agent.mnp = getColumnValue('MNP', 'number');\n  \n  // Altri campi opzionali\n  agent.totalePezzi = getColumnValue('TOTALE_PEZZI', 'number');\n  agent.numero = getColumnValue('NUMERO', 'string');\n\n  // Nuovi campi aggiunti\n  agent.easyRent = getColumnValue('EASY_RENT', 'number');\n  agent.linkOu = getColumnValue('LINK_OU', 'number');\n  agent.linkOa = getColumnValue('LINK_OA', 'number');\n  agent.linkOaStart = getColumnValue('LINK_OA_START', 'number');\n  agent.interniOa = getColumnValue('INTERNI_OA', 'number');\n  agent.fatturatoVoce = getColumnValue('FATTURATO_VOCE', 'number');\n  agent.fatturatoDati = getColumnValue('FATTURATO_DATI', 'number');\n  agent.fatturatoEasyRent = getColumnValue('FATTURATO_EASY_RENT', 'number');\n  agent.fatturatoOu = getColumnValue('FATTURATO_OU', 'number');\n  agent.fatturatoOa = getColumnValue('FATTURATO_OA', 'number');\n  agent.fatturatoEasyDeal = getColumnValue('FATTURATO_EASY_DEAL', 'number');\n  agent.fatturatoAltro = getColumnValue('FATTURATO_ALTRO', 'number');\n  agent.fatturatoServiziDigitali = getColumnValue('FATTURATO_SERVIZI_DIGITALI', 'number');\n  agent.fatturatoCustom = getColumnValue('FATTURATO_CUSTOM', 'number');\n  agent.sdm = getColumnValue('SDM', 'number');\n  agent.fatturatoSdm = getColumnValue('FATTURATO_SDM', 'number');\n  agent.ssc = getColumnValue('SSC', 'number');\n  agent.fatturatoSsc = getColumnValue('FATTURATO_SSC', 'number');\n  agent.yourBackup = getColumnValue('YOUR_BACKUP', 'number');\n  agent.fatturatoYourBackup = getColumnValue('FATTURATO_YOUR_BACKUP', 'number');\n  agent.cloudNas = getColumnValue('CLOUD_NAS', 'number');\n  agent.fatturatoCloudNas = getColumnValue('FATTURATO_CLOUD_NAS', 'number');\n  agent.easyGdpr = getColumnValue('EASY_GDPR', 'number');\n  agent.fatturatoEasyGdpr = getColumnValue('FATTURATO_EASY_GDPR', 'number');\n  agent.miia = getColumnValue('MIIA', 'number');\n  agent.fatturatoMiia = getColumnValue('FATTURATO_MIIA', 'number');\n  agent.fatturatoNuovoCliente = getColumnValue('FATTURATO_NUOVO_CLIENTE', 'number');\n  agent.bsalesMobile = getColumnValue('BSALES_MOBILE', 'number');\n  agent.pdaDigitale = getColumnValue('PDA_DIGITALE', 'number');\n  \n  // 🔧 FIX: Calcoli derivati corretti\n  agent.totaleVoce = agent.simVoce; // Aggiornato dopo rimozione di casa e business\n  agent.totaleDati = agent.adsl + agent.fibra + agent.fibraBusiness + agent.simDati;\n  agent.totaleFastweb = agent.fastwebEnergia; // Aggiornato dopo rimozione di altri campi fastweb\n\n  // Calcolo aggregato di tutti i nuovi fatturati per prodotto/servizio\n  agent.fatturatoProdotti =\n    agent.fatturatoVoce +\n    agent.fatturatoDati +\n    agent.fatturatoEasyRent +\n    agent.fatturatoOu +\n    agent.fatturatoOa +\n    agent.fatturatoEasyDeal +\n    agent.fatturatoAltro +\n    agent.fatturatoServiziDigitali +\n    agent.fatturatoCustom +\n    agent.fatturatoSdm +\n    agent.fatturatoSsc +\n    agent.fatturatoYourBackup +\n    agent.fatturatoCloudNas +\n    agent.fatturatoEasyGdpr +\n    agent.fatturatoMiia +\n    agent.fatturatoNuovoCliente;\n  \n  return agent;\n}\n\n/**\n * 🛠️ UTILITY FUNCTIONS\n */\nfunction columnToIndex(column) {\n  let result = 0;\n  for (let i = 0; i < column.length; i++) {\n    result = result * 26 + (column.charCodeAt(i) - 'A'.charCodeAt(0) + 1);\n  }\n  return result - 1;\n}\n\nfunction extractDateFromFilename(filename) {\n  // Pattern per data nel formato YYYY.MM.DD\n  const dateMatch = filename.match(/(\\d{4})\\.(\\d{2})\\.(\\d{2})/);\n  if (!dateMatch) {\n    throw new Error('Nome file non valido. Formato atteso: YYYY.MM.DD');\n  }\n  \n  const year = parseInt(dateMatch[1]);\n  const month = parseInt(dateMatch[2]);\n  const day = parseInt(dateMatch[3]);\n  \n  return {\n    year,\n    month,\n    day,\n    dateString: `${dateMatch[1]}-${dateMatch[2]}-${dateMatch[3]}`,\n    displayDate: `${month}/${year}`\n  };\n}\n\nfunction cleanCellValue(cell, expectedType = 'auto') {\n  if (!cell || cell.v === undefined || cell.v === null || cell.v === '') {\n    return expectedType === 'number' ? 0 : '';\n  }\n  \n  let value = cell.v;\n  \n  if (expectedType === 'number') {\n    if (typeof value === 'number') return value;\n    if (typeof value === 'string') {\n      // Rimuovi simboli di valuta e separatori, mantenendo la virgola per i decimali\n      value = value.toString().replace(/[€$.\\s]/g, '').replace(',', '.');\n      const parsed = parseFloat(value);\n      return isNaN(parsed) ? 0 : parsed;\n    }\n    return 0;\n  }\n  \n  if (expectedType === 'string') {\n    return value.toString().trim();\n  }\n  \n  // Auto-detect\n  if (typeof value === 'number') return value;\n  return value.toString().trim();\n}\n\n/**\n * 💰 UTILITY FUNCTIONS - Formattazione e Ordinamento\n */\nexport function formatCurrency(value) {\n  if (!value || isNaN(value)) return '€0';\n  return new Intl.NumberFormat('it-IT', {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(value);\n}\n\nexport function formatNumber(value) {\n  if (!value || isNaN(value)) return '0';\n  return new Intl.NumberFormat('it-IT', {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(value);\n}\n\n/**\n * 📅 ORDINAMENTO FILE PER DATA NEL NOME (non data upload)\n */\nexport function sortFilesByDate(files) {\n  return [...files].sort((a, b) => {\n    try {\n      // Estrai la data dal nome del file o usa la proprietà date\n      const dateA = a.date || extractDateFromFilename(a.name).dateString;\n      const dateB = b.date || extractDateFromFilename(b.name).dateString;\n      \n      // Ordina dal più recente al più vecchio\n      return new Date(dateB) - new Date(dateA);\n    } catch (error) {\n      console.warn('Errore nell\\'ordinamento dei file:', error);\n      // Fallback: ordina per nome\n      return b.name.localeCompare(a.name);\n    }\n  });\n}\n\n/**\n * 🚀 PARSING PRINCIPALE - DINAMICO E INTELLIGENTE\n */\nexport async function parseExcelFile(file, userMapping = null) {\n  try {\n    console.log('🔄 Inizio parsing dinamico:', file.name);\n    \n    // Estrai data dal nome file\n    const dateInfo = extractDateFromFilename(file.name);\n    console.log('📅 Data estratta:', dateInfo);\n    \n    // Leggi il file Excel\n    const arrayBuffer = await file.arrayBuffer();\n    const workbook = XLSX.read(arrayBuffer, { type: 'array' });\n    \n    if (!workbook.SheetNames.length) {\n      throw new Error('Il file Excel non contiene fogli di lavoro');\n    }\n    \n    const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n    console.log('📊 Foglio selezionato:', workbook.SheetNames[0]);\n    \n    // 🔍 Trova automaticamente la riga header\n    const headerRow = findHeaderRow(worksheet);\n    \n    // 🧠 Crea mappatura intelligente\n    const { mapping, missingColumns, warnings, availableColumns, totalColumns } = \n      createIntelligentMapping(worksheet, headerRow);\n    \n    console.log('🎯 Mappatura creata:', Object.keys(mapping).length, 'campi mappati');\n    console.log('⚠️ Campi mancanti obbligatori:', missingColumns.length);\n    console.log('💡 Campi opzionali mancanti:', warnings.length);\n    \n    // 🚨 CONTROLLO ERRORI CRITICI\n    if (missingColumns.length > 0) {\n      const criticalMissing = missingColumns.map(c => c.field).join(', ');\n      console.error('❌ CAMPI OBBLIGATORI MANCANTI:', criticalMissing);\n      \n      return {\n        success: false,\n        needsMapping: true,\n        error: `Campi obbligatori mancanti: ${criticalMissing}`,\n        missingColumns,\n        availableColumns,\n        totalColumns\n      };\n    }\n    \n    // Parsa i dati\n    const range = XLSX.utils.decode_range(worksheet['!ref'] || 'A1:A1');\n    const agents = [];\n    const smStats = new Map();\n    \n    console.log('🏁 Parsing righe da', headerRow + 1, 'a', range.e.r);\n    \n    for (let row = headerRow + 1; row <= range.e.r; row++) {\n      try {\n        // Controlla se la riga ha dati (colonna agente)\n        const agentCol = mapping['AGENTE'];\n        if (!agentCol) continue;\n        \n        const agentCell = worksheet[XLSX.utils.encode_cell({r: row, c: columnToIndex(agentCol)})];\n        if (!agentCell || !agentCell.v || agentCell.v.toString().trim() === '') {\n          continue;\n        }\n        \n        // Parsa la riga\n        const agent = parseAgentRow(worksheet, row, mapping);\n        \n        // Validazione\n        if (!agent.nome || agent.nome.trim() === '') continue;\n        if (!agent.sm || agent.sm.trim() === '') continue;\n        \n        agents.push(agent);\n        \n        // Accumula statistiche SM\n        if (!smStats.has(agent.sm)) {\n          smStats.set(agent.sm, {\n            nome: agent.sm,\n            agenti: [],\n            fatturatoTotale: 0,\n            fatturatoRush: 0,\n            nuovoCliente: 0,\n            totaleFastweb: 0\n          });\n        }\n        \n        const smData = smStats.get(agent.sm);\n        smData.agenti.push(agent);\n        smData.fatturatoTotale += agent.fatturato.complessivo;\n        smData.fatturatoRush += agent.fatturatoRush;\n        smData.nuovoCliente += agent.nuovoCliente;\n        smData.totaleFastweb += agent.totaleFastweb;\n        \n      } catch (error) {\n        console.warn(`Errore riga ${row + 1}:`, error);\n        continue;\n      }\n    }\n    \n    console.log(`✅ Parsing completato: ${agents.length} agenti trovati`);\n    \n    // 🔧 FIX: Calcola i totali CORRETTI\n    const totals = agents.reduce((acc, agent) => {\n      acc.totalRevenue += agent.fatturato.complessivo;\n      acc.totalRush += agent.fatturatoRush;\n      acc.totalNewClients += agent.nuovoCliente;\n      acc.totalFastweb += agent.totaleFastweb;\n      return acc;\n    }, {\n      totalRevenue: 0,\n      totalRush: 0,\n      totalNewClients: 0,\n      totalFastweb: 0\n    });\n    \n    console.log('💰 Totali calcolati:', {\n      fatturato: formatCurrency(totals.totalRevenue),\n      fatturatoRush: formatCurrency(totals.totalRush),\n      nuovoCliente: totals.totalNewClients,\n      fastweb: totals.totalFastweb\n    });\n    \n    // Struttura risultato\n    const result = {\n      success: true,\n      data: {\n        agents,\n        smData: Array.from(smStats.values()),\n        fileInfo: {\n          name: file.name,\n          dateInfo,\n          parsedRows: agents.length,\n          headerRow: headerRow + 1,\n          totalColumns\n        },\n        metadata: {\n          totalAgents: agents.length,\n          totalSMs: smStats.size,\n          totalRevenue: totals.totalRevenue,\n          totalRush: totals.totalRush,\n          totalNewClients: totals.totalNewClients,\n          totalFastweb: totals.totalFastweb,\n          dateInfo,\n          warnings: warnings.length > 0 ? warnings : null\n        }\n      }\n    };\n    \n    console.log('🎉 Parsing completato con successo!');\n    return result;\n    \n  } catch (error) {\n    console.error('❌ Errore parsing:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n}","import React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nconst ConfirmationDialog = ({ open, onClose, onConfirm, title, message }) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {message}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Annulla\n        </Button>\n        <Button onClick={onConfirm} color=\"primary\" autoFocus>\n          Conferma\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ConfirmationDialog;\n","export const formatAgentName = (name) => {\n  if (typeof name !== 'string' || !name) {\n    return 'N/A';\n  }\n  return name\n    .split('.')\n    .map(part => part.charAt(0).toUpperCase() + part.slice(1))\n    .join(' ');\n};\n","import React from 'react';\nimport { formatCurrency } from '../utils/excelParser';\nimport { DollarSign, TrendingUp, Award, User, Package } from 'lucide-react';\nimport './AgentCard.css';\nimport { formatAgentName } from '../utils/formatter';\n\nconst AgentCard = ({ agent, onClick }) => {\n  // Determina la classe di performance basata sul fatturato rush\n  const getPerformanceClass = (fatturatoRush) => {\n    if (fatturatoRush > 1000) return 'performance-high';\n    if (fatturatoRush > 500) return 'performance-medium';\n    return 'performance-low';\n  };\n\n  // Trova i 2-3 prodotti con il maggior numero di pezzi\n  const getTopProducts = (agentData) => {\n    const productFields = ['simVoce', 'simDati', 'mnp', 'easyRent', 'adsl', 'linkOu', 'linkOa', 'sdm', 'ssc', 'yourBackup', 'cloudNas', 'miia', 'easyGdpr'];\n    return productFields\n      .map(key => ({ name: key, value: agentData[key] || 0 }))\n      .filter(p => p.value > 0)\n      .sort((a, b) => b.value - a.value)\n      .slice(0, 3)\n      .map(p => ({\n        name: p.name.replace(/([A-Z])/g, ' $1').replace(/^./, (str) => str.toUpperCase()),\n        value: p.value\n      }));\n  };\n\n  const topProducts = getTopProducts(agent);\n  const performanceClass = getPerformanceClass(agent.fatturatoRush);\n\n  const Stat = ({ icon, label, value }) => (\n    <div className=\"stat-item-modern\">\n      <div className=\"stat-icon-modern\">{icon}</div>\n      <div className=\"stat-content-modern\">\n        <span className=\"label\">{label}</span>\n        <span className=\"value\">{value}</span>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"agent-card-modern\" onClick={() => onClick(agent)}>\n      {/* Header Moderno */}\n      <div className={`card-header-modern ${performanceClass}`}>\n        <div className=\"avatar-modern\">\n          <User size={24} />\n        </div>\n        <div className=\"info-modern\">\n          <h3 className=\"name-modern\">{agent.nome}</h3>\n          <p className=\"sm-modern\">{agent.sm ? formatAgentName(agent.sm) : 'N/A'}</p>\n        </div>\n      </div>\n\n      {/* Corpo Moderno */}\n      <div className=\"card-body-modern\">\n        <div className=\"stats-grid-modern\">\n          <Stat \n            icon={<DollarSign size={20} />} \n            label=\"Fatturato\" \n            value={formatCurrency(agent.fatturato?.complessivo || 0)} \n          />\n          <Stat \n            icon={<TrendingUp size={20} />} \n            label=\"Rush\" \n            value={formatCurrency(agent.fatturatoRush || 0)} \n          />\n          <Stat \n            icon={<Award size={20} />} \n            label=\"Bonus\" \n            value={formatCurrency(agent.bonusRisultati || 0)} \n          />\n        </div>\n      </div>\n\n      {/* Footer Moderno */}\n      <div className=\"card-footer-modern\">\n        <h4 className=\"footer-title-modern\">\n          <Package size={16} />\n          Top Prodotti\n        </h4>\n        <div className=\"products-container-modern\">\n          {topProducts.length > 0 ? (\n            topProducts.map(p => (\n              <div key={p.name} className=\"product-badge-modern\">\n                {p.name}: <strong>{p.value}</strong>\n              </div>\n            ))\n          ) : (\n            <p className=\"no-products-modern\">Nessun prodotto di punta</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AgentCard;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { User, TrendingUp, DollarSign, Award, Phone, Smartphone, Globe, Shield, X, Calendar, MapPin, Zap, Package, ChevronDown, BarChart3 } from 'lucide-react';\nimport { formatCurrency, formatNumber } from '../utils/excelParser';\nimport { formatAgentName } from '../utils/formatter';\n\nconst EmptyState = ({ message }) => (\n  <div className=\"empty-state-compact\">\n    <Package size={32} className=\"empty-icon\" />\n    <p className=\"empty-message\">{message}</p>\n  </div>\n);\n\nconst StatItem = ({ label, value, isCurrency = false, icon: Icon }) => {\n  const formattedValue = isCurrency ? formatCurrency(value || 0) : formatNumber(value || 0);\n  if (value === 0 || value === undefined) return null;\n\n  return (\n    <div className=\"modern-stat-item group hover:scale-105 transition-all duration-300\">\n      <div className=\"stat-icon\">\n        {Icon && <Icon size={20} />}\n      </div>\n      <div className=\"stat-content\">\n        <span className=\"stat-label\">{label}</span>\n        <span className=\"stat-value\">{formattedValue}</span>\n      </div>\n    </div>\n  );\n};\n\nconst KpiTrend = ({ currentValue, historicalValues, dataKey }) => {\n  if (!historicalValues || historicalValues.length < 1) {\n    return <span className=\"kpi-trend neutral\">N/A</span>;\n  }\n\n  const lastMonthData = historicalValues[historicalValues.length - 1];\n  const previousValue = lastMonthData ? lastMonthData[dataKey] : 0;\n\n  if (currentValue > 0 && previousValue === 0) {\n    return <span className=\"kpi-trend positive\">In crescita</span>;\n  }\n\n  if (previousValue === 0) {\n    return <span className=\"kpi-trend neutral\">N/A</span>;\n  }\n\n  const percentageChange = ((currentValue - previousValue) / previousValue) * 100;\n\n  if (Math.abs(percentageChange) < 1) {\n    return <span className=\"kpi-trend neutral\">Stabile</span>;\n  }\n\n  if (percentageChange > 0) {\n    return <span className=\"kpi-trend positive\">+{percentageChange.toFixed(0)}%</span>;\n  } else {\n    return <span className=\"kpi-trend negative\">{percentageChange.toFixed(0)}%</span>;\n  }\n};\n\nconst AgentModal = ({ agent, allData, onClose }) => {\n  const [activeSection, setActiveSection] = useState(null);\n\n  const toggleSection = (sectionId) => {\n    setActiveSection(activeSection === sectionId ? null : sectionId);\n  };\n\n  useEffect(() => {\n    const handleEsc = (event) => {\n      if (event.keyCode === 27) onClose();\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [onClose]);\n\n  const historicalData = useMemo(() => {\n    if (!agent || !allData || !allData.uploadedFiles) {\n      return [];\n    }\n    return allData.uploadedFiles\n      .map(file => {\n        const agentData = file.data?.agents?.find(a => a.nome === agent.originalNome);\n        return agentData ? {\n          name: file.displayDate, // Mappato da 'period' a 'name' per il grafico\n          rush: agentData.fatturatoRush || 0, // Mappato da 'fatturatoRush' a 'rush'\n          fatturato: agentData.fatturato?.complessivo || 0, // Mappato da 'revenue' a 'fatturato'\n        } : null;\n      })\n      .filter(Boolean)\n      .reverse(); // Ordine cronologico per il grafico\n  }, [agent, allData]);\n\n  if (!agent) return null;\n\n  const getAvatarColor = (name) => {\n    const colors = [\n      'bg-gradient-to-br from-blue-500 to-blue-600',\n      'bg-gradient-to-br from-green-500 to-green-600',\n      'bg-gradient-to-br from-purple-500 to-purple-600',\n      'bg-gradient-to-br from-orange-500 to-orange-600',\n      'bg-gradient-to-br from-pink-500 to-pink-600',\n      'bg-gradient-to-br from-indigo-500 to-indigo-600',\n    ];\n    const index = (name || '').length % colors.length;\n    return colors[index];\n  };\n\n  const getProductCount = (category) => {\n    switch (category) {\n      case 'fatturati':\n        return [\n          agent.fatturatoVoce, agent.fatturatoDati, agent.fatturatoEasyRent,\n          agent.fatturatoOu, agent.fatturatoOa, agent.fatturatoEasyDeal,\n          agent.fatturatoServiziDigitali, agent.fatturatoAltro, agent.fatturatoCustom,\n          agent.fatturatoSdm, agent.fatturatoSsc, agent.fatturatoYourBackup,\n          agent.fatturatoCloudNas, agent.fatturatoEasyGdpr, agent.fatturatoMiia,\n          agent.fatturatoNuovoCliente\n        ].filter(val => val && val > 0).length;\n\n      case 'digitali':\n        return [\n          agent.sdm, agent.ssc, agent.yourBackup, agent.cloudNas,\n          agent.miia, agent.easyGdpr\n        ].filter(val => val && val > 0).length;\n\n      case 'telefonia':\n        return [\n          agent.adsl, agent.linkOu, agent.linkOa, agent.simVoce,\n          agent.simDati, agent.mnp, agent.easyRent, agent.linkOaStart,\n          agent.interniOa\n        ].filter(val => val && val > 0).length;\n\n      case 'energia':\n        return [agent.fastwebEnergia].filter(val => val && val > 0).length;\n\n      default:\n        return 0;\n    }\n  };\n\n  return ReactDOM.createPortal(\n    <div className=\"modal-overlay-modern\" onClick={onClose}>\n      <div className=\"modal-content-modern\" onClick={(e) => e.stopPropagation()}>\n        {/* Header modernizzato */}\n        <div className=\"modal-header-modern\">\n          <div className=\"agent-profile\">\n            <div className={`avatar-modern ${getAvatarColor(agent.nome)}`}>\n              <User size={32} className=\"text-white\" />\n            </div>\n            <div className=\"agent-info\">\n              <h1 className=\"agent-name\">{agent.nome}</h1>\n              <div className=\"agent-details\">\n                <div className=\"detail-item\">\n                  <User size={16} />\n                  <span>{agent.sm ? formatAgentName(agent.sm) : ''}</span>\n                </div>\n                <div className=\"detail-item\">\n                  <MapPin size={16} />\n                  <span>{agent.distretto}</span>\n                </div>\n                <div className=\"detail-item\">\n                  <Calendar size={16} />\n                  <span>Ultimo aggiornamento: oggi</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <button className=\"close-button-modern\" onClick={onClose}>\n            <X size={24} />\n          </button>\n        </div>\n\n        {/* KPI Cards */}\n        <div className=\"kpi-section\">\n          <div className=\"kpi-card accent\">\n            <div className=\"kpi-icon\">\n              <TrendingUp size={28} />\n            </div>\n            <div className=\"kpi-content\">\n              <span className=\"kpi-label\">Fatturato Rush</span>\n              <span className=\"kpi-value\">{formatCurrency(agent.fatturatoRush || 0)}</span>\n              <KpiTrend currentValue={agent.fatturatoRush || 0} historicalValues={historicalData} dataKey=\"rush\" />\n            </div>\n          </div>\n\n          <div className=\"kpi-card primary\">\n            <div className=\"kpi-icon\">\n              <DollarSign size={28} />\n            </div>\n            <div className=\"kpi-content\">\n              <span className=\"kpi-label\">Fatturato Complessivo</span>\n              <span className=\"kpi-value\">{formatCurrency(agent.fatturato?.complessivo || 0)}</span>\n              <KpiTrend currentValue={agent.fatturato?.complessivo || 0} historicalValues={historicalData} dataKey=\"fatturato\" />\n            </div>\n          </div>\n\n          <div className=\"kpi-card success\">\n            <div className=\"kpi-icon\">\n              <Award size={28} />\n            </div>\n            <div className=\"kpi-content\">\n              <span className=\"kpi-label\">Bonus Risultati</span>\n              <span className=\"kpi-value\">{formatCurrency(agent.bonusRisultati || 0)}</span>\n            </div>\n          </div>\n\n          <div className=\"kpi-card info\">\n            <div className=\"kpi-icon\">\n              <User size={28} />\n            </div>\n            <div className=\"kpi-content\">\n              <span className=\"kpi-label\">Nuovi Clienti</span>\n              <span className=\"kpi-value\">{formatNumber(agent.nuovoCliente || 0)}</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Performance Chart */}\n        <div className=\"chart-section\">\n          <h3 className=\"section-title\">\n            <TrendingUp size={20} />\n            Trend Performance Storico\n          </h3>\n          <div className=\"chart-container-modern\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={historicalData}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e2e8f0\" />\n                <XAxis dataKey=\"name\" stroke=\"#64748b\" />\n                <YAxis yAxisId=\"left\" stroke=\"#10b981\" />\n                <YAxis yAxisId=\"right\" orientation=\"right\" stroke=\"#3b82f6\" />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: '#ffffff',\n                    border: '1px solid #e2e8f0',\n                    borderRadius: '8px',\n                    boxShadow: '0 10px 25px rgba(0,0,0,0.1)'\n                  }}\n                />\n                <Legend />\n                <Line\n                  yAxisId=\"left\"\n                  type=\"monotone\"\n                  dataKey=\"rush\"\n                  stroke=\"#10b981\"\n                  strokeWidth={3}\n                  name=\"Fatturato Rush\"\n                  dot={{ fill: '#10b981', strokeWidth: 2, r: 4 }}\n                />\n                <Line\n                  yAxisId=\"right\"\n                  type=\"monotone\"\n                  dataKey=\"fatturato\"\n                  stroke=\"#3b82f6\"\n                  strokeWidth={3}\n                  name=\"Fatturato Totale\"\n                  dot={{ fill: '#3b82f6', strokeWidth: 2, r: 4 }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Accordion Section */}\n        <div className=\"accordion-section\">\n          <h3 className=\"section-title\">\n            <BarChart3 size={20} />\n            Dettaglio Performance Prodotti\n          </h3>\n\n          {/* Accordion Item 1 - Fatturati */}\n          <div className=\"accordion-item\">\n            <button\n              className={`accordion-header ${activeSection === 'fatturati' ? 'active' : ''}`}\n              onClick={() => toggleSection('fatturati')}\n            >\n              <div className=\"accordion-title\">\n                <DollarSign size={18} />\n                <span>Dettaglio Fatturati</span>\n              </div>\n              <div className=\"accordion-meta\">\n                <span className=\"count-badge\">{getProductCount('fatturati')}</span>\n                <ChevronDown size={16} className={`chevron ${activeSection === 'fatturati' ? 'rotated' : ''}`} />\n              </div>\n            </button>\n            {activeSection === 'fatturati' && (\n              <div className=\"accordion-content\">\n                {getProductCount('fatturati') > 0 ? (\n                  <div className=\"stats-grid-compact\">\n                    <StatItem label=\"Fatturato Voce\" value={agent.fatturatoVoce} isCurrency icon={Phone} />\n                    <StatItem label=\"Fatturato Dati\" value={agent.fatturatoDati} isCurrency icon={Globe} />\n                    <StatItem label=\"Fatturato Easy Rent\" value={agent.fatturatoEasyRent} isCurrency icon={Smartphone} />\n                    <StatItem label=\"Fatturato OU\" value={agent.fatturatoOu} isCurrency icon={DollarSign} />\n                    <StatItem label=\"Fatturato OA\" value={agent.fatturatoOa} isCurrency icon={DollarSign} />\n                    <StatItem label=\"Fatturato Easy Deal\" value={agent.fatturatoEasyDeal} isCurrency icon={Award} />\n                    <StatItem label=\"Fatturato Servizi Digitali\" value={agent.fatturatoServiziDigitali} isCurrency icon={Shield} />\n                    <StatItem label=\"Fatturato Altro\" value={agent.fatturatoAltro} isCurrency icon={DollarSign} />\n                    <StatItem label=\"Fatturato Custom\" value={agent.fatturatoCustom} isCurrency icon={DollarSign} />\n                    <StatItem label=\"Fatturato SDM\" value={agent.fatturatoSdm} isCurrency icon={Shield} />\n                    <StatItem label=\"Fatturato SSC\" value={agent.fatturatoSsc} isCurrency icon={Globe} />\n                    <StatItem label=\"Fatturato Your Backup\" value={agent.fatturatoYourBackup} isCurrency icon={Shield} />\n                    <StatItem label=\"Fatturato Cloud NAS\" value={agent.fatturatoCloudNas} isCurrency icon={Globe} />\n                    <StatItem label=\"Fatturato Easy GDPR\" value={agent.fatturatoEasyGdpr} isCurrency icon={Shield} />\n                    <StatItem label=\"Fatturato MIIA\" value={agent.fatturatoMiia} isCurrency icon={Shield} />\n                    <StatItem label=\"Fatturato Nuovo Cliente\" value={agent.fatturatoNuovoCliente} isCurrency icon={User} />\n                  </div>\n                ) : (\n                  <EmptyState message=\"Nessun dato fatturato disponibile\" />\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Accordion Item 2 - Servizi Digitali */}\n          <div className=\"accordion-item\">\n            <button\n              className={`accordion-header ${activeSection === 'digitali' ? 'active' : ''}`}\n              onClick={() => toggleSection('digitali')}\n            >\n              <div className=\"accordion-title\">\n                <Shield size={18} />\n                <span>Servizi Digitali</span>\n              </div>\n              <div className=\"accordion-meta\">\n                <span className=\"count-badge\">{getProductCount('digitali')}</span>\n                <ChevronDown size={16} className={`chevron ${activeSection === 'digitali' ? 'rotated' : ''}`} />\n              </div>\n            </button>\n            {activeSection === 'digitali' && (\n              <div className=\"accordion-content\">\n                {getProductCount('digitali') > 0 ? (\n                  <div className=\"stats-grid-compact\">\n                    <StatItem label=\"SDM\" value={agent.sdm} icon={Shield} />\n                    <StatItem label=\"SSC\" value={agent.ssc} icon={Globe} />\n                    <StatItem label=\"Your Backup\" value={agent.yourBackup} icon={Shield} />\n                    <StatItem label=\"Cloud NAS\" value={agent.cloudNas} icon={Globe} />\n                    <StatItem label=\"MIIA\" value={agent.miia} icon={Shield} />\n                    <StatItem label=\"Easy GDPR\" value={agent.easyGdpr} icon={Shield} />\n                  </div>\n                ) : (\n                  <EmptyState message=\"Nessun servizio digitale attivo\" />\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Accordion Item 3 - Telefonia */}\n          <div className=\"accordion-item\">\n            <button\n              className={`accordion-header ${activeSection === 'telefonia' ? 'active' : ''}`}\n              onClick={() => toggleSection('telefonia')}\n            >\n              <div className=\"accordion-title\">\n                <Phone size={18} />\n                <span>Telefonia</span>\n              </div>\n              <div className=\"accordion-meta\">\n                <span className=\"count-badge\">{getProductCount('telefonia')}</span>\n                <ChevronDown size={16} className={`chevron ${activeSection === 'telefonia' ? 'rotated' : ''}`} />\n              </div>\n            </button>\n            {activeSection === 'telefonia' && (\n              <div className=\"accordion-content\">\n                {getProductCount('telefonia') > 0 ? (\n                  <div className=\"stats-grid-compact\">\n                    <StatItem label=\"ADSL\" value={agent.adsl} icon={Globe} />\n                    <StatItem label=\"Link OU\" value={agent.linkOu} icon={Phone} />\n                    <StatItem label=\"Link OA\" value={agent.linkOa} icon={Phone} />\n                    <StatItem label=\"SIM Voce\" value={agent.simVoce} icon={Phone} />\n                    <StatItem label=\"SIM Dati\" value={agent.simDati} icon={Smartphone} />\n                    <StatItem label=\"MNP\" value={agent.mnp} icon={Smartphone} />\n                    <StatItem label=\"Easy Rent\" value={agent.easyRent} icon={Award} />\n                    <StatItem label=\"Link OA Start\" value={agent.linkOaStart} icon={Phone} />\n                    <StatItem label=\"Interni OA\" value={agent.interniOa} icon={Phone} />\n                  </div>\n                ) : (\n                  <EmptyState message=\"Nessun contratto telefonico attivo\" />\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Accordion Item 4 - Energia */}\n          <div className=\"accordion-item\">\n            <button\n              className={`accordion-header ${activeSection === 'energia' ? 'active' : ''}`}\n              onClick={() => toggleSection('energia')}\n            >\n              <div className=\"accordion-title\">\n                <Zap size={18} />\n                <span>Energia</span>\n              </div>\n              <div className=\"accordion-meta\">\n                <span className=\"count-badge\">{getProductCount('energia')}</span>\n                <ChevronDown size={16} className={`chevron ${activeSection === 'energia' ? 'rotated' : ''}`} />\n              </div>\n            </button>\n            {activeSection === 'energia' && (\n              <div className=\"accordion-content\">\n                {getProductCount('energia') > 0 ? (\n                  <div className=\"stats-grid-compact\">\n                    <StatItem label=\"Fastweb Energia\" value={agent.fastwebEnergia} icon={Zap} />\n                  </div>\n                ) : (\n                  <EmptyState message=\"Nessun contratto energia attivo\" />\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"modal-footer-modern\">\n          <div className=\"footer-info\">\n            <span>📊 Dati aggiornati al {new Date().toLocaleDateString('it-IT')}</span>\n          </div>\n        </div>\n      </div>\n\n      <style jsx>{`\n        .modal-overlay-modern {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: rgba(0, 0, 0, 0.7);\n          backdrop-filter: blur(8px);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          z-index: 1000;\n          animation: fadeIn 0.3s ease;\n        }\n\n        .modal-content-modern {\n          background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);\n          border-radius: 24px;\n          width: 95%;\n          max-width: 1200px;\n          max-height: 95vh;\n          overflow-y: auto;\n          position: relative;\n          box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);\n          animation: slideInUp 0.4s ease;\n          border: 1px solid rgba(255, 255, 255, 0.2);\n        }\n\n        .modal-header-modern {\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          padding: 32px;\n          border-radius: 24px 24px 0 0;\n          color: white;\n          position: relative;\n          overflow: hidden;\n        }\n\n        .modal-header-modern::before {\n          content: '';\n          position: absolute;\n          top: -50%;\n          right: -50%;\n          width: 200%;\n          height: 200%;\n          background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);\n          animation: float 6s ease-in-out infinite;\n        }\n\n        .agent-profile {\n          display: flex;\n          align-items: center;\n          position: relative;\n          z-index: 2;\n        }\n\n        .avatar-modern {\n          width: 80px;\n          height: 80px;\n          border-radius: 20px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          margin-right: 24px;\n          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n          border: 3px solid rgba(255, 255, 255, 0.3);\n        }\n\n        .agent-info {\n          flex: 1;\n        }\n\n        .agent-name {\n          font-size: 2.5rem;\n          font-weight: 700;\n          margin: 0 0 16px 0;\n          text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n        }\n\n        .agent-details {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 20px;\n          opacity: 0.9;\n        }\n\n        .detail-item {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          font-size: 0.95rem;\n        }\n\n        .close-button-modern {\n          position: absolute;\n          top: 24px;\n          right: 24px;\n          background: rgba(255, 255, 255, 0.2);\n          border: none;\n          width: 48px;\n          height: 48px;\n          border-radius: 12px;\n          color: white;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          transition: all 0.2s ease;\n          backdrop-filter: blur(10px);\n          z-index: 3;\n        }\n\n        .close-button-modern:hover {\n          background: rgba(255, 255, 255, 0.3);\n          transform: scale(1.05);\n        }\n\n        .kpi-section {\n          padding: 32px;\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n          gap: 20px;\n        }\n\n        .kpi-card {\n          background: white;\n          border-radius: 16px;\n          padding: 24px;\n          display: flex;\n          align-items: center;\n          gap: 20px;\n          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n          border: 1px solid rgba(0, 0, 0, 0.05);\n          transition: all 0.3s ease;\n          position: relative;\n          overflow: hidden;\n        }\n\n        .kpi-card::before {\n          content: '';\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          height: 4px;\n          background: var(--accent-color);\n        }\n\n        .kpi-card:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n        }\n\n        .kpi-card.primary { --accent-color: linear-gradient(135deg, #3b82f6, #1d4ed8); }\n        .kpi-card.accent { --accent-color: linear-gradient(135deg, #10b981, #047857); }\n        .kpi-card.success { --accent-color: linear-gradient(135deg, #f59e0b, #d97706); }\n        .kpi-card.info { --accent-color: linear-gradient(135deg, #8b5cf6, #7c3aed); }\n\n        .kpi-icon {\n          width: 60px;\n          height: 60px;\n          border-radius: 16px;\n          background: var(--accent-color);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          color: white;\n          flex-shrink: 0;\n        }\n\n        .kpi-content {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          gap: 4px;\n        }\n\n        .kpi-label {\n          font-size: 0.9rem;\n          color: #64748b;\n          font-weight: 500;\n        }\n\n        .kpi-value {\n          font-size: 1.8rem;\n          font-weight: 700;\n          color: #1e293b;\n        }\n\n        .kpi-trend {\n          font-size: 0.8rem;\n          font-weight: 600;\n        }\n\n        .kpi-trend.positive { color: #10b981; }\n        .kpi-trend.negative { color: #ef4444; }\n        .kpi-trend.neutral { color: #64748b; }\n\n        .chart-section {\n          padding: 0 32px 32px;\n        }\n\n        .section-title {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          font-size: 18px;\n          font-weight: 600;\n          color: #1e293b;\n          margin-bottom: 20px;\n          padding-bottom: 12px;\n          border-bottom: 2px solid #f1f5f9;\n        }\n\n        .chart-container-modern {\n          background: white;\n          border-radius: 16px;\n          padding: 24px;\n          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n          border: 1px solid rgba(0, 0, 0, 0.05);\n        }\n\n        .accordion-section {\n          padding: 24px;\n          background: white;\n          border-radius: 16px;\n          margin: 16px 0;\n          border: 1px solid #e2e8f0;\n        }\n\n        .accordion-item {\n          border: 1px solid #e2e8f0;\n          border-radius: 12px;\n          margin-bottom: 8px;\n          overflow: hidden;\n          transition: all 0.2s ease;\n        }\n\n        .accordion-item:hover {\n          border-color: #cbd5e1;\n        }\n\n        .accordion-header {\n          width: 100%;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 16px 20px;\n          background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);\n          border: none;\n          cursor: pointer;\n          transition: all 0.2s ease;\n          font-size: 15px;\n          font-weight: 500;\n        }\n\n        .accordion-header:hover {\n          background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);\n        }\n\n        .accordion-header.active {\n          background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);\n          color: #1d4ed8;\n        }\n\n        .accordion-title {\n          display: flex;\n          align-items: center;\n          gap: 10px;\n        }\n\n        .accordion-meta {\n          display: flex;\n          align-items: center;\n          gap: 12px;\n        }\n\n        .count-badge {\n          background: rgba(59, 130, 246, 0.1);\n          color: #1d4ed8;\n          font-size: 12px;\n          font-weight: 600;\n          padding: 4px 8px;\n          border-radius: 8px;\n          min-width: 24px;\n          text-align: center;\n        }\n\n        .accordion-header.active .count-badge {\n          background: rgba(255, 255, 255, 0.8);\n          color: #1d4ed8;\n        }\n\n        .chevron {\n          transition: transform 0.2s ease;\n          color: #64748b;\n        }\n\n        .chevron.rotated {\n          transform: rotate(180deg);\n        }\n\n        .accordion-content {\n          padding: 20px;\n          background: white;\n          border-top: 1px solid #e2e8f0;\n          animation: slideDown 0.3s ease;\n        }\n\n        @keyframes slideDown {\n          from {\n            opacity: 0;\n            transform: translateY(-10px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n\n        .stats-grid-compact {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n          gap: 12px;\n        }\n\n        .empty-state-compact {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          padding: 32px 16px;\n          color: #64748b;\n          text-align: center;\n        }\n\n        .empty-icon {\n          opacity: 0.4;\n          margin-bottom: 8px;\n        }\n\n        .empty-message {\n          font-size: 14px;\n          opacity: 0.8;\n        }\n\n        .modern-stat-item {\n          background: #f8fafc;\n          border: 1px solid #e2e8f0;\n          border-radius: 12px;\n          padding: 20px;\n          display: flex;\n          align-items: center;\n          gap: 16px;\n          transition: all 0.2s ease;\n        }\n\n        .modern-stat-item:hover {\n          background: #f1f5f9;\n          border-color: #3b82f6;\n          transform: translateY(-1px);\n        }\n\n        .stat-icon {\n          width: 40px;\n          height: 40px;\n          border-radius: 10px;\n          background: linear-gradient(135deg, #3b82f6, #1d4ed8);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          color: white;\n          flex-shrink: 0;\n        }\n\n        .stat-content {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          gap: 4px;\n        }\n\n        .stat-label {\n          font-size: 0.9rem;\n          color: #64748b;\n          font-weight: 500;\n        }\n\n        .stat-value {\n          font-size: 1.3rem;\n          font-weight: 700;\n          color: #1e293b;\n        }\n\n        .modal-footer-modern {\n          background: #f8fafc;\n          padding: 24px 32px;\n          border-radius: 0 0 24px 24px;\n          border-top: 1px solid #e2e8f0;\n          text-align: center;\n        }\n\n        .footer-info {\n          color: #64748b;\n          font-size: 0.9rem;\n          font-weight: 500;\n        }\n\n        @keyframes fadeIn {\n          from {\n            opacity: 0;\n            transform: translateY(10px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n\n        @keyframes slideInUp {\n          from { transform: translateY(30px); opacity: 0; }\n          to { transform: translateY(0); opacity: 1; }\n        }\n\n        @keyframes float {\n          0%, 100% { transform: translateY(0px); }\n          50% { transform: translateY(-20px); }\n        }\n\n        @media (max-width: 768px) {\n          .modal-content-modern {\n            width: 98%;\n            margin: 1%;\n            max-height: 98vh;\n          }\n\n          .agent-name {\n            font-size: 2rem;\n          }\n\n          .kpi-section {\n            grid-template-columns: 1fr;\n            padding: 24px;\n          }\n\n          .accordion-header {\n            padding: 14px 16px;\n            font-size: 14px;\n          }\n\n          .accordion-content {\n            padding: 16px;\n          }\n\n          .agent-profile {\n            flex-direction: column;\n            text-align: center;\n          }\n\n          .avatar-modern {\n            margin-right: 0;\n            margin-bottom: 16px;\n          }\n\n          .agent-details {\n            justify-content: center;\n          }\n\n          .stats-grid-compact {\n            grid-template-columns: 1fr;\n          }\n        }\n      `}</style>\n    </div>,\n    document.getElementById('modal-root') || document.body\n  );\n};\n\nexport default AgentModal;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { useData } from '../App'; // Importa il context\nimport { formatAgentName } from '../utils/formatter';\nimport AgentCard from './AgentCard'; // Importa la VERA AgentCard\nimport AgentModal from './AgentModal'; // Importa la VERA AgentModal\nimport './ModernAgentsPage.css';\nimport { Search, Filter, Users, TrendingUp, Award, BarChart3, RefreshCw } from 'lucide-react';\nimport { Slider } from '@mui/material';\n\nconst SLIDER_DISPLAY_MAX = 3000; // Limite visuale per lo slider\n\nconst ModernAgentsPage = () => {\n  const { data, selectedFileDate, loadFiles, globalLoading } = useData(); // Usa i dati reali\n  const [selectedAgent, setSelectedAgent] = useState(null);\n  const [refreshing, setRefreshing] = useState(false);\n\n  // Gestione stato filtri\n  const [filters, setFilters] = useState({\n    searchTerm: '',\n    selectedSm: '',\n    fatturatoRushRange: [0, 10000],\n    activePreset: null,\n  });\n\n  // Sincronizzazione filtri con URL (dal vecchio componente Agents.js)\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const newFilters = {\n      searchTerm: params.get('search') || '',\n      selectedSm: params.get('sm') || '',\n      fatturatoRushRange: [\n        Number(params.get('minFatturatoRush')) || 0,\n        Number(params.get('maxFatturatoRush')) || 10000,\n      ],\n      activePreset: params.get('preset') || null,\n    };\n    setFilters(newFilters);\n  }, []);\n\n  useEffect(() => {\n    const params = new URLSearchParams();\n    if (filters.searchTerm) params.set('search', filters.searchTerm);\n    if (filters.selectedSm) params.set('sm', filters.selectedSm);\n    if (filters.fatturatoRushRange[0] > 0) params.set('minFatturatoRush', filters.fatturatoRushRange[0]);\n    if (filters.fatturatoRushRange[1] < 10000) params.set('maxFatturatoRush', filters.fatturatoRushRange[1]);\n    if (filters.activePreset) params.set('preset', filters.activePreset);\n    window.history.replaceState({}, '', `${window.location.pathname}?${params.toString()}`);\n  }, [filters]);\n\n  // Logica per processare i dati reali\n  const { agents, smList, maxFatturatoRush, allAgentsInPeriod } = useMemo(() => {\n    if (!selectedFileDate || !data.uploadedFiles || data.uploadedFiles.length === 0) {\n      return { agents: [], smList: [], maxFatturatoRush: SLIDER_DISPLAY_MAX, allAgentsInPeriod: [] };\n    }\n    const file = data.uploadedFiles.find(f => f.date === selectedFileDate);\n    if (!file || !file.data || !file.data.agents) {\n      return { agents: [], smList: [], maxFatturatoRush: SLIDER_DISPLAY_MAX, allAgentsInPeriod: [] };\n    }\n\n    const agentsWithId = file.data.agents.map((agent, index) => ({\n      ...agent,\n      id: `${file.date}-${agent.nome}-${index}`,\n      originalNome: agent.nome,\n      nome: formatAgentName(agent.nome),\n    }));\n\n    const uniqueSmList = [...new Set(agentsWithId.map(a => a.sm).filter(Boolean))].sort();\n    const trueMaxRush = Math.max(...agentsWithId.map(a => a.fatturatoRush || 0));\n\n    let filteredAgents = agentsWithId.filter(agent =>\n      (agent.nome.toLowerCase().includes(filters.searchTerm.toLowerCase()) ||\n      (agent.originalNome && agent.originalNome.toLowerCase().includes(filters.searchTerm.toLowerCase()))) &&\n      (filters.selectedSm === '' || agent.sm === filters.selectedSm) &&\n      (agent.fatturatoRush || 0) >= filters.fatturatoRushRange[0] &&\n      (agent.fatturatoRush || 0) <= filters.fatturatoRushRange[1]\n    );\n\n    return { agents: filteredAgents, smList: uniqueSmList, maxFatturatoRush: trueMaxRush, allAgentsInPeriod: agentsWithId };\n  }, [data.uploadedFiles, selectedFileDate, filters]);\n\n  const handleFilterChange = (name, value) => {\n    if (name === 'fatturatoRushRange') {\n      const [min, max] = value;\n      setFilters(prev => ({ ...prev, fatturatoRushRange: [min, max], activePreset: null }));\n    } else {\n      setFilters(prev => ({ ...prev, [name]: value, activePreset: null }));\n    }\n  };\n\n  const handlePresetFilter = (preset) => {\n    let newFilters = { ...filters, searchTerm: '', selectedSm: '', activePreset: preset };\n    switch (preset) {\n      case 'top':\n        newFilters.fatturatoRushRange = [1000, maxFatturatoRush];\n        break;\n      case 'underperforming':\n        newFilters.fatturatoRushRange = [0, 500];\n        break;\n      case 'average':\n        newFilters.fatturatoRushRange = [500, 1000];\n        break;\n      default:\n        newFilters.fatturatoRushRange = [0, maxFatturatoRush];\n        newFilters.activePreset = null;\n    }\n    setFilters(newFilters);\n  };\n\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    await loadFiles();\n    setRefreshing(false);\n  };\n\n  // Statistiche calcolate sui dati filtrati reali\n  const stats = useMemo(() => {\n    const totalAgents = agents.length;\n    const avgRush = totalAgents > 0 ? agents.reduce((sum, agent) => sum + (agent.fatturatoRush || 0), 0) / totalAgents : 0;\n    const topPerformer = agents.reduce((max, agent) =>\n      (agent.fatturatoRush || 0) > (max?.fatturatoRush || 0) ? agent : max, null);\n    const totalRevenue = agents.reduce((sum, agent) => sum + (agent.fatturato?.complessivo || 0), 0);\n\n    return { totalAgents, avgRush, topPerformer, totalRevenue };\n  }, [agents]);\n\n  const marks = [\n    { value: 0, label: '0€' },\n    { value: 500, label: '500€' },\n    { value: 1000, label: '1k€' },\n    { value: SLIDER_DISPLAY_MAX, label: `${SLIDER_DISPLAY_MAX / 1000}k€+` }\n  ];\n\n  return (\n    <div className=\"modern-agents-container\">\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <div className=\"header-text\">\n            <h1 className=\"page-title\"><Users size={32} /> Dashboard Agenti</h1>\n            <p className=\"page-subtitle\">Gestisci e monitora le performance del tuo team commerciale</p>\n          </div>\n          <button className={`refresh-btn ${refreshing || globalLoading ? 'refreshing' : ''}`} onClick={handleRefresh} disabled={refreshing || globalLoading}>\n            <RefreshCw size={20} />\n            {refreshing || globalLoading ? 'Aggiornamento...' : 'Aggiorna Dati'}\n          </button>\n        </div>\n        <div className=\"header-stats\">\n           <div className=\"stat-card primary\">\n            <div className=\"stat-icon\"><Users size={24} /></div>\n            <div className=\"stat-content\">\n              <span className=\"stat-value\">{stats.totalAgents}</span>\n              <span className=\"stat-label\">Agenti Visualizzati</span>\n            </div>\n          </div>\n          <div className=\"stat-card success\">\n            <div className=\"stat-icon\"><TrendingUp size={24} /></div>\n            <div className=\"stat-content\">\n              <span className=\"stat-value\">€{stats.avgRush.toLocaleString('it-IT', { maximumFractionDigits: 0 })}</span>\n              <span className=\"stat-label\">Rush Medio</span>\n            </div>\n          </div>\n          <div className=\"stat-card accent\">\n            <div className=\"stat-icon\"><Award size={24} /></div>\n            <div className=\"stat-content\">\n              <span className=\"stat-value\">{stats.topPerformer?.nome?.split(' ')[0] || 'N/A'}</span>\n              <span className=\"stat-label\">Top Performer</span>\n            </div>\n          </div>\n          <div className=\"stat-card info\">\n            <div className=\"stat-icon\"><BarChart3 size={24} /></div>\n            <div className=\"stat-content\">\n              <span className=\"stat-value\">€{(stats.totalRevenue / 1000).toFixed(0)}K</span>\n              <span className=\"stat-label\">Fatturato Totale</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"filters-modern\">\n        <div className=\"filters-header\">\n          <div className=\"filters-title\"><Filter size={20} /><span>Filtri Avanzati</span></div>\n          <div className=\"results-count\">{agents.length} di {allAgentsInPeriod.length} agenti</div>\n        </div>\n        <div className=\"filters-grid\">\n          <div className=\"filter-group search-group\">\n            <label className=\"filter-label\"><Search size={16} /> Ricerca Agente</label>\n            <div className=\"search-input-wrapper\">\n              <input type=\"text\" placeholder=\"Cerca per nome...\" value={filters.searchTerm} onChange={(e) => handleFilterChange('searchTerm', e.target.value)} className=\"modern-search-input\" />\n            </div>\n          </div>\n          <div className=\"filter-group\">\n            <label className=\"filter-label\"><Users size={16} /> Coordinatore</label>\n            <select value={filters.selectedSm} onChange={(e) => handleFilterChange('selectedSm', e.target.value)} className=\"modern-select\">\n              <option value=\"\">Tutti i Coordinatori</option>\n              {smList.map(sm => <option key={sm} value={sm}>{formatAgentName(sm)}</option>)}\n            </select>\n          </div>\n          <div className=\"filter-group range-group\">\n            <label className=\"filter-label\"><TrendingUp size={16} /> Range Fatturato Rush</label>\n            <Slider\n              value={filters.fatturatoRushRange.map(v => Math.min(v, SLIDER_DISPLAY_MAX))}\n              onChange={(e, newValue) => handleFilterChange('fatturatoRushRange', newValue)}\n              valueLabelDisplay=\"auto\"\n              min={0}\n              max={SLIDER_DISPLAY_MAX}\n              step={100}\n              marks={marks}\n              valueLabelFormat={(value) => value === SLIDER_DISPLAY_MAX ? `${value.toLocaleString('it-IT')}€+` : `${value.toLocaleString('it-IT')}€`}\n              sx={{ mt: 2 }}\n            />\n          </div>\n          <div className=\"filter-group preset-group\">\n            <label className=\"filter-label\">Filtri Rapidi</label>\n            <div className=\"preset-buttons\">\n              <button onClick={() => handlePresetFilter('top')} className={`preset-btn ${filters.activePreset === 'top' ? 'active' : ''}`}>🏆 Top Performers</button>\n              <button onClick={() => handlePresetFilter('average')} className={`preset-btn ${filters.activePreset === 'average' ? 'active' : ''}`}>📊 Performance Media</button>\n              <button onClick={() => handlePresetFilter('underperforming')} className={`preset-btn ${filters.activePreset === 'underperforming' ? 'active' : ''}`}>🔄 In Crescita</button>\n              <button onClick={() => handlePresetFilter(null)} className=\"preset-btn reset\">✨ Reset Filtri</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className={`agents-grid-modern ${globalLoading ? 'loading' : ''}`}>\n        {agents.length > 0 ? (\n          agents.map(agent => (\n            <AgentCard key={agent.id} agent={agent} onClick={setSelectedAgent} />\n          ))\n        ) : (\n          <div className=\"no-results-modern\">\n            <div className=\"no-results-icon\"><Search size={48} /></div>\n            <h3>Nessun agente trovato</h3>\n            <p>Prova a modificare i filtri di ricerca per visualizzare più risultati.</p>\n            <button className=\"reset-filters-btn\" onClick={() => setFilters({ searchTerm: '', selectedSm: '', fatturatoRushRange: [0, maxFatturatoRush], activePreset: null })}>Ripristina Tutti i Filtri</button>\n          </div>\n        )}\n      </div>\n\n      {globalLoading && (\n        <div className=\"loading-overlay\">\n          <div className=\"loading-spinner\"><RefreshCw size={32} className=\"animate-spin\" /><p>Caricamento agenti...</p></div>\n        </div>\n      )}\n\n      {/* MODALE REALE */}\n      {selectedAgent && <AgentModal agent={selectedAgent} allData={data} onClose={() => setSelectedAgent(null)} />}\n    </div>\n  );\n};\n\nexport default ModernAgentsPage;\n","import React, { useState, useMemo } from 'react';\nimport { useData } from '../App';\nimport { formatAgentName } from '../utils/formatter';\nimport {\n  Trophy, Crown, Medal, Target, Users, TrendingUp,\n  DollarSign, Filter,\n  ChevronDown, ChevronUp, Star, BarChart3\n} from 'lucide-react';\nimport './ModernSMRanking.css';\n\n// Simulazione delle funzioni di utilità\nconst formatCurrency = (value) => {\n  return new Intl.NumberFormat('it-IT', {\n    style: 'currency',\n    currency: 'EUR'\n  }).format(value || 0);\n};\n\nconst formatNumber = (value) => {\n  return new Intl.NumberFormat('it-IT').format(value || 0);\n};\n\nconst ModernSMRanking = () => {\n  const { data, selectedFileDate } = useData();\n  const [sortBy, setSortBy] = useState('totalRush');\n  const [sortOrder, setSortOrder] = useState('desc');\n  const [selectedMetric, setSelectedMetric] = useState('rush');\n  const [expandedSM, setExpandedSM] = useState(null);\n\n  // Processa i dati degli SM dai file caricati\n  const smData = useMemo(() => {\n    if (!selectedFileDate || !data.uploadedFiles?.length) {\n      return [];\n    }\n\n    const file = data.uploadedFiles.find(f => f.date === selectedFileDate);\n    if (!file?.data?.agents) return [];\n\n    // Processa i dati reali\n    const agentsBySM = {};\n\n    file.data.agents.forEach(agent => {\n      const smName = agent.sm || 'Senza SM';\n      if (!agentsBySM[smName]) {\n        agentsBySM[smName] = {\n          name: smName,\n          team: [],\n          totalAgents: 0,\n          totalRush: 0,\n          totalRevenue: 0,\n          totalNewClients: 0,\n          avgRush: 0\n        };\n      }\n\n      agentsBySM[smName].team.push(agent);\n      agentsBySM[smName].totalAgents++;\n      agentsBySM[smName].totalRush += agent.fatturatoRush || 0;\n      agentsBySM[smName].totalRevenue += agent.fatturato?.complessivo || 0;\n      agentsBySM[smName].totalNewClients += agent.nuovoCliente || 0;\n    });\n\n    // Calcola medie e ordina team\n    Object.values(agentsBySM).forEach(sm => {\n      sm.avgRush = sm.totalAgents > 0 ? sm.totalRush / sm.totalAgents : 0;\n      sm.team.sort((a, b) => (b.fatturatoRush || 0) - (a.fatturatoRush || 0));\n    });\n\n    return Object.values(agentsBySM);\n  }, [data, selectedFileDate]);\n\n  // Ordina gli SM\n  const sortedSMData = useMemo(() => {\n    return [...smData].sort((a, b) => {\n      let aVal = a[sortBy] || 0;\n      let bVal = b[sortBy] || 0;\n\n      if (sortOrder === 'desc') {\n        return bVal - aVal;\n      } else {\n        return aVal - bVal;\n      }\n    });\n  }, [smData, sortBy, sortOrder]);\n\n  const handleSort = (field) => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'desc' ? 'asc' : 'desc');\n    } else {\n      setSortBy(field);\n      setSortOrder('desc');\n    }\n  };\n\n  const handleMetricChange = (metric) => {\n    setSelectedMetric(metric);\n    if (metric === 'rush') {\n      setSortBy('totalRush');\n    } else if (metric === 'revenue') {\n      setSortBy('totalRevenue');\n    } else if (metric === 'team') {\n      setSortBy('totalAgents');\n    }\n    setSortOrder('desc');\n  };\n\n  const getRankIcon = (index) => {\n    switch (index) {\n      case 0: return <Crown size={24} className=\"text-yellow-500\" />;\n      case 1: return <Trophy size={24} className=\"text-gray-400\" />;\n      case 2: return <Medal size={24} className=\"text-amber-600\" />;\n      default: return <span className=\"rank-number\">{index + 1}</span>;\n    }\n  };\n\n  const getPerformanceLevel = (avgRush) => {\n    if (avgRush >= 8000) return 'excellent';\n    if (avgRush >= 6000) return 'good';\n    if (avgRush >= 4000) return 'average';\n    return 'needs-improvement';\n  };\n\n  const getMetricColor = (value, type) => {\n    switch (type) {\n      case 'rush':\n        if (value >= 8000) return 'text-green-600';\n        if (value >= 6000) return 'text-blue-600';\n        if (value >= 4000) return 'text-yellow-600';\n        return 'text-red-600';\n      case 'revenue':\n        if (value >= 25000) return 'text-green-600';\n        if (value >= 20000) return 'text-blue-600';\n        if (value >= 15000) return 'text-yellow-600';\n        return 'text-red-600';\n      default:\n        return 'text-gray-600';\n    }\n  };\n\n  // Statistiche generali\n  const totalStats = useMemo(() => {\n    return {\n      totalSMs: sortedSMData.length,\n      totalAgents: sortedSMData.reduce((sum, sm) => sum + sm.totalAgents, 0),\n      totalRush: sortedSMData.reduce((sum, sm) => sum + sm.totalRush, 0),\n      totalRevenue: sortedSMData.reduce((sum, sm) => sum + sm.totalRevenue, 0),\n      avgTeamSize: sortedSMData.length > 0 ?\n        sortedSMData.reduce((sum, sm) => sum + sm.totalAgents, 0) / sortedSMData.length : 0\n    };\n  }, [sortedSMData]);\n\n  return (\n    <div className=\"modern-sm-ranking\">\n      {/* Header con statistiche */}\n      <div className=\"ranking-header\">\n        <div className=\"header-content\">\n          <div className=\"title-section\">\n            <h1 className=\"page-title\">\n              <Trophy size={32} />\n              Classifica Sales Manager\n            </h1>\n            <p className=\"page-subtitle\">\n              Performance e ranking dei coordinatori commerciali\n            </p>\n          </div>\n\n          <div className=\"metrics-selector\">\n            <label className=\"metric-label\">Vista:</label>\n            <div className=\"metric-buttons\">\n              <button\n                className={`metric-btn ${selectedMetric === 'rush' ? 'active' : ''}`}\n                onClick={() => handleMetricChange('rush')}\n              >\n                <TrendingUp size={16} />\n                Rush Focus\n              </button>\n              <button\n                className={`metric-btn ${selectedMetric === 'revenue' ? 'active' : ''}`}\n                onClick={() => handleMetricChange('revenue')}\n              >\n                <DollarSign size={16} />\n                Fatturato\n              </button>\n              <button\n                className={`metric-btn ${selectedMetric === 'team' ? 'active' : ''}`}\n                onClick={() => handleMetricChange('team')}\n              >\n                <Users size={16} />\n                Team\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Statistiche globali */}\n        <div className=\"global-stats\">\n          <div className=\"stat-card primary\">\n            <div className=\"stat-icon\">\n              <Users size={28} />\n            </div>\n            <div className=\"stat-content\">\n              <span className=\"stat-value\">{totalStats.totalSMs}</span>\n              <span className=\"stat-label\">Sales Manager</span>\n            </div>\n          </div>\n\n          <div className=\"stat-card success\">\n            <div className=\"stat-icon\">\n              <Target size={28} />\n            </div>\n            <div className=\"stat-content\">\n              <span className=\"stat-value\">{totalStats.totalAgents}</span>\n              <span className=\"stat-label\">Agenti Totali</span>\n            </div>\n          </div>\n\n          <div className=\"stat-card accent\">\n            <div className=\"stat-icon\">\n              <TrendingUp size={28} />\n            </div>\n            <div className=\"stat-content\">\n              <span className=\"stat-value\">{formatCurrency(totalStats.totalRush)}</span>\n              <span className=\"stat-label\">Rush Totale</span>\n            </div>\n          </div>\n\n          <div className=\"stat-card info\">\n            <div className=\"stat-icon\">\n              <BarChart3 size={28} />\n            </div>\n            <div className=\"stat-content\">\n              <span className=\"stat-value\">{totalStats.avgTeamSize.toFixed(1)}</span>\n              <span className=\"stat-label\">Agenti/SM Medio</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Controlli di ordinamento */}\n      <div className=\"controls-section\">\n        <div className=\"sort-controls\">\n          <span className=\"sort-label\">\n            <Filter size={16} />\n            Ordina per:\n          </span>\n          <div className=\"sort-buttons\">\n            <button\n              className={`sort-btn ${sortBy === 'totalRush' ? 'active' : ''}`}\n              onClick={() => handleSort('totalRush')}\n            >\n              Rush Totale\n              {sortBy === 'totalRush' && (sortOrder === 'desc' ? <ChevronDown size={16} /> : <ChevronUp size={16} />)}\n            </button>\n            <button\n              className={`sort-btn ${sortBy === 'avgRush' ? 'active' : ''}`}\n              onClick={() => handleSort('avgRush')}\n            >\n              Rush Medio\n              {sortBy === 'avgRush' && (sortOrder === 'desc' ? <ChevronDown size={16} /> : <ChevronUp size={16} />)}\n            </button>\n            <button\n              className={`sort-btn ${sortBy === 'totalRevenue' ? 'active' : ''}`}\n              onClick={() => handleSort('totalRevenue')}\n            >\n              Fatturato\n              {sortBy === 'totalRevenue' && (sortOrder === 'desc' ? <ChevronDown size={16} /> : <ChevronUp size={16} />)}\n            </button>\n            <button\n              className={`sort-btn ${sortBy === 'totalAgents' ? 'active' : ''}`}\n              onClick={() => handleSort('totalAgents')}\n            >\n              Team Size\n              {sortBy === 'totalAgents' && (sortOrder === 'desc' ? <ChevronDown size={16} /> : <ChevronUp size={16} />)}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Lista SM */}\n      <div className=\"sm-list\">\n        {sortedSMData.length > 0 ? (\n          sortedSMData.map((sm, index) => (\n            <div\n              key={sm.name}\n              className={`sm-card ${getPerformanceLevel(sm.avgRush)}`}\n            >\n              <div className=\"sm-header\" onClick={() => setExpandedSM(expandedSM === sm.name ? null : sm.name)}>\n                <div className=\"rank-section\">\n                  {getRankIcon(index)}\n                </div>\n\n                <div className=\"sm-info\">\n                  <h3 className=\"sm-name\">{formatAgentName(sm.name)}</h3>\n                  <div className=\"sm-meta\">\n                    <span className=\"team-count\">\n                      <Users size={14} />\n                      {sm.totalAgents} agenti\n                    </span>\n                    <span className=\"avg-indicator\">\n                      <Target size={14} />\n                      Avg: {formatCurrency(sm.avgRush)}\n                    </span>\n                  </div>\n                </div>\n\n                <div className=\"sm-metrics\">\n                  {selectedMetric === 'rush' && (\n                    <>\n                      <div className=\"metric-item primary\">\n                        <span className=\"metric-label\">Rush Totale</span>\n                        <span className={`metric-value ${getMetricColor(sm.totalRush, 'rush')}`}>\n                          {formatCurrency(sm.totalRush)}\n                        </span>\n                      </div>\n                      <div className=\"metric-item secondary\">\n                        <span className=\"metric-label\">Fatturato</span>\n                        <span className={`metric-value ${getMetricColor(sm.totalRevenue, 'revenue')}`}>\n                          {formatCurrency(sm.totalRevenue)}\n                        </span>\n                      </div>\n                    </>\n                  )}\n                  {selectedMetric === 'revenue' && (\n                    <>\n                      <div className=\"metric-item primary\">\n                        <span className=\"metric-label\">Fatturato</span>\n                        <span className={`metric-value ${getMetricColor(sm.totalRevenue, 'revenue')}`}>\n                          {formatCurrency(sm.totalRevenue)}\n                        </span>\n                      </div>\n                      <div className=\"metric-item secondary\">\n                        <span className=\"metric-label\">Rush Totale</span>\n                        <span className={`metric-value ${getMetricColor(sm.totalRush, 'rush')}`}>\n                          {formatCurrency(sm.totalRush)}\n                        </span>\n                      </div>\n                    </>\n                  )}\n                  {selectedMetric === 'team' && (\n                    <>\n                      <div className=\"metric-item primary\">\n                        <span className=\"metric-label\">Agenti</span>\n                        <span className=\"metric-value\">\n                          {formatNumber(sm.totalAgents)}\n                        </span>\n                      </div>\n                      <div className=\"metric-item secondary\">\n                        <span className=\"metric-label\">Rush Medio</span>\n                        <span className=\"metric-value\">\n                          {formatCurrency(sm.avgRush)}\n                        </span>\n                      </div>\n                    </>\n                  )}\n                  <div className=\"metric-item tertiary\">\n                    <span className=\"metric-label\">Nuovi Clienti</span>\n                    <span className=\"metric-value text-purple-600\">\n                      {formatNumber(sm.totalNewClients)}\n                    </span>\n                  </div>\n                </div>\n\n                <div className=\"expand-indicator\">\n                  {expandedSM === sm.name ? <ChevronUp size={20} /> : <ChevronDown size={20} />}\n                </div>\n              </div>\n\n              {/* Team espanso */}\n              {expandedSM === sm.name && (\n                <div className=\"team-details\">\n                  <div className=\"team-header\">\n                    <h4>\n                      <Star size={16} />\n                      Team di {formatAgentName(sm.name)}\n                    </h4>\n                  </div>\n\n                  <div className=\"agents-grid\">\n                    {sm.team.map((agent, agentIndex) => (\n                      <div key={agent.nome} className=\"agent-mini-card\">\n                        <div className=\"agent-rank\">\n                          #{agentIndex + 1}\n                        </div>\n                        <div className=\"agent-info\">\n                          <h5 className=\"agent-name\">{formatAgentName(agent.nome)}</h5>\n                          <div className=\"agent-metrics\">\n                            <div className=\"agent-metric\">\n                              <span className=\"label\">Rush:</span>\n                              <span className=\"value rush\">\n                                {formatCurrency(agent.fatturatoRush || 0)}\n                              </span>\n                            </div>\n                            <div className=\"agent-metric\">\n                              <span className=\"label\">Fatturato:</span>\n                              <span className=\"value revenue\">\n                                {formatCurrency(agent.fatturato?.complessivo || 0)}\n                              </span>\n                            </div>\n                            <div className=\"agent-metric\">\n                              <span className=\"label\">Clienti:</span>\n                              <span className=\"value clients\">\n                                {formatNumber(agent.nuovoCliente || 0)}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          ))\n        ) : (\n          <div className=\"no-data\">\n            <Trophy size={48} className=\"opacity-30\" />\n            <h3>Nessun dato disponibile</h3>\n            <p>Carica un file Excel per visualizzare la classifica SM</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ModernSMRanking;\n","import React, { useState, useMemo, useCallback } from 'react';\nimport { useData } from '../App';\nimport { formatAgentName } from '../utils/formatter';\nimport './ModernProductsAnalysis.css';\n\n// Import per i grafici Recharts\nimport {\n  PieChart as RechartsPieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LineChart,\n  Line,\n  AreaChart,\n  Area,\n  LabelList\n} from 'recharts';\n\n// Import icone esistenti + nuove\nimport {\n  Package, Smartphone, Globe, Zap, Phone, Award,\n  TrendingUp, BarChart3, PieChart, Users, Target,\n  Filter,\n  Wifi, Shield, Star, Activity\n} from 'lucide-react';\n\n// Simulazione delle funzioni di utilità\nconst formatCurrency = (value) => {\n  return new Intl.NumberFormat('it-IT', {\n    style: 'currency',\n    currency: 'EUR'\n  }).format(value || 0);\n};\n\nconst formatNumber = (value) => {\n  return new Intl.NumberFormat('it-IT').format(value || 0);\n};\n\nconst formatCount = (value, { includeUnit = false } = {}) => {\n  const numericValue = Number(value) || 0;\n  const formatted = formatNumber(numericValue);\n  if (!includeUnit) {\n    return formatted;\n  }\n  const unit = numericValue === 1 ? 'agente' : 'agenti';\n  return `${formatted} ${unit}`;\n};\n\nconst ModernProductsAnalysis = () => {\n  const { data, selectedFileDate } = useData();\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [sortBy, setSortBy] = useState('volume');\n  const [viewMode, setViewMode] = useState('cards'); // cards, table, chart\n\n  // Aggiungi questi stati al componente\n  const [chartType, setChartType] = useState('pie'); // pie, bar, line, area\n  const [chartMetric, setChartMetric] = useState('fatturato'); // fatturato, volume, agents\n\n  // Colori per i grafici\n  const CHART_COLORS = [\n    '#8b5cf6', '#06b6d4', '#10b981', '#f59e0b', '#ef4444',\n    '#6366f1', '#84cc16', '#f97316', '#ec4899', '#14b8a6'\n  ];\n\n  // Definizione categorie prodotti con icone e colori\n  const productCategories = useMemo(() => ({\n    'mobile': {\n      name: 'Telefonia Mobile',\n      icon: Smartphone,\n      color: 'from-blue-500 to-blue-600',\n      products: ['simVoce', 'simDati', 'mnp', 'easyRent']\n    },\n    'fixed': {\n      name: 'Telefonia Fissa',\n      icon: Phone,\n      color: 'from-green-500 to-green-600',\n      products: ['adsl', 'linkOu', 'linkOa', 'linkOaStart', 'interniOa']\n    },\n    'digital': {\n      name: 'Servizi Digitali',\n      icon: Shield,\n      color: 'from-purple-500 to-purple-600',\n      products: ['sdm', 'ssc', 'yourBackup', 'cloudNas', 'miia', 'easyGdpr']\n    },\n    'energy': {\n      name: 'Energia',\n      icon: Zap,\n      color: 'from-orange-500 to-orange-600',\n      products: ['fastwebEnergia']\n    },\n    'special': {\n      name: 'Prodotti Speciali',\n      icon: Award,\n      color: 'from-pink-500 to-pink-600',\n      products: ['station']\n    }\n  }), []);\n\n  // Processamento dati prodotti\n  const productsData = useMemo(() => {\n    if (!selectedFileDate || !data.uploadedFiles?.length) {\n      return {};\n    }\n    let agents = null;\n    const file = data.uploadedFiles.find(f => f.date === selectedFileDate);\n    if (file?.data?.agents) {\n      agents = file.data.agents;\n    }\n    else if (data.processedData && data.processedData[selectedFileDate]?.agents) {\n      agents = data.processedData[selectedFileDate].agents;\n    }\n    if (!agents || !Array.isArray(agents) || agents.length === 0) {\n      return {};\n    }\n    const products = {};\n    const productMapping = {\n      simVoce: 'SIM Voce', simDati: 'SIM Dati', mnp: 'MNP', easyRent: 'Easy Rent', adsl: 'ADSL', linkOu: 'Link OU', linkOa: 'Link OA', linkOaStart: 'Link OA Start', interniOa: 'Interni OA', sdm: 'SDM', ssc: 'SSC', yourBackup: 'Your Backup', cloudNas: 'Cloud NAS', miia: 'MIIA', easyGdpr: 'Easy GDPR', fastwebEnergia: 'Fastweb Energia', station: 'Station'\n    };\n    const revenueKeyMapping = {\n      simVoce: 'fatturatoVoce', simDati: 'fatturatoDati', easyRent: 'fatturatoEasyRent', linkOu: 'fatturatoOu', linkOa: 'fatturatoOa', easyDeal: 'fatturatoEasyDeal', altro: 'fatturatoAltro', serviziDigitali: 'fatturatoServiziDigitali', custom: 'fatturatoCustom', sdm: 'fatturatoSdm', ssc: 'fatturatoSsc', yourBackup: 'fatturatoYourBackup', cloudNas: 'fatturatoCloudNas', easyGdpr: 'fatturatoEasyGdpr', miia: 'fatturatoMiia', nuovoCliente: 'fatturatoNuovoCliente'\n    };\n    Object.keys(productMapping).forEach(key => {\n      const revenueKey = revenueKeyMapping[key] || `fatturato${key.charAt(0).toUpperCase() + key.slice(1)}`;\n      const agentsWithProduct = agents\n        .filter(agent => agent && typeof agent === 'object')\n        .map(agent => ({\n          nome: agent.nome || 'N/A',\n          volume: Number(agent[key]) || 0,\n          fatturato: Number(agent[revenueKey]) || 0\n        }))\n        .filter(item => item.volume > 0)\n        .sort((a, b) => b.volume - a.volume);\n      if (agentsWithProduct.length > 0) {\n        products[key] = {\n          displayName: productMapping[key],\n          volume: agentsWithProduct.reduce((sum, item) => sum + item.volume, 0),\n          fatturato: agentsWithProduct.reduce((sum, item) => sum + item.fatturato, 0),\n          agents: agentsWithProduct.length,\n          topAgents: agentsWithProduct.slice(0, 3).map(item => formatAgentName(item.nome))\n        };\n      }\n    });\n    return products;\n  }, [data, selectedFileDate]);\n\n  // Filtra prodotti per categoria\n  const filteredProducts = useMemo(() => {\n    if (selectedCategory === 'all') return productsData;\n    const categoryProducts = productCategories[selectedCategory]?.products || [];\n    return Object.fromEntries(\n      Object.entries(productsData).filter(([key]) => categoryProducts.includes(key))\n    );\n  }, [productsData, selectedCategory, productCategories]);\n\n  // Ordina prodotti\n  const sortedProducts = useMemo(() => {\n    const entries = Object.entries(filteredProducts);\n    return entries.sort(([, a], [, b]) => {\n      switch (sortBy) {\n        case 'volume': return b.volume - a.volume;\n        case 'fatturato': return b.fatturato - a.fatturato;\n        case 'agents': return b.agents - a.agents;\n        default: return 0;\n      }\n    });\n  }, [filteredProducts, sortBy]);\n\n  // Calcola statistiche totali\n  const totalStats = useMemo(() => {\n    const products = Object.values(filteredProducts);\n    return {\n      totalVolume: products.reduce((sum, p) => sum + p.volume, 0),\n      totalRevenue: products.reduce((sum, p) => sum + p.fatturato, 0),\n      totalProducts: products.length\n    };\n  }, [filteredProducts]);\n\n  // Helper functions\n  const getProductIcon = (productName) => {\n    const iconMap = {\n      simVoce: Smartphone, simDati: Globe, mnp: Zap, easyRent: Phone, adsl: Wifi, linkOu: Shield, linkOa: Star,\n    };\n    return iconMap[productName] || Package;\n  };\n\n  const getProductColor = (productName) => {\n    const colorMap = {\n      simVoce: 'linear-gradient(135deg, #3b82f6, #1d4ed8)', simDati: 'linear-gradient(135deg, #06b6d4, #0891b2)', mnp: 'linear-gradient(135deg, #8b5cf6, #7c3aed)', easyRent: 'linear-gradient(135deg, #10b981, #059669)', adsl: 'linear-gradient(135deg, #f59e0b, #d97706)', linkOu: 'linear-gradient(135deg, #ef4444, #dc2626)', linkOa: 'linear-gradient(135deg, #6366f1, #4f46e5)',\n    };\n    return colorMap[productName] || 'linear-gradient(135deg, #64748b, #475569)';\n  };\n\n  const getProductDisplayName = (productName) => {\n    const nameMap = {\n      simVoce: 'SIM Voce', simDati: 'SIM Dati', mnp: 'Portabilità', easyRent: 'Easy Rent', adsl: 'ADSL', linkOu: 'Link OU', linkOa: 'Link OA', linkOaStart: 'Link OA Start', interniOa: 'Interni OA',\n    };\n    return nameMap[productName] || productName;\n  };\n\n  const filteredProductsArray = useMemo(() => {\n    return Object.entries(filteredProducts).map(([name, productData]) => ({\n      name,\n      ...productData\n    }));\n  }, [filteredProducts]);\n\n  const formatChartValue = useCallback(\n    (value, options = {}) => {\n      const numericValue = Number(value) || 0;\n      switch (chartMetric) {\n        case 'fatturato':\n          return formatCurrency(numericValue);\n        case 'agents':\n          return formatCount(numericValue, options);\n        case 'volume':\n        default:\n          return formatNumber(numericValue);\n      }\n    },\n    [chartMetric]\n  );\n\n  const chartData = useMemo(() => {\n    if (!filteredProductsArray || !Array.isArray(filteredProductsArray) || filteredProductsArray.length === 0) return [];\n    try {\n      return filteredProductsArray\n        .filter(product => product && product.name && typeof product === 'object' && product.name !== null && product.name !== undefined && product.name !== '')\n        .map(product => {\n          try {\n            let value = 0;\n            if (chartMetric === 'fatturato') value = Number(product.fatturato) || 0;\n            else if (chartMetric === 'volume') value = Number(product.volume) || 0;\n            else if (chartMetric === 'agents') value = Number(product.agents) || 0;\n            const displayName = getProductDisplayName(product.name);\n            if (!displayName) return null;\n            return {\n              name: String(displayName),\n              value: Math.max(0, Number(value) || 0),\n              originalName: product.name\n            };\n          } catch (error) { return null; }\n        })\n        .filter(item => item && item.value > 0 && typeof item.name === 'string' && typeof item.value === 'number' && !isNaN(item.value))\n        .sort((a, b) => (b.value || 0) - (a.value || 0));\n    } catch (error) { return []; }\n  }, [filteredProductsArray, chartMetric]);\n\n  return (\n    <div className=\"modern-products-analysis\">\n      {/* Header, Stats, Filters, Cards, and Table views remain the same */}\n      <div className=\"products-header\">\n        <div className=\"header-content\">\n          <div className=\"title-section\">\n            <h1 className=\"page-title\"><Package size={32} />Analisi Prodotti</h1>\n            <p className=\"page-subtitle\">Performance e trends dei prodotti commerciali</p>\n          </div>\n          <div className=\"view-controls\">\n            <div className=\"view-mode-selector\">\n              <button className={`view-btn ${viewMode === 'cards' ? 'active' : ''}`} onClick={() => setViewMode('cards')}><BarChart3 size={16} />Cards</button>\n              <button className={`view-btn ${viewMode === 'table' ? 'active' : ''}`} onClick={() => setViewMode('table')}><Activity size={16} />Tabella</button>\n              <button className={`view-btn ${viewMode === 'chart' ? 'active' : ''}`} onClick={() => setViewMode('chart')}><PieChart size={16} />Grafici</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"global-stats\">\n          <div className=\"stat-card primary\"><div className=\"stat-icon\"><Package size={28} /></div><div className=\"stat-content\"><span className=\"stat-value\">{totalStats.totalProducts}</span><span className=\"stat-label\">Prodotti Attivi</span></div></div>\n          <div className=\"stat-card success\"><div className=\"stat-icon\"><Target size={28} /></div><div className=\"stat-content\"><span className=\"stat-value\">{formatNumber(totalStats.totalVolume)}</span><span className=\"stat-label\">Volume Totale</span></div></div>\n          <div className=\"stat-card accent\"><div className=\"stat-icon\"><TrendingUp size={28} /></div><div className=\"stat-content\"><span className=\"stat-value\">{formatCurrency(totalStats.totalRevenue)}</span><span className=\"stat-label\">Fatturato Prodotti</span></div></div>\n        </div>\n      </div>\n      <div className=\"controls-section\">\n        <div className=\"category-filters\">\n          <span className=\"filter-label\"><Filter size={16} />Categorie:</span>\n          <div className=\"category-buttons\">\n            <button className={`category-btn ${selectedCategory === 'all' ? 'active' : ''}`} onClick={() => setSelectedCategory('all')}><Package size={16} />Tutti</button>\n            {Object.entries(productCategories).map(([key, category]) => {\n              const Icon = category.icon;\n              return (<button key={key} className={`category-btn ${selectedCategory === key ? 'active' : ''}`} onClick={() => setSelectedCategory(key)}><Icon size={16} />{category.name}</button>);\n            })}\n          </div>\n        </div>\n        <div className=\"sort-controls\">\n          <span className=\"sort-label\">Ordina per:</span>\n          <div className=\"sort-buttons\">\n            <button className={`sort-btn ${sortBy === 'volume' ? 'active' : ''}`} onClick={() => setSortBy('volume')}>Volume</button>\n            <button className={`sort-btn ${sortBy === 'fatturato' ? 'active' : ''}`} onClick={() => setSortBy('fatturato')}>Fatturato</button>\n            <button className={`sort-btn ${sortBy === 'agents' ? 'active' : ''}`} onClick={() => setSortBy('agents')}>Agenti</button>\n          </div>\n        </div>\n      </div>\n      {viewMode === 'cards' && (\n        <div className=\"products-grid\">\n          {sortedProducts.length > 0 ? (\n            sortedProducts.map(([productKey, product]) => {\n              const Icon = getProductIcon(productKey);\n              return (\n                <div key={productKey} className=\"product-card\">\n                  <div className=\"product-header\"><div className=\"product-icon\" style={{ background: getProductColor(productKey) }}><Icon size={24} className=\"text-white\" /></div><div className=\"product-info\"><h3 className=\"product-name\">{product.displayName || productKey}</h3><div className=\"product-meta\"><span className=\"agents-count\"><Users size={14} />{product.agents} agenti</span></div></div></div>\n                  <div className=\"product-metrics\"><div className=\"metric-row\"><div className=\"metric-item\"><span className=\"metric-label\">Volume</span><span className=\"metric-value volume\">{formatNumber(product.volume)}</span></div>{product.fatturato > 0 && (<div className=\"metric-item\"><span className=\"metric-label\">Fatturato</span><span className=\"metric-value revenue\">{formatCurrency(product.fatturato)}</span></div>)}</div></div>\n                  <div className=\"top-agents\"><span className=\"top-agents-label\">Top Performer:</span><div className=\"agents-list\">{product.topAgents.slice(0, 2).map((agent, index) => (<span key={agent} className={`agent-badge ${index === 0 ? 'gold' : 'silver'}`}>{index === 0 && '🥇'} {agent.split(' ')[0]}</span>))}</div></div>\n                </div>);\n            })\n          ) : (<div className=\"no-products\"><Package size={48} className=\"opacity-30\" /><h3>Nessun prodotto trovato</h3><p>Modifica i filtri o carica nuovi dati per visualizzare i prodotti.</p></div>)}\n        </div>\n      )}\n      {viewMode === 'table' && (\n        <div className=\"products-table-container\">\n          <div className=\"table-wrapper\">\n            <table className=\"products-table\">\n              <thead><tr><th>Prodotto</th><th>Volume</th><th>Fatturato</th><th>Agenti</th><th>Top Performer</th></tr></thead>\n              <tbody>\n                {sortedProducts.map(([productKey, product], index) => {\n                  const Icon = getProductIcon(productKey);\n                  return (\n                    <tr key={productKey} className=\"product-row\">\n                      <td className=\"product-cell\"><div className=\"product-info-table\"><div className=\"product-icon-small\" style={{ background: getProductColor(productKey) }}><Icon size={16} className=\"text-white\" /></div><span className=\"product-name-table\">{product.displayName || productKey}</span></div></td>\n                      <td className=\"volume-cell\">{formatNumber(product.volume)}</td>\n                      <td className=\"revenue-cell\">{product.fatturato > 0 ? formatCurrency(product.fatturato) : '-'}</td>\n                      <td className=\"agents-cell\">{product.agents}</td>\n                      <td className=\"top-agent-cell\">{product.topAgents[0]?.split(' ')[0] || '-'}</td>\n                    </tr>);\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {/* Production-ready Chart View */}\n      {viewMode === 'chart' && (\n      <div className=\"charts-container-real\">\n        <div className=\"chart-controls\">\n          <div className=\"chart-type-selector\">\n            <label>Tipo Grafico:</label>\n            <select value={chartType} onChange={(e) => setChartType(e.target.value)}>\n              <option value=\"pie\">Grafico a Torta</option>\n              <option value=\"bar\">Grafico a Barre</option>\n              <option value=\"line\">Grafico Lineare</option>\n              <option value=\"area\">Grafico ad Area</option>\n            </select>\n          </div>\n          <div className=\"chart-metric-selector\">\n            <label>Metrica:</label>\n            <select value={chartMetric} onChange={(e) => setChartMetric(e.target.value)}>\n              <option value=\"fatturato\">Fatturato</option>\n              <option value=\"volume\">Volume</option>\n              <option value=\"agents\">N° Agenti</option>\n            </select>\n          </div>\n        </div>\n\n        {!chartData || chartData.length === 0 ? (\n          <div className=\"no-chart-data\">\n            <Package size={48} className=\"opacity-30\" />\n            <h3>⚠️ NESSUN DATO PER I GRAFICI</h3>\n            <p>Prova a cambiare file, filtri, o controlla che i dati siano stati caricati correttamente.</p>\n          </div>\n        ) : (\n          <div className=\"charts-grid\">\n            <div className=\"main-chart-card\">\n              <div className=\"chart-header\">\n                <h3>Distribuzione per {chartMetric}</h3>\n              </div>\n              <div className=\"chart-wrapper\" style={{ width: '100%', height: '400px' }}>\n                <ResponsiveContainer>\n                  { chartType === 'pie' ? (\n                    <RechartsPieChart>\n                      <Pie\n                        data={chartData}\n                        dataKey=\"value\"\n                        nameKey=\"name\"\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        outerRadius={120}\n                        label={({ value }) => formatChartValue(value, { includeUnit: chartMetric === 'agents' })}\n                        labelLine={false}\n                      >\n                        {chartData.map((entry, index) => (<Cell key={`cell-${index}`} fill={CHART_COLORS[index % CHART_COLORS.length]} />))}\n                      </Pie>\n                      <Tooltip formatter={(value) => formatChartValue(value, { includeUnit: chartMetric === 'agents' })} />\n                      <Legend />\n                    </RechartsPieChart>\n                  ) : chartType === 'bar' ? (\n                    <BarChart data={chartData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"name\" angle={-25} textAnchor=\"end\" height={80} interval={0} fontSize={10} />\n                      <YAxis tickFormatter={(value) => formatChartValue(value)} />\n                      <Tooltip formatter={(value) => formatChartValue(value, { includeUnit: chartMetric === 'agents' })} />\n                      <Legend />\n                      <Bar dataKey=\"value\">\n                        <LabelList\n                          dataKey=\"value\"\n                          position=\"top\"\n                          formatter={(value) => formatChartValue(value, { includeUnit: chartMetric === 'agents' })}\n                        />\n                        {chartData.map((entry, index) => <Cell key={`cell-${index}`} fill={CHART_COLORS[index % CHART_COLORS.length]} />)}\n                      </Bar>\n                    </BarChart>\n                  ) : chartType === 'line' ? (\n                    <LineChart data={chartData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"name\" />\n                      <YAxis tickFormatter={(value) => formatChartValue(value)} />\n                      <Tooltip formatter={(value) => formatChartValue(value, { includeUnit: chartMetric === 'agents' })} />\n                      <Legend />\n                      <Line type=\"monotone\" dataKey=\"value\" stroke={CHART_COLORS[0]}>\n                        <LabelList\n                          dataKey=\"value\"\n                          position=\"top\"\n                          formatter={(value) => formatChartValue(value, { includeUnit: chartMetric === 'agents' })}\n                        />\n                      </Line>\n                    </LineChart>\n                  ) : ( // Area Chart\n                    <AreaChart data={chartData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"name\" />\n                      <YAxis tickFormatter={(value) => formatChartValue(value)} />\n                      <Tooltip formatter={(value) => formatChartValue(value, { includeUnit: chartMetric === 'agents' })} />\n                      <Legend />\n                      <Area type=\"monotone\" dataKey=\"value\" stroke={CHART_COLORS[0]} fill={CHART_COLORS[0]} fillOpacity={0.3}>\n                        <LabelList\n                          dataKey=\"value\"\n                          position=\"top\"\n                          formatter={(value) => formatChartValue(value, { includeUnit: chartMetric === 'agents' })}\n                        />\n                      </Area>\n                    </AreaChart>\n                  )}\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    )}\n    </div>\n  );\n};\n\nexport default ModernProductsAnalysis;\n","import React, { useState, useMemo } from 'react';\nimport { useData } from '../App';\nimport { formatAgentName } from '../utils/formatter';\nimport { formatCurrency, formatNumber } from '../utils/excelParser';\nimport './ModernNewClientsPage.css';\nimport { UserPlus, RefreshCw, Search, Filter, Users, ArrowUp, ArrowDown, Trophy, BarChart, DollarSign, Briefcase, Building, Handshake, TrendingUp } from 'lucide-react';\n\nconst getPerformanceLevel = (clientCount) => {\n    if (clientCount >= 5) return 'high';\n    if (clientCount >= 2) return 'medium';\n    return 'low';\n};\n\nconst NewClientAgentCard = ({ agent }) => {\n    const performance = getPerformanceLevel(agent.nuovoCliente);\n    const avatarName = agent.nome.split(' ').map(n => n[0]).join('').substring(0, 2);\n\n    return (\n        <div className={`new-client-card ${performance}`}>\n            <div className={`card-header ${performance}`}>\n                <div className=\"avatar\">{avatarName}</div>\n                <div className=\"agent-info\">\n                    <h3 className=\"agent-name\">{agent.nome}</h3>\n                    <p className=\"agent-sm\">{agent.sm}</p>\n                </div>\n                <div className=\"performance-badge\">\n                    <span className=\"new-clients-count\">{formatNumber(agent.nuovoCliente)}</span>\n                    <UserPlus size={20} />\n                </div>\n            </div>\n            <div className=\"card-body\">\n                <div className=\"stats-grid\">\n                    <div className=\"stat-item highlight\">\n                        <div className=\"stat-icon\"><DollarSign size={20} /></div>\n                        <div className=\"stat-content\">\n                            <span className=\"stat-label\">Fatturato Nuovi Clienti</span>\n                            <span className=\"stat-value primary\">{formatCurrency(agent.fatturatoNuovoCliente)}</span>\n                        </div>\n                    </div>\n                    <div className=\"stat-item\">\n                        <div className=\"stat-icon\"><TrendingUp size={20} /></div>\n                        <div className=\"stat-content\">\n                            <span className=\"stat-label\">Fatturato Rush</span>\n                            <span className=\"stat-value\">{formatCurrency(agent.fatturatoRush)}</span>\n                        </div>\n                    </div>\n                </div>\n                {/* Placeholder for acquisition channels as data is not available */}\n                <div className=\"acquisition-channels\">\n                    <h5>Canali Acquisizione</h5>\n                    <div className=\"channels-grid\">\n                        <div className=\"channel-item\">\n                            <span className=\"channel-name\">Diretto</span>\n                            <span className=\"channel-value\">-</span>\n                        </div>\n                        <div className=\"channel-item\">\n                            <span className=\"channel-name\">Referral</span>\n                            <span className=\"channel-value\">-</span>\n                        </div>\n                         <div className=\"channel-item\">\n                            <span className=\"channel-name\">Altro</span>\n                            <span className=\"channel-value\">-</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"card-footer\">\n                <div className=\"performance-indicator\">\n                    <div className={`indicator-dot ${performance}`}></div>\n                    <span className=\"performance-text\">Performance: {performance.charAt(0).toUpperCase() + performance.slice(1)}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nconst PerformerCard = ({ agent, rank }) => {\n    const rankClass = `rank-${rank}`;\n    return (\n        <div className={`performer-card ${rankClass}`}>\n            <div className=\"performer-rank\">{rank}</div>\n            <div className=\"performer-info\">\n                <h4>{agent.nome}</h4>\n                <p className=\"performer-sm\">{agent.sm}</p>\n            </div>\n            <div className=\"performer-stats\">\n                <div className=\"stat-item\">\n                    <UserPlus size={16} /> <strong>{formatNumber(agent.nuovoCliente)}</strong> Clienti\n                </div>\n                <div className=\"stat-item primary\">\n                    <DollarSign size={16} /> <strong>{formatCurrency(agent.fatturatoNuovoCliente)}</strong> Fatturato\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nconst ModernNewClientsPage = () => {\n    const { data, selectedFileDate, loadFiles, globalLoading } = useData();\n    const [refreshing, setRefreshing] = useState(false);\n    const [filters, setFilters] = useState({ searchTerm: '', selectedSm: '' });\n    const [sort, setSort] = useState({ by: 'nuovoCliente', order: 'desc' });\n\n    const { agents, smList, stats, topPerformers, allAgentsInPeriod } = useMemo(() => {\n        const emptyState = { agents: [], smList: [], stats: { totalClients: 0, totalRevenue: 0, avgClientsPerAgent: 0, topSm: { name: 'N/A', clients: 0 } }, topPerformers: [], allAgentsInPeriod: [] };\n        if (!selectedFileDate || !data.uploadedFiles || data.uploadedFiles.length === 0) return emptyState;\n\n        const file = data.uploadedFiles.find(f => f.date === selectedFileDate);\n        if (!file || !file.data || !file.data.agents) return emptyState;\n\n        const allAgents = file.data.agents.map((agent, index) => ({ ...agent, id: `${file.date}-${agent.nome}-${index}`, nome: formatAgentName(agent.nome) }));\n        const uniqueSmList = [...new Set(allAgents.map(a => a.sm).filter(Boolean))].sort();\n\n        let filteredAgents = allAgents.filter(agent =>\n            agent.nome.toLowerCase().includes(filters.searchTerm.toLowerCase()) &&\n            (filters.selectedSm === '' || agent.sm === filters.selectedSm)\n        );\n\n        filteredAgents.sort((a, b) => {\n            const valA = a[sort.by] || 0;\n            const valB = b[sort.by] || 0;\n            return sort.order === 'asc' ? valA - valB : valB - valA;\n        });\n\n        const totalClients = filteredAgents.reduce((sum, agent) => sum + (agent.nuovoCliente || 0), 0);\n        const totalRevenue = filteredAgents.reduce((sum, agent) => sum + (agent.fatturatoNuovoCliente || 0), 0);\n        const avgClientsPerAgent = filteredAgents.length > 0 ? totalClients / filteredAgents.length : 0;\n\n        const smPerformance = allAgents.reduce((acc, agent) => {\n            acc[agent.sm] = (acc[agent.sm] || 0) + (agent.nuovoCliente || 0);\n            return acc;\n        }, {});\n        const topSmEntry = Object.entries(smPerformance).sort((a, b) => b[1] - a[1])[0];\n        const topSm = topSmEntry ? { name: topSmEntry[0], clients: topSmEntry[1] } : { name: 'N/A', clients: 0 };\n\n        const topPerformers = [...allAgents].filter(a => a.nuovoCliente > 0).sort((a, b) => (b.nuovoCliente || 0) - (a.nuovoCliente || 0)).slice(0, 3);\n\n        return { agents: filteredAgents, smList: uniqueSmList, stats: { totalClients, totalRevenue, avgClientsPerAgent, topSm }, topPerformers, allAgentsInPeriod: allAgents };\n    }, [data.uploadedFiles, selectedFileDate, filters, sort]);\n\n    const handleFilterChange = (name, value) => setFilters(prev => ({ ...prev, [name]: value }));\n    const handleSortChange = (newSortBy) => setSort(prev => ({ ...prev, by: newSortBy, order: prev.by === newSortBy && prev.order === 'desc' ? 'asc' : 'desc' }));\n    const handleRefresh = async () => { setRefreshing(true); await loadFiles(); setRefreshing(false); };\n    const resetFilters = () => { setFilters({ searchTerm: '', selectedSm: '' }); setSort({ by: 'nuovoCliente', order: 'desc' }); };\n\n    if (globalLoading && !stats.totalClients) {\n        return <div className=\"modern-new-clients-loading\"><div className=\"loading-spinner\"></div><p>Analizzando i dati di acquisizione...</p></div>;\n    }\n    if (!selectedFileDate || !data.processedData[selectedFileDate]) {\n        return <div className=\"modern-new-clients-loading\"><h3>Nessun file selezionato</h3><p>Per favore, vai alla sezione \"Gestione File\" e seleziona un periodo da analizzare.</p></div>;\n    }\n\n    return (\n        <div className=\"modern-new-clients-container\">\n            <div className=\"page-header\">\n                <div className=\"header-content\">\n                    <div className=\"header-text\">\n                        <h1 className=\"page-title\"><UserPlus size={32} /> Acquisizione Nuovi Clienti</h1>\n                        <p className=\"page-subtitle\">Analisi delle performance di acquisizione della rete vendita.</p>\n                    </div>\n                    <button className={`refresh-btn ${refreshing || globalLoading ? 'refreshing' : ''}`} onClick={handleRefresh} disabled={refreshing || globalLoading}>\n                        <RefreshCw size={20} /> {refreshing || globalLoading ? 'Aggiornamento...' : 'Aggiorna Dati'}\n                    </button>\n                </div>\n                <div className=\"header-stats\">\n                    <div className=\"stat-card primary\"><div className=\"stat-icon\"><Handshake size={24} /></div><div className=\"stat-content\"><span className=\"stat-value\">{formatNumber(stats.totalClients)}</span><span className=\"stat-label\">Clienti Acquisiti</span></div></div>\n                    <div className=\"stat-card success\"><div className=\"stat-icon\"><DollarSign size={24} /></div><div className=\"stat-content\"><span className=\"stat-value\">{formatCurrency(stats.totalRevenue)}</span><span className=\"stat-label\">Fatturato da Nuovi Clienti</span></div></div>\n                    <div className=\"stat-card accent\"><div className=\"stat-icon\"><BarChart size={24} /></div><div className=\"stat-content\"><span className=\"stat-value\">{stats.avgClientsPerAgent.toFixed(1)}</span><span className=\"stat-label\">Media Clienti / Agente</span></div></div>\n                    <div className=\"stat-card info\"><div className=\"stat-icon\"><Building size={24} /></div><div className=\"stat-content\"><span className=\"stat-value\">{formatAgentName(stats.topSm.name)}</span><span className=\"stat-label\">Top Coordinatore ({formatNumber(stats.topSm.clients)} clienti)</span></div></div>\n                </div>\n            </div>\n\n            {topPerformers.length > 0 && (\n                <div className=\"top-performers-section\">\n                    <h2 className=\"section-title\"><Trophy size={24}/> Top Performers</h2>\n                    <div className=\"performers-grid\">\n                        {topPerformers.map((agent, index) => <PerformerCard key={agent.id} agent={agent} rank={index + 1} />)}\n                    </div>\n                </div>\n            )}\n\n            <div className=\"filters-modern\">\n                <div className=\"filters-header\">\n                    <div className=\"filters-title\"><Filter size={20} />Filtri Agenti</div>\n                    <div className=\"results-count\">{agents.length} di {allAgentsInPeriod.length} agenti</div>\n                </div>\n                <div className=\"filters-grid\">\n                    <div className=\"filter-group\">\n                        <label className=\"filter-label\"><Search size={16} /> Cerca Agente</label>\n                        <input type=\"text\" placeholder=\"Nome agente...\" value={filters.searchTerm} onChange={(e) => handleFilterChange('searchTerm', e.target.value)} className=\"modern-search-input\" />\n                    </div>\n                    <div className=\"filter-group\">\n                        <label className=\"filter-label\"><Users size={16} /> Filtra per Coordinatore</label>\n                        <select value={filters.selectedSm} onChange={(e) => handleFilterChange('selectedSm', e.target.value)} className=\"modern-select\">\n                            <option value=\"\">Tutti i Coordinatori</option>\n                            {smList.map(sm => <option key={sm} value={sm}>{sm}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"filter-group\">\n                        <label className=\"filter-label\">Ordina Per</label>\n                        <div className=\"sort-controls\">\n                            <select value={sort.by} onChange={(e) => handleSortChange(e.target.value)} className=\"modern-select\">\n                                <option value=\"nuovoCliente\">Nuovi Clienti</option>\n                                <option value=\"fatturatoNuovoCliente\">Fatturato NC</option>\n                                <option value=\"fatturatoRush\">Fatturato Rush</option>\n                            </select>\n                            <button className=\"sort-order-btn\" onClick={() => handleSortChange(sort.by)}>\n                                {sort.order === 'desc' ? <ArrowDown size={16} /> : <ArrowUp size={16} />}\n                            </button>\n                        </div>\n                    </div>\n                     <div className=\"filter-group\">\n                        <label className=\"filter-label\">&nbsp;</label>\n                        <button className=\"reset-filters-btn\" onClick={resetFilters}>Reset Filtri</button>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"agents-section\">\n                 <h2 className=\"section-title\"><Briefcase size={24}/> Dettaglio Agenti</h2>\n                <div className={`agents-grid-modern ${globalLoading ? 'loading' : ''}`}>\n                    {agents.length > 0 ? (\n                        agents.map(agent => <NewClientAgentCard key={agent.id} agent={agent} />)\n                    ) : (\n                        <div className=\"no-results-modern\">\n                            <div className=\"no-results-icon\"><Search size={48} /></div>\n                            <h3>Nessun agente trovato</h3>\n                            <p>Prova a modificare i filtri per visualizzare più risultati.</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ModernNewClientsPage;\n","import React, { useState, useMemo } from 'react';\nimport { useData } from '../App';\nimport './ModernFastwebPage.css';\nimport { formatAgentName } from '../utils/formatter';\nimport {\n  Zap,\n  Users,\n  Award,\n  TrendingUp,\n  BarChart,\n  Filter,\n  Search,\n  User,\n  FileText,\n  Star,\n  Shield,\n  Frown,\n  RefreshCw,\n  Eye,\n  UserCheck,\n  Building,\n  Crown\n} from 'lucide-react';\n\n// Helper to format numbers\nconst formatNumber = (value) => {\n  return new Intl.NumberFormat('it-IT').format(value || 0);\n};\n\nconst ModernFastwebPage = () => {\n  const { data, selectedFileDate, globalLoading, loadFiles } = useData();\n  const [activeView, setActiveView] = useState('overview');\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  const handleRefresh = async () => {\n    setIsRefreshing(true);\n    await loadFiles();\n    // A little delay to give a feeling of loading\n    setTimeout(() => setIsRefreshing(false), 500);\n  };\n\n  const fastwebData = useMemo(() => {\n    if (!data.uploadedFiles || data.uploadedFiles.length === 0) {\n      return null;\n    }\n\n    const file = selectedFileDate\n      ? data.uploadedFiles.find(f => f.date === selectedFileDate)\n      : data.uploadedFiles[0];\n\n    if (!file?.data?.agents) {\n      return null;\n    }\n\n    const agents = file.data.agents;\n    const agentsWithFastweb = agents.filter(a => (a.fastwebEnergia || 0) > 0);\n\n    if (agentsWithFastweb.length === 0) {\n      return {\n        totalContracts: 0,\n        totalAgents: 0,\n        avgContracts: 0,\n        topAgent: null,\n        topSm: null,\n        agents: [],\n        smRanking: [],\n        period: file.displayDate\n      };\n    }\n\n    const totalContracts = agentsWithFastweb.reduce((sum, agent) => sum + agent.fastwebEnergia, 0);\n\n    const topAgent = agentsWithFastweb.reduce((max, agent) =>\n        agent.fastwebEnergia > max.fastwebEnergia ? agent : max, agentsWithFastweb[0]\n    );\n\n    // SM Ranking\n    const smMap = new Map();\n    agentsWithFastweb.forEach(agent => {\n      if (!agent.sm) return;\n      const smName = formatAgentName(agent.sm);\n      const current = smMap.get(smName) || { contracts: 0, agents: 0, agentList: [] };\n      current.contracts += agent.fastwebEnergia;\n      current.agents += 1;\n      current.agentList.push({ name: formatAgentName(agent.nome), contracts: agent.fastwebEnergia });\n      smMap.set(smName, current);\n    });\n\n    const smRanking = Array.from(smMap.entries())\n      .map(([name, data]) => ({ name, ...data }))\n      .sort((a, b) => b.contracts - a.contracts);\n\n    const topSm = smRanking.length > 0 ? smRanking[0] : null;\n\n    return {\n      totalContracts,\n      totalAgents: agentsWithFastweb.length,\n      avgContracts: totalContracts / agentsWithFastweb.length,\n      topAgent,\n      topSm,\n      agents: agentsWithFastweb.sort((a,b) => b.fastwebEnergia - a.fastwebEnergia),\n      smRanking,\n      period: file.displayDate\n    };\n  }, [data, selectedFileDate]);\n\n  if (globalLoading) {\n    return (\n      <div className=\"modern-fastweb-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Caricamento dati Fastweb...</p>\n      </div>\n    );\n  }\n\n  if (!fastwebData) {\n    return (\n        <div className=\"modern-fastweb-container\">\n            <div className=\"no-results\" style={{ gridColumn: '1 / -1' }}>\n                <Frown size={64} />\n                <h3>Nessun dato Fastweb disponibile</h3>\n                <p>Carica un file per visualizzare le statistiche dei contratti Fastweb.</p>\n            </div>\n        </div>\n    );\n  }\n\n  const { totalContracts, totalAgents, avgContracts, topAgent, topSm, agents, smRanking, period } = fastwebData;\n\n  const renderOverview = () => (\n    <div className=\"overview-section\">\n        <div className=\"section-card\">\n            <div className=\"section-header\">\n                <h3><Crown size={20} /> Top Performers</h3>\n                <span className=\"badge-live\">Live</span>\n            </div>\n            <div className=\"performers-list\">\n                {topAgent ? (\n                    <div className=\"performer-item rank-1\">\n                        <div className=\"performer-rank\">1</div>\n                        <div className=\"performer-info\">\n                            <h4>{formatAgentName(topAgent.nome)}</h4>\n                            <p>Miglior Agente</p>\n                        </div>\n                        <div className=\"performer-stats\">\n                            <div className=\"stat-item primary\">\n                                <Zap size={14} />\n                                <strong>{formatNumber(topAgent.fastwebEnergia)}</strong> contratti\n                            </div>\n                        </div>\n                    </div>\n                ) : <p>Nessun agente con contratti Fastweb.</p>}\n\n                {topSm ? (\n                    <div className=\"performer-item rank-2\">\n                        <div className=\"performer-rank\">1</div>\n                        <div className=\"performer-info\">\n                            <h4>{topSm.name}</h4>\n                            <p>Miglior SM</p>\n                        </div>\n                         <div className=\"performer-stats\">\n                            <div className=\"stat-item primary\">\n                                <Zap size={14} />\n                                <strong>{formatNumber(topSm.contracts)}</strong> contratti\n                            </div>\n                        </div>\n                    </div>\n                ) : <p>Nessun SM con contratti Fastweb.</p>}\n            </div>\n        </div>\n        <div className=\"section-card\">\n            <div className=\"section-header\">\n                <h3><Building size={20} /> Classifica Sales Manager</h3>\n            </div>\n            <div className=\"sm-rankings-grid\">\n                {smRanking.slice(0, 4).map((sm, index) => (\n                    <div key={sm.name} className={`sm-card ${index === 0 ? 'rank-1' : ''}`}>\n                        {index === 0 && <div className=\"sm-rank\">🏆</div>}\n                        <div className=\"sm-info\">\n                            <h4>{sm.name}</h4>\n                        </div>\n                        <div className=\"sm-metrics\">\n                            <div className=\"metric\">\n                                <span className=\"metric-value\">{formatNumber(sm.contracts)}</span>\n                                <span className=\"metric-label\">Contratti</span>\n                            </div>\n                            <div className=\"metric\">\n                                <span className=\"metric-value\">{formatNumber(sm.agents)}</span>\n                                <span className=\"metric-label\">Agenti</span>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    </div>\n  );\n\n  const renderAgentsList = () => (\n     <div className=\"agents-section\">\n        <div className=\"agents-grid\">\n            {agents.length > 0 ? agents.map(agent => (\n                <div key={agent.id} className=\"fastweb-agent-card low\">\n                    <div className=\"card-header\">\n                        <div className=\"agent-avatar\">{formatAgentName(agent.nome).charAt(0)}</div>\n                        <div className=\"agent-info\">\n                            <h4>{formatAgentName(agent.nome)}</h4>\n                            <p>{formatAgentName(agent.sm)}</p>\n                        </div>\n                        <div className=\"contracts-badge\">\n                            <Zap size={16} />\n                            <span>{formatNumber(agent.fastwebEnergia)}</span>\n                        </div>\n                    </div>\n                </div>\n            )) : (\n                 <div className=\"no-results\">\n                    <Frown size={48} />\n                    <h3>Nessun agente trovato</h3>\n                    <p>Nessun agente ha contratti Fastweb in questo periodo.</p>\n                </div>\n            )}\n        </div>\n     </div>\n  );\n\n  return (\n    <div className=\"modern-fastweb-container\">\n      <header className=\"page-header fastweb-theme\">\n        <div className=\"header-content\">\n          <div className=\"header-text\">\n            <h1 className=\"page-title\"><Zap /> Analisi Fastweb</h1>\n            <p className=\"page-subtitle\">Dettaglio e performance dei contratti Fastweb Energia per il periodo: <strong>{period || 'N/A'}</strong></p>\n          </div>\n          <div className=\"header-actions\">\n            <button onClick={handleRefresh} disabled={isRefreshing} className={`refresh-btn ${isRefreshing ? 'refreshing' : ''}`}>\n              <RefreshCw size={18} />\n              <span>{isRefreshing ? 'Aggiornando...' : 'Aggiorna Dati'}</span>\n            </button>\n          </div>\n        </div>\n        <div className=\"kpi-grid\">\n            <div className=\"kpi-card primary\">\n                <div className=\"kpi-icon\"><Zap size={28}/></div>\n                <div className=\"kpi-content\">\n                    <div className=\"kpi-value\">{formatNumber(totalContracts)}</div>\n                    <div className=\"kpi-label\">Contratti Totali</div>\n                </div>\n            </div>\n            <div className=\"kpi-card success\">\n                <div className=\"kpi-icon\"><Users size={28}/></div>\n                <div className=\"kpi-content\">\n                    <div className=\"kpi-value\">{formatNumber(totalAgents)}</div>\n                    <div className=\"kpi-label\">Agenti con Contratti</div>\n                </div>\n            </div>\n            <div className=\"kpi-card accent\">\n                <div className=\"kpi-icon\"><BarChart size={28}/></div>\n                <div className=\"kpi-content\">\n                    <div className=\"kpi-value\">{formatNumber(avgContracts.toFixed(2))}</div>\n                    <div className=\"kpi-label\">Media Contratti/Agente</div>\n                </div>\n            </div>\n            <div className=\"kpi-card info\">\n                <div className=\"kpi-icon\"><Award size={28}/></div>\n                <div className=\"kpi-content\">\n                    <div className=\"kpi-value\">{topAgent ? formatAgentName(topAgent.nome) : 'N/A'}</div>\n                    <div className=\"kpi-label\">Top Performer</div>\n                </div>\n            </div>\n        </div>\n      </header>\n\n      <div className=\"view-tabs\">\n        <button className={`tab-btn ${activeView === 'overview' ? 'active' : ''}`} onClick={() => setActiveView('overview')}>\n          <Eye size={18} /> Overview\n        </button>\n        <button className={`tab-btn ${activeView === 'agents' ? 'active' : ''}`} onClick={() => setActiveView('agents')}>\n          <UserCheck size={18} /> Lista Agenti\n        </button>\n      </div>\n\n      {activeView === 'overview' ? renderOverview() : renderAgentsList()}\n    </div>\n  );\n};\n\nexport default ModernFastwebPage;\n","import React, { useState, useMemo } from 'react';\nimport { useData } from '../App';\nimport { History, RefreshCw, BarChart2, TrendingUp, TrendingDown, FileText, Lightbulb, CheckCircle, AlertTriangle, Info, Users, UserPlus } from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport './ModernHistoricalAnalysis.css';\n\n// Helper functions for formatting\nconst formatCurrency = (value) => new Intl.NumberFormat('it-IT', { style: 'currency', currency: 'EUR' }).format(value || 0);\nconst formatNumber = (value) => new Intl.NumberFormat('it-IT').format(value || 0);\nconst formatPercentage = (value) => `${value.toFixed(1)}%`;\n\nconst TrendIndicator = ({ value, text = \"vs. mese prec.\" }) => {\n  if (value === null || isNaN(value)) return null;\n  const isPositive = value > 0;\n  const isNegative = value < 0;\n\n  let trendClass = 'neutral';\n  if (isPositive) trendClass = 'positive';\n  if (isNegative) trendClass = 'negative';\n\n  return (\n    <span className={`kpi-trend ${trendClass}`}>\n      {isPositive && <TrendingUp size={14} />}\n      {isNegative && <TrendingDown size={14} />}\n      {formatPercentage(value)} {text}\n    </span>\n  );\n};\n\nconst InsightCard = ({ insight }) => {\n  const { icon: Icon, type, title, text } = insight;\n  return (\n    <div className={`insight-card ${type}`}>\n      <div className=\"insight-icon\">\n        <Icon size={24} />\n      </div>\n      <div className=\"insight-content\">\n        <h4>{title}</h4>\n        <p>{text}</p>\n      </div>\n    </div>\n  );\n};\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    const data = payload[0];\n    return (\n      <div className=\"custom-chart-tooltip\">\n        <p className=\"tooltip-label\">{label}</p>\n        <p style={{ color: data.color }}>\n          {`${data.name}: ${formatCurrency(data.value)}`}\n        </p>\n      </div>\n    );\n  }\n  return null;\n};\n\nconst TrendCard = ({ title, value, icon: Icon }) => {\n  const isUp = value > 0;\n  const isDown = value < 0;\n  const cardClass = isUp ? 'up' : isDown ? 'down' : 'neutral';\n\n  return (\n    <div className={`trend-card ${cardClass}`}>\n      <div className=\"trend-header\">\n        <h4>{title}</h4>\n        <Icon size={20} />\n      </div>\n      <div className=\"trend-content\">\n        <div className=\"trend-percentage\">{formatPercentage(value)}</div>\n        <div className=\"trend-description\">Rispetto al mese precedente</div>\n      </div>\n    </div>\n  );\n};\n\nconst ModernHistoricalAnalysis = ({ setActiveSection }) => {\n  const { data } = useData();\n  const [loading, setLoading] = useState(false);\n  const hasData = data && data.uploadedFiles && data.uploadedFiles.length > 1;\n  const [activeView, setActiveView] = useState('overview');\n  const [chartMetric, setChartMetric] = useState('Fatturato Rush');\n\n  const historicalStats = useMemo(() => {\n    if (!hasData) return null;\n\n    // Use the last 6 files, and ensure they are in chronological order\n    const files = data.uploadedFiles.slice(0, 6).reverse();\n\n    const monthlyData = files.map(file => ({\n      name: file.displayDate,\n      'Fatturato Totale': file.metadata.totalRevenue,\n      'Fatturato Rush': file.metadata.totalRush,\n      'Nuovi Clienti': file.metadata.totalNewClients,\n      'Agenti Attivi': file.metadata.totalAgents,\n    }));\n\n    const latest = files[files.length - 1]?.metadata || {};\n    const previous = files[files.length - 2]?.metadata || {};\n\n    const calcTrend = (current, prev) => {\n      if (prev === 0) return current > 0 ? 100 : 0;\n      return ((current - prev) / prev) * 100;\n    };\n\n    const revenueTrend = calcTrend(latest.totalRevenue, previous.totalRevenue);\n\n    const totalRevenue = files.reduce((sum, f) => sum + f.metadata.totalRevenue, 0);\n    const averageRevenue = totalRevenue / files.length;\n\n    const clientTrend = calcTrend(latest.totalNewClients, previous.totalNewClients);\n\n    const bestMonth = files.reduce((best, current) =>\n      current.metadata.totalRevenue > best.metadata.totalRevenue ? current : best\n    );\n\n    const comparisonData = {\n      headers: files.map(f => f.displayDate),\n      rows: [\n        { metric: 'Fatturato Totale', values: files.map(f => formatCurrency(f.metadata.totalRevenue)) },\n        { metric: 'Fatturato Rush', values: files.map(f => formatCurrency(f.metadata.totalRush)) },\n        { metric: 'Nuovi Clienti', values: files.map(f => formatNumber(f.metadata.totalNewClients)) },\n        { metric: 'Agenti Attivi', values: files.map(f => formatNumber(f.metadata.totalAgents)) },\n      ]\n    };\n\n    const totalRevenuePeriod = files.reduce((sum, f) => sum + f.metadata.totalRevenue, 0);\n    const totalRushPeriod = files.reduce((sum, f) => sum + f.metadata.totalRush, 0);\n    const totalNewClientsPeriod = files.reduce((sum, f) => sum + f.metadata.totalNewClients, 0);\n    const averageAgentsPeriod = files.reduce((sum, f) => sum + f.metadata.totalAgents, 0) / files.length;\n\n    return {\n      monthlyData,\n      comparisonData,\n      kpis: {\n        revenueTrend,\n        averageRevenue,\n        clientTrend,\n        bestMonth: {\n          date: bestMonth.displayDate,\n          revenue: bestMonth.metadata.totalRevenue,\n        }\n      },\n      summary: {\n        totalRevenue: totalRevenuePeriod,\n        totalRush: totalRushPeriod,\n        totalNewClients: totalNewClientsPeriod,\n        averageAgents: averageAgentsPeriod,\n      },\n      trends: {\n        revenue: revenueTrend,\n        rush: calcTrend(latest.totalRush, previous.totalRush),\n        clients: clientTrend,\n        agents: calcTrend(latest.totalAgents, previous.totalAgents),\n      },\n      insights: [\n        {\n          type: 'success',\n          icon: TrendingUp,\n          title: 'Miglior Mese',\n          text: `Il mese con il fatturato più alto è stato ${bestMonth.displayDate} con un totale di ${formatCurrency(bestMonth.metadata.totalRevenue)}.`\n        },\n        {\n          type: 'info',\n          icon: BarChart2,\n          title: 'Performance Fatturato',\n          text: `Il fatturato totale dell'ultimo mese è in ${revenueTrend > 0 ? 'crescita' : 'calo'} del ${formatPercentage(Math.abs(revenueTrend))} rispetto al precedente.`\n        },\n        {\n          type: 'warning',\n          icon: Users,\n          title: 'Andamento Clienti',\n          text: `Nell'ultimo mese, il numero di nuovi clienti è in ${clientTrend > 0 ? 'crescita' : 'calo'} del ${formatPercentage(Math.abs(clientTrend))}.`\n        }\n      ]\n    };\n  }, [data, hasData]);\n\n  // Placeholder function for refreshing data\n  const handleRefresh = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  };\n\n  // Component for loading state\n  const LoadingState = () => (\n    <div className=\"historical-loading\">\n      <div className=\"loading-spinner\"></div>\n      <p>Caricamento dati storici...</p>\n    </div>\n  );\n\n  // Component for no data state\n  const NoDataState = ({ setActiveSection }) => (\n    <div className=\"historical-no-data\">\n      <FileText size={64} />\n      <h2>Nessun Dato Storico Disponibile</h2>\n      <p>Non sono stati ancora caricati file sufficienti per un'analisi storica.</p>\n      <p>Carica i file mensili per abilitare questa funzionalità.</p>\n      <button className=\"upload-more-btn\" onClick={() => setActiveSection('files')}>\n        Vai a Gestione File\n      </button>\n    </div>\n  );\n\n  if (loading) {\n    return (\n      <div className=\"modern-historical-container\">\n        <LoadingState />\n      </div>\n    );\n  }\n\n  if (!hasData) {\n    return (\n      <div className=\"modern-historical-container\">\n        <NoDataState setActiveSection={setActiveSection} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"modern-historical-container\">\n      {/* Header */}\n      <header className=\"page-header historical-theme\">\n        <div className=\"header-content\">\n          <div className=\"header-text\">\n            <h1 className=\"page-title\">\n              <History size={40} />\n              Analisi Storica\n            </h1>\n            <p className=\"page-subtitle\">\n              Confronta le performance e scopri i trend nel tempo.\n            </p>\n          </div>\n          <div className=\"header-actions\">\n            <div className=\"period-selector\">\n              <select className=\"period-select\">\n                <option>Ultimi 6 mesi</option>\n                <option>Ultimi 12 mesi</option>\n                <option>Anno Corrente</option>\n                <option>Anno Precedente</option>\n              </select>\n            </div>\n            <button className=\"refresh-btn\" onClick={handleRefresh} disabled={loading}>\n              <RefreshCw size={16} className={loading ? 'animate-spin' : ''} />\n              Aggiorna\n            </button>\n          </div>\n        </div>\n      </header>\n\n      {/* KPIs */}\n      <section className=\"historical-kpis\">\n        <div className=\"kpi-card trend-positive\">\n          <div className=\"kpi-icon\"><TrendingUp size={24} /></div>\n          <div className=\"kpi-content\">\n            <div className=\"kpi-value\">{formatPercentage(historicalStats.kpis.revenueTrend)}</div>\n            <div className=\"kpi-label\">Trend Fatturato</div>\n            <TrendIndicator value={historicalStats.kpis.revenueTrend} />\n          </div>\n        </div>\n        <div className=\"kpi-card trend-revenue\">\n          <div className=\"kpi-icon\"><BarChart2 size={24} /></div>\n          <div className=\"kpi-content\">\n            <div className=\"kpi-value\">{formatCurrency(historicalStats.kpis.averageRevenue)}</div>\n            <div className=\"kpi-label\">Fatturato Medio Mensile</div>\n          </div>\n        </div>\n        <div className=\"kpi-card trend-growth\">\n           <div className=\"kpi-icon\"><Users size={24} /></div>\n          <div className=\"kpi-content\">\n            <div className=\"kpi-value\">{formatPercentage(historicalStats.kpis.clientTrend)}</div>\n            <div className=\"kpi-label\">Trend Clienti</div>\n            <TrendIndicator value={historicalStats.kpis.clientTrend} />\n          </div>\n        </div>\n        <div className=\"kpi-card trend-insights\">\n           <div className=\"kpi-icon\"><Lightbulb size={24} /></div>\n          <div className=\"kpi-content\">\n            <div className=\"kpi-value\">{historicalStats.kpis.bestMonth.date}</div>\n            <div className=\"kpi-label\">Miglior Mese (Fatt.)</div>\n            <span className=\"kpi-trend\">{formatCurrency(historicalStats.kpis.bestMonth.revenue)}</span>\n          </div>\n        </div>\n      </section>\n\n      {/* View Tabs */}\n      <div className=\"view-tabs\">\n        <button className={`tab-btn ${activeView === 'overview' ? 'active' : ''}`} onClick={() => setActiveView('overview')}>\n          <BarChart2 size={18} />\n          Panoramica\n        </button>\n        <button className={`tab-btn ${activeView === 'trends' ? 'active' : ''}`} onClick={() => setActiveView('trends')}>\n          <TrendingUp size={18} />\n          Trends\n        </button>\n        <button className={`tab-btn ${activeView === 'comparison' ? 'active' : ''}`} onClick={() => setActiveView('comparison')}>\n          <FileText size={18} />\n          Confronto\n        </button>\n        <button className={`tab-btn ${activeView === 'insights' ? 'active' : ''}`} onClick={() => setActiveView('insights')}>\n          <Lightbulb size={18} />\n          Insights\n        </button>\n      </div>\n\n      {/* Content based on active tab */}\n      <main>\n        {activeView === 'overview' && (\n          <section className=\"overview-section\">\n            <div className=\"main-chart-container\">\n              <div className=\"chart-header\">\n                <h3>Andamento Mensile</h3>\n                <div className=\"metric-selector\">\n                  <select className=\"metric-select\" value={chartMetric} onChange={(e) => setChartMetric(e.target.value)}>\n                    <option value=\"Fatturato Rush\">Fatturato Rush</option>\n                    <option value=\"Fatturato Totale\">Fatturato Totale</option>\n                    <option value=\"Nuovi Clienti\">Nuovi Clienti</option>\n                    <option value=\"Agenti Attivi\">Agenti Attivi</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"chart-wrapper\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <LineChart data={historicalStats.monthlyData} margin={{ top: 5, right: 30, left: 50, bottom: 5 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"rgba(0,0,0,0.1)\" />\n                    <XAxis dataKey=\"name\" tick={{ fill: '#64748b' }} />\n                    <YAxis tickFormatter={(value) => chartMetric.includes('Fatturato') ? formatCurrency(value) : formatNumber(value)} tick={{ fill: '#64748b' }} />\n                    <Tooltip content={<CustomTooltip />} />\n                    <Legend />\n                    <Line type=\"monotone\" dataKey={chartMetric} stroke=\"#8b5cf6\" strokeWidth={2} activeDot={{ r: 8 }} />\n                  </LineChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className=\"summary-cards\">\n              <div className=\"summary-card\">\n                <div className=\"summary-header\">\n                  <h4>Riepilogo Periodo</h4>\n                  <TrendingUp size={20} />\n                </div>\n                <div className=\"summary-content\">\n                  <div className=\"metric-row\">\n                    <span>Fatturato Totale</span>\n                    <span className=\"metric-value\">{formatCurrency(historicalStats.summary.totalRevenue)}</span>\n                  </div>\n                  <div className=\"metric-row\">\n                    <span>Fatturato Rush</span>\n                    <span className=\"metric-value\">{formatCurrency(historicalStats.summary.totalRush)}</span>\n                  </div>\n                  <div className=\"metric-row\">\n                    <span>Nuovi Clienti Totali</span>\n                    <span className=\"metric-value\">{formatNumber(historicalStats.summary.totalNewClients)}</span>\n                  </div>\n                  <div className=\"metric-row\">\n                    <span>Media Agenti Attivi</span>\n                    <span className=\"metric-value\">{formatNumber(historicalStats.summary.averageAgents)}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        )}\n        {activeView === 'trends' && (\n          <section className=\"trends-section\">\n            <div className=\"multi-chart-container\">\n              <div className=\"chart-header\">\n                <h3>Analisi dei Trend Mensili</h3>\n              </div>\n              <div className=\"trend-cards-grid\">\n                <TrendCard title=\"Fatturato Totale\" value={historicalStats.trends.revenue} icon={BarChart2} />\n                <TrendCard title=\"Fatturato Rush\" value={historicalStats.trends.rush} icon={TrendingUp} />\n                <TrendCard title=\"Nuovi Clienti\" value={historicalStats.trends.clients} icon={UserPlus} />\n                <TrendCard title=\"Agenti Attivi\" value={historicalStats.trends.agents} icon={Users} />\n              </div>\n            </div>\n          </section>\n        )}\n        {activeView === 'comparison' && (\n          <section className=\"comparison-section\">\n            <div className=\"comparison-controls\">\n              <h3>Confronto Periodi</h3>\n            </div>\n            <div className=\"comparison-table\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>Metrica</th>\n                    {historicalStats.comparisonData.headers.map(header => (\n                      <th key={header}>{header}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {historicalStats.comparisonData.rows.map(row => (\n                    <tr key={row.metric}>\n                      <td className=\"period-cell\">{row.metric}</td>\n                      {row.values.map((value, index) => (\n                        <td key={index}>{value}</td>\n                      ))}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </section>\n        )}\n        {activeView === 'insights' && (\n          <section className=\"insights-section\">\n            <div className=\"insights-header\">\n              <h3>Insights Automatici</h3>\n              <p>Analisi e suggerimenti basati sui dati storici.</p>\n            </div>\n            <div className=\"insights-grid\">\n              {historicalStats.insights.map((insight, index) => (\n                <InsightCard key={index} insight={insight} />\n              ))}\n            </div>\n          </section>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default ModernHistoricalAnalysis;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { apiService } from '../services/apiService';\nimport './ModernSettingsPage.css';\nimport { Shield, KeyRound, Edit, UserPlus, X, RefreshCw, Trash } from 'lucide-react';\nimport toast from 'react-hot-toast';\nimport ConfirmationDialog from './ConfirmationDialog';\n\nconst UserModal = ({ user, mode, onClose, onSave }) => {\n    const [userData, setUserData] = useState({\n        username: user?.username || '',\n        full_name: user?.full_name || '',\n        role: user?.role || 'viewer',\n        password: '',\n        confirmPassword: ''\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setUserData(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleSave = () => {\n        if (mode === 'create' || mode === 'password') {\n            if (userData.password !== userData.confirmPassword || !userData.password) {\n                toast.error('Le password non coincidono o sono vuote.');\n                return;\n            }\n        }\n        if (mode === 'create') {\n            onSave(userData);\n        } else if (mode === 'role') {\n            onSave(user.id, { role: userData.role });\n        } else if (mode === 'password') {\n            onSave(user.id, { password: userData.password });\n        }\n    };\n\n    const titles = {\n        create: 'Crea Nuovo Utente',\n        password: `Modifica Password per ${user?.username}`,\n        role: `Modifica Ruolo per ${user?.username}`\n    };\n\n    return (\n        <div className=\"modal-overlay\">\n            <div className=\"modal-content\">\n                <button className=\"modal-close\" onClick={onClose}><X size={24} /></button>\n                <h2>{titles[mode]}</h2>\n\n                {mode === 'create' && (\n                    <>\n                        <div className=\"form-group\">\n                            <label>Username</label>\n                            <input type=\"text\" name=\"username\" value={userData.username} onChange={handleChange} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Nome Completo</label>\n                            <input type=\"text\" name=\"full_name\" value={userData.full_name} onChange={handleChange} />\n                        </div>\n                    </>\n                )}\n\n                {(mode === 'create' || mode === 'password') && (\n                    <>\n                        <div className=\"form-group\">\n                            <label>Nuova Password</label>\n                            <input type=\"password\" name=\"password\" value={userData.password} onChange={handleChange} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Conferma Nuova Password</label>\n                            <input type=\"password\" name=\"confirmPassword\" value={userData.confirmPassword} onChange={handleChange} />\n                        </div>\n                    </>\n                )}\n\n                {(mode === 'create' || mode === 'role') && (\n                    <div className=\"form-group\">\n                        <label>Ruolo</label>\n                        <select name=\"role\" value={userData.role} onChange={handleChange}>\n                            <option value=\"viewer\">Viewer</option>\n                            <option value=\"admin\">Admin</option>\n                        </select>\n                    </div>\n                )}\n\n                <div className=\"modal-actions\">\n                    <button onClick={onClose} className=\"btn btn-secondary\">Annulla</button>\n                    <button onClick={handleSave} className=\"btn btn-primary\">{mode === 'create' ? 'Crea Utente' : 'Salva'}</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nconst ModernSettingsPage = () => {\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [modalState, setModalState] = useState({ isOpen: false, mode: 'create', user: null });\n    const [dialog, setDialog] = useState({ isOpen: false, title: '', message: '', onConfirm: () => {} });\n\n    const fetchUsers = useCallback(async () => {\n        try {\n            setLoading(true);\n            const fetchedUsers = await apiService.getUsers();\n            setUsers(fetchedUsers);\n            setError(null);\n        } catch (err) {\n            setError('Impossibile caricare gli utenti.');\n            toast.error('Impossibile caricare gli utenti.');\n            console.error(err);\n        } finally {\n            setLoading(false);\n        }\n    }, []);\n\n    useEffect(() => {\n        fetchUsers();\n    }, [fetchUsers]);\n\n    const openModal = (mode, user = null) => {\n        setModalState({ isOpen: true, mode, user });\n    };\n\n    const closeModal = () => {\n        setModalState({ isOpen: false, mode: 'create', user: null });\n    };\n\n    const openDialog = (title, message, onConfirm) => {\n        setDialog({\n            isOpen: true,\n            title,\n            message,\n            onConfirm: () => {\n                onConfirm();\n                handleCloseDialog();\n            }\n        });\n    };\n\n    const handleCloseDialog = () => {\n        setDialog({ ...dialog, isOpen: false });\n    };\n\n    const handleUpdateRole = async (userId, { role }) => {\n        toast.loading('Aggiornamento ruolo...', { id: 'role-update' });\n        try {\n            await apiService.updateUserRole(userId, role);\n            toast.success('Ruolo aggiornato con successo!', { id: 'role-update' });\n            fetchUsers();\n            closeModal();\n        } catch (error) {\n            toast.error(`Errore: ${error.message}`, { id: 'role-update' });\n        }\n    };\n\n    const handleUpdatePassword = async (userId, { password }) => {\n        toast.loading('Aggiornamento password...', { id: 'password-update' });\n        try {\n            await apiService.adminUpdateUserPassword(userId, password);\n            toast.success('Password aggiornata con successo!', { id: 'password-update' });\n            closeModal();\n        } catch (error)\n        {\n            toast.error(`Errore: ${error.message}`, { id: 'password-update' });\n        }\n    };\n\n    const handleCreateUser = async (userData) => {\n        toast.loading('Creazione utente...', { id: 'create-user' });\n        try {\n            await apiService.createUser(userData);\n            toast.success('Utente creato con successo!', { id: 'create-user' });\n            fetchUsers();\n            closeModal();\n        } catch (error) {\n            toast.error(`Errore: ${error.message}`, { id: 'create-user' });\n        }\n    };\n\n    const handleDeleteUser = (user) => {\n        openDialog(\n            'Conferma Eliminazione',\n            `Sei sicuro di voler eliminare l'utente ${user.username}? Questa azione è irreversibile.`,\n            async () => {\n                toast.loading(`Eliminazione di ${user.username}...`, { id: 'delete-user' });\n                try {\n                    await apiService.deleteUser(user.id);\n                    toast.success(`Utente ${user.username} eliminato.`, { id: 'delete-user' });\n                    fetchUsers();\n                } catch (error) {\n                    toast.error(`Errore: ${error.message}`, { id: 'delete-user' });\n                }\n            }\n        );\n    };\n\n    return (\n        <div className=\"modern-settings-container\">\n            <div className=\"page-header\">\n                <div className=\"header-content\">\n                    <div className=\"header-text\">\n                        <h1 className=\"page-title\"><Shield size={32} /> Gestione Utenti</h1>\n                        <p className=\"page-subtitle\">Modifica ruoli e password degli utenti del sistema</p>\n                    </div>\n                    <div className=\"header-actions\">\n                        <button className={`refresh-btn ${loading ? 'refreshing' : ''}`} onClick={fetchUsers} disabled={loading}>\n                            <RefreshCw size={20} />\n                            {loading ? 'Aggiorna...' : 'Aggiorna'}\n                        </button>\n                        <button className=\"btn btn-primary\" onClick={() => openModal('create')}>\n                            <UserPlus size={18} /> Crea Utente\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"settings-content\">\n                <div className=\"user-list-container\">\n                    {loading && <p>Caricamento utenti...</p>}\n                    {error && <p className=\"error-message\">{error}</p>}\n                    {!loading && !error && (\n                        <table className=\"user-table\">\n                            <thead>\n                                <tr>\n                                    <th>Username</th>\n                                    <th>Nome Completo</th>\n                                    <th>Ruolo</th>\n                                    <th>Data Creazione</th>\n                                    <th>Azioni</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user.id}>\n                                        <td>{user.username}</td>\n                                        <td>{user.full_name}</td>\n                                        <td>\n                                            <span className={`role-badge ${user.role}`}>\n                                                {user.role}\n                                            </span>\n                                        </td>\n                                        <td>{new Date(user.created_at).toLocaleDateString()}</td>\n                                        <td className=\"actions-cell\">\n                                            <button className=\"action-btn\" title=\"Modifica Ruolo\" onClick={() => openModal('role', user)}>\n                                                <Edit size={18} />\n                                            </button>\n                                            <button className=\"action-btn\" title=\"Modifica Password\" onClick={() => openModal('password', user)}>\n                                                <KeyRound size={18} />\n                                            </button>\n                                            <button className=\"action-btn delete\" title=\"Elimina Utente\" onClick={() => handleDeleteUser(user)}>\n                                                <Trash size={18} />\n                                            </button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    )}\n                </div>\n            </div>\n\n            {modalState.isOpen && (\n                <UserModal\n                    user={modalState.user}\n                    mode={modalState.mode}\n                    onClose={closeModal}\n                    onSave={\n                        modalState.mode === 'create' ? handleCreateUser :\n                        modalState.mode === 'role' ? handleUpdateRole :\n                        handleUpdatePassword\n                    }\n                />\n            )}\n\n            <ConfirmationDialog\n                open={dialog.isOpen}\n                onClose={handleCloseDialog}\n                onConfirm={dialog.onConfirm}\n                title={dialog.title}\n                message={dialog.message}\n            />\n        </div>\n    );\n};\n\nexport default ModernSettingsPage;\n","import React, { useMemo } from 'react';\nimport { useData } from '../App';\nimport './TestPage.css';\n\nconst TestPage = () => {\n  const { data, selectedFileDate } = useData();\n\n  const { agents, agentKeys } = useMemo(() => {\n    if (!selectedFileDate || !data.processedData[selectedFileDate]) {\n      return { agents: [], agentKeys: [] };\n    }\n\n    const allAgents = data.processedData[selectedFileDate].agents;\n    const firstTenAgents = allAgents.slice(0, 10);\n\n    if (firstTenAgents.length === 0) {\n      return { agents: [], agentKeys: [] };\n    }\n\n    // Get all unique keys from the first 10 agents\n    const keys = new Set();\n    firstTenAgents.forEach(agent => {\n      Object.keys(agent).forEach(key => keys.add(key));\n    });\n    const sortedKeys = Array.from(keys).sort();\n\n\n    return { agents: firstTenAgents, agentKeys: sortedKeys };\n  }, [data, selectedFileDate]);\n\n  if (agents.length === 0) {\n    return (\n      <div className=\"test-page-container\">\n        <h2>Test Page - Dati Agenti</h2>\n        <p>Nessun dato disponibile per il file selezionato o nessun file caricato.</p>\n        <p>Vai su \"Gestione File\" per caricare un file.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"test-page-container\">\n      <h2>Test Page - Primi 10 Agenti</h2>\n      <p>Questa tabella mostra i dati grezzi dei primi 10 agenti importati dal file per il debug della mappatura.</p>\n      <div className=\"table-container\">\n        <table>\n          <thead>\n            <tr>\n              {agentKeys.map(key => (\n                <th key={key}>{key}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {agents.map((agent, index) => (\n              <tr key={index}>\n                {agentKeys.map(key => (\n                  <td key={key}>{typeof agent[key] === 'object' ? JSON.stringify(agent[key]) : agent[key]}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default TestPage;\n","import React, { useMemo } from 'react';\nimport { useData } from '../App';\nimport { formatAgentName } from '../utils/formatter';\nimport './ModernDashboard.css';\nimport {\n  BarChart3, Users, Crown, Activity, TrendingUp,\n  DollarSign, Target, Calendar, Zap\n} from 'lucide-react';\n\n// Utility functions\nconst formatCurrency = (value) => {\n  return new Intl.NumberFormat('it-IT', {\n    style: 'currency',\n    currency: 'EUR'\n  }).format(value || 0);\n};\n\nconst formatNumber = (value) => {\n  return new Intl.NumberFormat('it-IT').format(value || 0);\n};\n\nconst ModernDashboard = () => {\n  const { data, selectedFileDate, setSelectedFileDate } = useData();\n\n  const stats = useMemo(() => {\n    if (!data.uploadedFiles || data.uploadedFiles.length === 0) {\n      return {\n        totalAgents: 0, totalSMs: 0, totalRevenue: 0, totalRush: 0,\n        totalNewClients: 0, totalFastweb: 0, avgRush: 0,\n        topAgent: null, topSM: null, recentFiles: []\n      };\n    }\n\n    const file = selectedFileDate ?\n      data.uploadedFiles.find(f => f.date === selectedFileDate) :\n      data.uploadedFiles[0];\n\n    if (!file?.data?.agents) {\n      return {\n        totalAgents: 0, totalSMs: 0, totalRevenue: 0, totalRush: 0,\n        totalNewClients: 0, totalFastweb: 0, avgRush: 0,\n        topAgent: null, topSM: null,\n        recentFiles: data.uploadedFiles.slice(-3).reverse()\n      };\n    }\n\n    const agents = file.data.agents;\n    const totalRevenue = agents.reduce((sum, agent) => sum + (agent.fatturato?.complessivo || 0), 0);\n    const totalRush = agents.reduce((sum, agent) => sum + (agent.fatturatoRush || 0), 0);\n    const totalNewClients = agents.reduce((sum, agent) => sum + (agent.nuovoCliente || 0), 0);\n    const totalFastweb = agents.reduce((sum, agent) => sum + (agent.fastwebEnergia || 0), 0);\n\n    const topAgent = agents.reduce((max, agent) =>\n      (agent.fatturatoRush || 0) > (max?.fatturatoRush || 0) ? agent : max, null);\n\n    return {\n      totalAgents: agents.length,\n      totalSMs: [...new Set(agents.map(a => a.sm).filter(Boolean))].length,\n      totalRevenue, totalRush, totalNewClients, totalFastweb,\n      avgRush: agents.length > 0 ? totalRush / agents.length : 0,\n      topAgent, recentFiles: data.uploadedFiles.slice(-3).reverse(),\n      currentPeriod: file.displayDate\n    };\n  }, [data, selectedFileDate]);\n\n  return (\n    <div className=\"integrated-dashboard\">\n      {/* Hero Section */}\n      <div className=\"dashboard-hero\">\n        <div className=\"hero-content\">\n          <div className=\"welcome-section\">\n            <h1 className=\"hero-title\">\n              <BarChart3 size={40} />\n              Dashboard RUSH\n            </h1>\n            <p className=\"hero-subtitle\">Panoramica performance commerciali</p>\n          </div>\n        </div>\n\n        <div className=\"performance-overview\">\n          <div className=\"perf-card agents\">\n            <div className=\"perf-icon\"><Users size={32} /></div>\n            <div className=\"perf-content\">\n              <span className=\"perf-value\">{formatNumber(stats.totalAgents)}</span>\n              <span className=\"perf-label\">Agenti Attivi</span>\n              <div className=\"perf-meta\">{stats.totalSMs} Sales Manager</div>\n            </div>\n          </div>\n\n          <div className=\"perf-card revenue\">\n            <div className=\"perf-icon\"><DollarSign size={32} /></div>\n            <div className=\"perf-content\">\n              <span className=\"perf-value\">{formatCurrency(stats.totalRevenue)}</span>\n              <span className=\"perf-label\">Fatturato Totale</span>\n            </div>\n          </div>\n\n          <div className=\"perf-card rush\">\n            <div className=\"perf-icon\"><TrendingUp size={32} /></div>\n            <div className=\"perf-content\">\n              <span className=\"perf-value\">{formatCurrency(stats.totalRush)}</span>\n              <span className=\"perf-label\">Rush Totale</span>\n            </div>\n          </div>\n\n          <div className=\"perf-card clients\">\n            <div className=\"perf-icon\"><Target size={32} /></div>\n            <div className=\"perf-content\">\n              <span className=\"perf-value\">{formatNumber(stats.totalNewClients)}</span>\n              <span className=\"perf-label\">Nuovi Clienti</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content Grid */}\n      <div className=\"dashboard-grid\">\n        <div className=\"dashboard-card performers\">\n          <div className=\"card-header\">\n            <h3><Crown size={20} />Top Performers</h3>\n            <span className=\"card-badge\">Live</span>\n          </div>\n          <div className=\"performers-content\">\n            {stats.topAgent ? (\n              <div className=\"top-performer\">\n                <div className=\"performer-rank\">\n                  <Crown size={24} className=\"text-yellow-500\" />\n                </div>\n                <div className=\"performer-info\">\n                  <h4>{formatAgentName(stats.topAgent.nome)}</h4>\n                  <p>{formatAgentName(stats.topAgent.sm)}</p>\n                  <div className=\"performer-stats\">\n                    <span><TrendingUp size={14} />{formatCurrency(stats.topAgent.fatturatoRush || 0)}</span>\n                    <span><DollarSign size={14} />{formatCurrency(stats.topAgent.fatturato?.complessivo || 0)}</span>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"no-data-small\">\n                <Crown size={32} className=\"opacity-30\" />\n                <p>Carica i dati per visualizzare i top performer</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"dashboard-card metrics\">\n          <div className=\"card-header\">\n            <h3><Activity size={20} />Metriche Chiave</h3>\n          </div>\n          <div className=\"metrics-grid\">\n            <div className=\"metric-item\">\n              <div className=\"metric-icon avg\"><Target size={20} /></div>\n              <div className=\"metric-content\">\n                <span className=\"metric-value\">{formatCurrency(stats.avgRush)}</span>\n                <span className=\"metric-label\">Rush Medio</span>\n              </div>\n            </div>\n            <div className=\"metric-item\">\n              <div className=\"metric-icon fastweb\"><Zap size={20} /></div>\n              <div className=\"metric-content\">\n                <span className=\"metric-value\">{formatNumber(stats.totalFastweb)}</span>\n                <span className=\"metric-label\">Fastweb Energia</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModernDashboard;\n","import React from 'react';\nimport {\n  BarChart3, Users, Trophy, Package, UserPlus, Zap, Upload, History,\n  Settings, LogOut, Moon, Sun, X, User, TrendingUp\n} from 'lucide-react';\n\nconst ModernSidebar = ({\n  activeSection, setActiveSection, currentUser, onLogout,\n  isMobile, isCollapsed, setIsCollapsed, isDarkMode, setIsDarkMode\n}) => {\n  const menuItems = [\n    { id: 'dashboard', label: 'Dashboard', icon: BarChart3, color: 'from-blue-500 to-blue-600', description: 'Panoramica generale' },\n    { id: 'sm-ranking', label: 'Classifica SM', icon: Trophy, color: 'from-yellow-500 to-yellow-600', description: 'Ranking coordinatori' },\n    { id: 'agents', label: 'Agenti', icon: Users, color: 'from-green-500 to-green-600', description: 'Gestione agenti' },\n    { id: 'products', label: 'Prodotti', icon: Package, color: 'from-purple-500 to-purple-600', description: 'Analisi prodotti' },\n    { id: 'new-clients', label: 'Nuovi Clienti', icon: UserPlus, color: 'from-pink-500 to-pink-600', description: 'Dashboard clienti' },\n    { id: 'fastweb', label: 'Fastweb', icon: Zap, color: 'from-orange-500 to-orange-600', description: 'Contratti Fastweb' },\n    { id: 'historical-analysis', label: 'Analisi Storica', icon: History, color: 'from-purple-500 to-purple-600', description: 'Analisi storica dei dati' },\n  ];\n\n  const settingsMenuItems = [\n    { id: 'files', label: 'Gestione File', icon: Upload, color: 'from-indigo-500 to-indigo-600', description: 'Upload e gestione' },\n    { id: 'settings', label: 'Gestione Utenti', icon: Settings, color: 'from-purple-500 to-purple-600', description: 'Gestisci gli utenti' }\n  ];\n\n  const handleItemClick = (itemId) => {\n    setActiveSection(itemId);\n    if (isMobile) setIsCollapsed(true);\n  };\n\n  return (\n    <>\n      {isMobile && !isCollapsed && (\n        <div className=\"sidebar-overlay\" onClick={() => setIsCollapsed(true)} />\n      )}\n\n      <div className={`modern-sidebar ${isCollapsed && isMobile ? 'collapsed' : ''} ${isDarkMode ? 'dark' : ''}`}>\n        <div className=\"sidebar-header\">\n          <div className=\"brand\">\n            <div className=\"brand-icon\"><TrendingUp size={32} /></div>\n            {(!isCollapsed || !isMobile) && (\n              <div className=\"brand-text\">\n                <h1>RUSH</h1>\n                <span>Dashboard</span>\n              </div>\n            )}\n          </div>\n          {isMobile && (\n            <button className=\"close-sidebar\" onClick={() => setIsCollapsed(true)}>\n              <X size={24} />\n            </button>\n          )}\n        </div>\n\n        <nav className=\"sidebar-nav\">\n          <div className=\"nav-section\">\n            <span className=\"section-title\">Principale</span>\n            {menuItems.slice(0, 4).map((item) => {\n              const Icon = item.icon;\n              const isActive = activeSection === item.id;\n              return (\n                <button key={item.id} className={`nav-item ${isActive ? 'active' : ''}`} onClick={() => handleItemClick(item.id)}>\n                  <div className={`nav-icon bg-gradient-to-r ${item.color}`}>\n                    <Icon size={20} />\n                  </div>\n                  {(!isCollapsed || !isMobile) && (\n                    <div className=\"nav-content\">\n                      <span className=\"nav-label\">{item.label}</span>\n                      <span className=\"nav-description\">{item.description}</span>\n                    </div>\n                  )}\n                  {isActive && <div className=\"active-indicator\" />}\n                </button>\n              );\n            })}\n          </div>\n          <div className=\"nav-section\">\n            <span className=\"section-title\">Analisi</span>\n            {menuItems.slice(4).map((item) => {\n              const Icon = item.icon;\n              const isActive = activeSection === item.id;\n              return (\n                <button key={item.id} className={`nav-item ${isActive ? 'active' : ''}`} onClick={() => handleItemClick(item.id)}>\n                  <div className={`nav-icon bg-gradient-to-r ${item.color}`}>\n                    <Icon size={20} />\n                  </div>\n                  {(!isCollapsed || !isMobile) && (\n                    <div className=\"nav-content\">\n                      <span className=\"nav-label\">{item.label}</span>\n                      <span className=\"nav-description\">{item.description}</span>\n                    </div>\n                  )}\n                  {isActive && <div className=\"active-indicator\" />}\n                </button>\n              );\n            })}\n          </div>\n\n          {(currentUser?.role === 'admin' || currentUser?.role === 'viewer') && (\n            <div className=\"nav-section\">\n              <span className=\"section-title\">Impostazioni</span>\n              {settingsMenuItems\n                .filter(item => {\n                  if (item.id === 'files') return true;\n                  if (item.id === 'settings') return currentUser.role === 'admin';\n                  return false;\n                })\n                .map((item) => {\n                  const Icon = item.icon;\n                  const isActive = activeSection === item.id;\n                  return (\n                    <button key={item.id} className={`nav-item ${isActive ? 'active' : ''}`} onClick={() => handleItemClick(item.id)}>\n                      <div className={`nav-icon bg-gradient-to-r ${item.color}`}>\n                        <Icon size={20} />\n                      </div>\n                      {(!isCollapsed || !isMobile) && (\n                        <div className=\"nav-content\">\n                          <span className=\"nav-label\">{item.label}</span>\n                          <span className=\"nav-description\">{item.description}</span>\n                        </div>\n                      )}\n                      {isActive && <div className=\"active-indicator\" />}\n                    </button>\n                  );\n                })}\n            </div>\n          )}\n        </nav>\n\n        <div className=\"sidebar-footer\">\n          <div className=\"user-section\">\n            <div className=\"user-avatar\"><User size={24} /></div>\n            {(!isCollapsed || !isMobile) && (\n              <div className=\"user-info\">\n                <span className=\"user-name\">{currentUser?.username || 'Admin'}</span>\n                <span className=\"user-role\">{currentUser?.role || 'Administrator'}</span>\n              </div>\n            )}\n          </div>\n          <div className=\"footer-actions\">\n            <button className=\"action-btn\" onClick={() => setIsDarkMode(!isDarkMode)}>\n              {isDarkMode ? <Sun size={20} /> : <Moon size={20} />}\n            </button>\n            <button className=\"action-btn logout\" onClick={onLogout}>\n              <LogOut size={20} />\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ModernSidebar;\n","import React from 'react';\nimport { useData } from '../App';\nimport {\n  Menu, User, ChevronRight, Activity, Calendar, Home\n} from 'lucide-react';\n\nconst ModernTopbar = ({ activeSection, isMobile, isCollapsed, setIsCollapsed, currentUser, isDarkMode }) => {\n  const { data, selectedFileDate, setSelectedFileDate } = useData();\n  const sectionTitles = {\n    dashboard: 'Dashboard',\n    'sm-ranking': 'Classifica Sales Manager',\n    agents: 'Gestione Agenti',\n    products: 'Analisi Prodotti',\n    'new-clients': 'Nuovi Clienti',\n    fastweb: 'Fastweb Energia',\n    files: 'Gestione File'\n  };\n\n  return (\n    <header className={`modern-topbar ${isDarkMode ? 'dark' : ''}`}>\n      <div className=\"topbar-left\">\n        {isMobile && (\n          <button className=\"menu-toggle\" onClick={() => setIsCollapsed(!isCollapsed)}>\n            <Menu size={24} />\n          </button>\n        )}\n        <div className=\"breadcrumb\">\n          <Home size={16} />\n          <ChevronRight size={16} />\n          <span>{sectionTitles[activeSection] || 'Dashboard'}</span>\n        </div>\n      </div>\n      <div className=\"topbar-right\">\n        <div className=\"quick-stats\">\n          {data.uploadedFiles && data.uploadedFiles.length > 0 && (\n            <div className=\"period-selector\">\n              <select\n                id=\"period-select-topbar\"\n                value={selectedFileDate || (data.uploadedFiles[0]?.date || '')}\n                onChange={(e) => setSelectedFileDate(e.target.value)}\n              >\n                {data.uploadedFiles.map(file => (\n                  <option key={file.id} value={file.date}>\n                    {file.displayDate}\n                  </option>\n                ))}\n              </select>\n            </div>\n          )}\n          <div className=\"stat-item\">\n            <Calendar size={16} />\n            <span>{new Date().toLocaleDateString('it-IT')}</span>\n          </div>\n        </div>\n        <div className=\"user-menu\">\n          <div className=\"user-avatar-small\"><User size={18} /></div>\n          <div className=\"user-details\">\n            <span className=\"user-name-small\">{currentUser?.username || 'Admin'}</span>\n            <span className=\"user-status\">Online</span>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default ModernTopbar;\n","import React, { useState, createContext, useContext, useEffect, useCallback } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport toast, { Toaster } from 'react-hot-toast';\n\n// Import dei servizi\nimport { apiService } from './services/apiService';\n// Import del parser Excel aggiornato\nimport { parseExcelFile, formatCurrency, formatNumber, sortFilesByDate } from './utils/excelParser';\nimport ConfirmationDialog from './components/ConfirmationDialog';\nimport ModernAgentsPage from './components/ModernAgentsPage'; // Importa la nuova pagina agenti\nimport ModernSMRanking from './components/ModernSMRanking'; // Importa la nuova pagina classifica SM\nimport ModernProductsAnalysis from './components/ModernProductsAnalysis'; // Importa la nuova pagina prodotti\nimport ModernNewClientsPage from './components/ModernNewClientsPage'; // Importa la nuova pagina clienti\nimport ModernFastwebPage from './components/ModernFastwebPage'; // Importa la nuova pagina Fastweb\nimport ModernHistoricalAnalysis from './components/ModernHistoricalAnalysis'; // Importa la pagina Analisi Storica\nimport ModernSettingsPage from './components/ModernSettingsPage'; // Importa la pagina Impostazioni\nimport TestPage from './components/TestPage'; // Importa il componente TestPage\nimport ModernDashboard from './components/ModernDashboard'; // Importa la nuova dashboard\nimport ModernSidebar from './components/ModernSidebar';\nimport ModernTopbar from './components/ModernTopbar';\nimport './App.css';\nimport './components/ModernDashboard.css'; // 💅 Importa i nuovi stili per la Dashboard\nimport './components/ModernLogin.css'; // ✨ Importa i nuovi stili per il Login\nimport './ModernAppLayout.css';\n\n\n// Context per la gestione dei dati - AGGIORNATO con caricamento globale\nconst DataContext = createContext();\n\nexport const useData = () => {\n  const context = useContext(DataContext);\n  if (!context) {\n    throw new Error('useData must be used within a DataProvider');\n  }\n  return context;\n};\n\n// 🆕 DATA PROVIDER CON CARICAMENTO GLOBALE\nconst DataProvider = ({ children, isAuthenticated }) => {\n  const [data, setData] = useState({\n    uploadedFiles: [],\n    processedData: {},\n    selectedSM: null,\n    selectedAgent: null\n  });\n  const [selectedFileDate, setSelectedFileDate] = useState(null);\n  const [globalLoading, setGlobalLoading] = useState(false);\n\n  // 🔧 FUNZIONE DI CARICAMENTO GLOBALE - Condivisa tra tutti i componenti\n  const loadFiles = useCallback(async () => {\n    if (!isAuthenticated) return; // Non caricare se non autenticato\n    \n    try {\n      setGlobalLoading(true);\n      console.log('🔄 Caricamento globale dati dal database...');\n      \n      const files = await apiService.loadFiles();\n      \n      if (!files || !Array.isArray(files) || files.length === 0) {\n        console.log('📁 Nessun file trovato nel database');\n        setData(prevData => ({\n          ...prevData,\n          uploadedFiles: [],\n          processedData: {}\n        }));\n        return;\n      }\n\n      console.log(`📁 ${files.length} file trovati nel database`);\n      \n      // Converte i dati dal formato database al formato app\n      const processedFiles = await Promise.all(files.map(async (file) => {\n        try {\n          // Prova a caricare dati completi del file se necessario per la dashboard\n          let fileData = null;\n          \n          // Controlla se i dati sono già nel file dalla query principale\n          if (file.file_data) {\n            if (typeof file.file_data === 'string') {\n              fileData = JSON.parse(file.file_data);\n            } else {\n              fileData = file.file_data;\n            }\n          } else {\n            // Fallback: prova a caricare i dati separatamente\n            try {\n              fileData = await apiService.getFileData(file.file_date);\n            } catch (error) {\n              console.warn(`Impossibile caricare dati dettagliati per ${file.file_date}`);\n            }\n          }\n          \n          return {\n            id: file.id,\n            name: file.file_name,\n            date: file.file_date,\n            displayDate: file.display_date,\n            uploadDate: file.upload_date,\n            size: file.file_size,\n            data: fileData,\n            metadata: fileData ? {\n              totalAgents: fileData.metadata?.totalAgents || 0,\n              totalSMs: fileData.metadata?.totalSMs || 0,\n              totalRevenue: fileData.metadata?.totalRevenue || 0,\n              totalRush: fileData.metadata?.totalRush || 0,\n              totalNewClients: fileData.metadata?.totalNewClients || 0,\n              totalFastweb: fileData.metadata?.totalFastweb || 0\n            } : {\n              // Fallback dai dati di base del file\n              totalAgents: file.total_agents || 0,\n              totalSMs: file.total_sms || 0,\n              totalRevenue: file.total_revenue || 0,\n              totalRush: file.total_rush || 0,\n              totalNewClients: file.total_new_clients || 0,\n              totalFastweb: file.total_fastweb || 0\n            }\n          };\n        } catch (error) {\n          console.warn(`Errore processamento file ${file.file_date}:`, error);\n          return {\n            id: file.id,\n            name: file.file_name,\n            date: file.file_date,\n            displayDate: file.display_date,\n            uploadDate: file.upload_date,\n            size: file.file_size,\n            data: null,\n            metadata: {\n              totalAgents: 0,\n              totalSMs: 0,\n              totalRevenue: 0,\n              totalRush: 0,\n              totalNewClients: 0,\n              totalFastweb: 0\n            }\n          };\n        }\n      }));\n      \n      // 🔧 FIX: Ordina i file per data nel nome, non per data upload\n      const sortedFiles = sortFilesByDate(processedFiles);\n      \n      // Crea il processedData per compatibilità con componenti esistenti\n      const processedData = {};\n      sortedFiles.forEach(file => {\n        if (file.data) {\n          processedData[file.date] = file.data;\n        }\n      });\n      \n      // 🔧 FIX: Seleziona automaticamente il file più recente se non c'è selezione\n      const newSelectedFileDate = selectedFileDate && sortedFiles.find(f => f.date === selectedFileDate) \n        ? selectedFileDate \n        : (sortedFiles.length > 0 ? sortedFiles[0].date : null);\n      \n      setData(prevData => ({\n        ...prevData,\n        uploadedFiles: sortedFiles,\n        processedData: processedData\n      }));\n      \n      setSelectedFileDate(newSelectedFileDate);\n      \n      console.log(`✅ ${sortedFiles.length} file caricati con successo globalmente`);\n      \n      if (sortedFiles.length > 0 && newSelectedFileDate) {\n        console.log(`📋 File selezionato: ${sortedFiles.find(f => f.date === newSelectedFileDate)?.displayDate || 'N/A'}`);\n      }\n      \n    } catch (error) {\n      console.error('Errore nel caricamento globale dei file:', error);\n      toast.error('Errore nel caricamento dei dati dal database');\n      \n      // Reset in caso di errore\n      setData(prevData => ({\n        ...prevData,\n        uploadedFiles: [],\n        processedData: {}\n      }));\n    } finally {\n      setGlobalLoading(false);\n    } \n  }, [isAuthenticated, selectedFileDate]);\n\n  // 🚀 CARICAMENTO AUTOMATICO ALL'AUTENTICAZIONE\n  useEffect(() => {\n    if (isAuthenticated) {\n      console.log('🔐 Utente autenticato - Avvio caricamento dati...');\n      loadFiles();\n    } else {\n      // Reset dati se non autenticato\n      setData({\n        uploadedFiles: [],\n        processedData: {},\n        selectedSM: null,\n        selectedAgent: null\n      });\n      setSelectedFileDate(null);\n      setGlobalLoading(false);\n    }\n  }, [isAuthenticated, loadFiles]);\n\n  const contextValue = {\n    data,\n    setData,\n    selectedFileDate,\n    setSelectedFileDate,\n    loadFiles, // Esponi la funzione per ricaricare quando necessario\n    globalLoading\n  };\n\n  return (\n    <DataContext.Provider value={contextValue}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n\n// Tema Material-UI personalizzato\nconst theme = createTheme({\n  palette: {\n    mode: 'light',\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#dc004e',\n    },\n    background: {\n      default: '#f5f5f5',\n    },\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    h4: {\n      fontWeight: 600,\n    },\n  },\n});\n\n// ✨ Componente Login Moderno\nconst Login = ({ onLogin }) => {\n  const [credentials, setCredentials] = useState({ username: '', password: '' });\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    try {\n      const result = await apiService.login(credentials.username, credentials.password);\n      \n      if (result.success) {\n        onLogin(result.user);\n        toast.success(`Benvenuto, ${result.user.full_name || result.user.username}!`);\n      } else {\n        toast.error(result.error || 'Credenziali non valide');\n      }\n    } catch (error) {\n      toast.error('Errore di connessione');\n      console.error('Login error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"modern-login-container\">\n      <div className=\"modern-login-card\">\n        <div className=\"modern-login-header\">\n          <h1>🏆 RUSH</h1>\n          <p>Gara di Produzione Agenti</p>\n        </div>\n        \n        <form onSubmit={handleSubmit} className=\"modern-login-form\">\n          <div className=\"modern-form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              id=\"username\"\n              type=\"text\"\n              value={credentials.username}\n              onChange={(e) => setCredentials({...credentials, username: e.target.value})}\n              placeholder=\"es. mario.rossi\"\n              required\n            />\n          </div>\n          \n          <div className=\"modern-form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              value={credentials.password}\n              onChange={(e) => setCredentials({...credentials, password: e.target.value})}\n              placeholder=\"••••••••\"\n              required\n            />\n          </div>\n          \n          <button \n            type=\"submit\" \n            className={`modern-login-btn ${loading ? 'loading' : ''}`}\n            disabled={loading}\n          >\n            {loading ? 'Accesso...' : 'Accedi'}\n          </button>\n        </form>\n        \n      </div>\n    </div>\n  );\n};\n\n\n// Componente File Upload - SEMPLIFICATO (non più responsabile del caricamento globale)\nconst FileUpload = ({ openDialog, currentUser }) => {\n  const { data, loadFiles, globalLoading } = useData();\n  const [uploading, setUploading] = useState(false);\n  const isViewer = currentUser?.role === 'viewer';\n\n  // ⚠️ IMPORTANTE: Ora loadFiles è gestito globalmente, non qui\n\n  // *** AGGIORNATO: handleFileUpload per parser dinamico ***\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    setUploading(true);\n    toast.loading('Parsing del file Excel...', { id: 'upload' });\n\n    try {\n      // Validazione tipo file\n      const validTypes = [\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        'application/vnd.ms-excel'\n      ];\n      \n      if (!validTypes.includes(file.type) && !file.name.toLowerCase().endsWith('.xlsx')) {\n        toast.error('File non valido. Sono supportati solo file Excel (.xlsx, .xls)', { id: 'upload' });\n        return;\n      }\n\n      // *** NUOVO: Parsing dinamico con gestione anomalie ***\n      const parseResult = await parseExcelFile(file);\n      \n      if (!parseResult.success) {\n        if (parseResult.needsMapping) {\n          // 🆕 Gestisci mappatura manuale se necessaria\n          const userChoice = window.confirm(\n            `⚠️ ATTENZIONE: Alcune colonne non sono state trovate automaticamente.\\n\\n` +\n            `Colonne mancanti: ${parseResult.missingColumns.map(c => c.field).join(', ')}\\n\\n` +\n            `Colonne disponibili nel file: ${parseResult.availableColumns.slice(0, 10).join(', ')}${parseResult.availableColumns.length > 10 ? '...' : ''}\\n\\n` +\n            `Vuoi procedere comunque? I campi mancanti saranno impostati a 0.`\n          );\n          \n          if (!userChoice) {\n            toast.error('Caricamento annullato', { id: 'upload' });\n            return;\n          }\n          \n          // Per ora procediamo, in futuro si può implementare una mappatura manuale\n        } else {\n          toast.error(`❌ Errore nel parsing del file: ${parseResult.error}`, { id: 'upload' });\n          return;\n        }\n      }\n\n      // *** NUOVO: Gestione warnings per campi opzionali mancanti ***\n      if (parseResult.data?.metadata?.warnings && parseResult.data.metadata.warnings.length > 0) {\n        const warningCount = parseResult.data.metadata.warnings.length;\n        const warningFields = parseResult.data.metadata.warnings.map(w => w.field).join(', ');\n        \n        toast.success(\n          `⚡ File parsato con successo!\\n` +\n          `⚠️ ${warningCount} campi opzionali impostati a zero: ${warningFields}\\n` +\n          `Questo è normale per prodotti non disponibili in certi periodi.`,\n          { id: 'upload', duration: 6000 }\n        );\n      }\n\n      const { data: parsedData } = parseResult;\n      const fileDate = parsedData.metadata.dateInfo.dateString;\n\n      const uploadFile = async () => {\n        // *** AGGIORNATO: Usa la nuova struttura dati dal parser dinamico ***\n        const fileData = {\n          name: file.name,\n          date: fileDate,\n          displayDate: `${parsedData.metadata.dateInfo.month}/${parsedData.metadata.dateInfo.year}`,\n          size: file.size,\n          data: parsedData,\n          metadata: {\n            totalAgents: parsedData.metadata.totalAgents,\n            totalSMs: parsedData.metadata.totalSMs,\n            totalRevenue: parsedData.metadata.totalRevenue,\n            totalRush: parsedData.metadata.totalRush,\n            totalNewClients: parsedData.metadata.totalNewClients,\n            totalFastweb: parsedData.metadata.totalFastweb || 0,\n            parseDate: new Date().toISOString(),\n            warnings: parsedData.metadata.warnings\n          }\n        };\n\n        const result = await apiService.saveFile(fileData);\n\n        if (result.success) {\n          // Success feedback con dettagli migliorati\n          const agentsCount = parsedData.metadata.totalAgents;\n          const smCount = parsedData.metadata.totalSMs;\n          const totalFatturato = parsedData.metadata.totalRevenue;\n          const totalRush = parsedData.metadata.totalRush;\n          \n          const actionText = result.action === 'updated' ? 'aggiornato' : 'caricato';\n          toast.success(\n            `✅ File ${actionText} con successo!\\n` +\n            `👥 ${agentsCount} agenti importati\\n` +\n            `👔 ${smCount} coordinatori\\n` +\n            `💰 ${formatCurrency(totalFatturato)} fatturato\\n` +\n            `⚡ ${formatCurrency(totalRush)} Fatturato Rush`,\n            { id: 'upload', duration: 5000 }\n          );\n\n          // 🔧 FIX: Usa la funzione globale di caricamento\n          await loadFiles();\n        } else {\n          throw new Error(result.error || 'Errore sconosciuto durante il caricamento');\n        }\n      };\n\n      // Controlla duplicati basandosi sulla data nel nome file\n      const existingFile = data.uploadedFiles.find(f => f.date === fileDate);\n      \n      if (existingFile) {\n        toast.dismiss('upload');\n        const monthYear = `${parsedData.metadata.dateInfo.month}/${parsedData.metadata.dateInfo.year}`;\n        openDialog(\n          'Sovrascrivi file',\n          `⚠️ ATTENZIONE!\\n\\nEsiste già un file per ${monthYear}:\\n\"${existingFile.name}\"\\n\\nVuoi sovrascriverlo?`,\n          () => {\n            toast.loading('Aggiornamento file...', { id: 'upload' });\n            uploadFile();\n          }\n        );\n      } else {\n        toast.loading('Caricamento file sul server...', { id: 'upload' });\n        await uploadFile();\n      }\n\n    } catch (error) {\n      if (error?.statusCode === 403) {\n        toast.error('⛔ Accesso negato. Solo gli amministratori possono caricare o aggiornare file.', { id: 'upload', duration: 5000 });\n      } else {\n        toast.error(`❌ Errore: ${error.message || 'Caricamento fallito'}`, { id: 'upload' });\n      }\n      console.error('Upload error:', error);\n    } finally {\n      setUploading(false);\n      event.target.value = '';\n    }\n  };\n\n  const handleDeleteFile = async (fileDate, fileName) => {\n    openDialog(\n      'Conferma Eliminazione',\n      `Sei sicuro di voler eliminare il file ${fileName}?`,\n      async () => {\n        try {\n          toast.loading('Eliminazione file...', { id: 'delete' });\n\n          await apiService.deleteFile(fileDate);\n\n          toast.success('File eliminato con successo', { id: 'delete' });\n\n          // 🔧 FIX: Usa la funzione globale di ricaricamento\n          await loadFiles();\n\n        } catch (error) {\n          toast.error(`Errore nell'eliminazione: ${error.message}`, { id: 'delete' });\n          console.error('Delete error:', error);\n        }\n      }\n    );\n  };\n\n  // 🔧 FIX: Mostra loading globale invece di loading locale\n  if (globalLoading) {\n    return (\n      <div className=\"file-upload-section\">\n        <div className=\"loading-indicator\">\n          <div className=\"loading-spinner\"></div>\n          Caricamento file dal database...\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"file-upload-section\">\n      {isViewer ? (\n        <div className=\"viewer-message\">\n          <p>La funzione di caricamento ed eliminazione è disponibile solo per gli amministratori.</p>\n          <p>Contatta un amministratore per gestire i file.</p>\n        </div>\n      ) : (\n        <>\n          <h3>📁 Carica File Mensile</h3>\n          <div className=\"upload-area\">\n            <input\n              type=\"file\"\n              id=\"file-upload\"\n              accept=\".xlsx,.xls\"\n              onChange={handleFileUpload}\n              disabled={uploading}\n              className=\"file-input\"\n            />\n            <label htmlFor=\"file-upload\" className={`upload-label ${uploading ? 'uploading' : ''}`}>\n              {uploading ? '⏳ Caricamento...' : '📤 Seleziona File Excel'}\n            </label>\n          </div>\n\n          <div className=\"upload-info\">\n            <p>Formato file: <code>YYYY.MM.DD Piramis Gara RUSH Inflow Agenti.xlsx</code></p>\n            <p>File supportati: .xlsx, .xls</p>\n            <p className=\"parser-info\">\n              🧠 <strong>Parser Dinamico:</strong> Si adatta automaticamente alle variazioni tra file diversi\n            </p>\n          </div>\n        </>\n      )}\n      \n      <div className=\"uploaded-files\">\n        <h4>File Caricati ({data.uploadedFiles.length})</h4>\n        {data.uploadedFiles.length === 0 ? (\n          <p className=\"no-files\">Nessun file caricato sul server</p>\n        ) : (\n          <div className=\"files-list\">\n            {data.uploadedFiles.map(file => (\n              <div key={file.id} className=\"file-item\">\n                <div className=\"file-info\">\n                  <span className=\"file-name\">{file.name}</span>\n                  {file.metadata && (\n                    <div className=\"file-stats\">\n                      <span>{formatNumber(file.metadata.totalAgents)} agenti</span>\n                      <span>{formatNumber(file.metadata.totalSMs)} coordinatori</span>\n                      <span>{formatCurrency(file.metadata.totalRevenue)} fatturato</span>\n                      <span>{formatCurrency(file.metadata.totalRush)} Fatturato Rush</span>\n                      {file.metadata.totalFastweb > 0 && (\n                        <span className=\"fastweb-badge\">⚡ {formatNumber(file.metadata.totalFastweb)} Fastweb</span>\n                      )}\n                    </div>\n                  )}\n                </div>\n                <span className=\"file-date\">{file.displayDate}</span>\n                <div className=\"file-actions\">\n                  <span className=\"file-size\">{(file.size / 1024).toFixed(1)} KB</span>\n                  {!isViewer && (\n                    <button\n                      className=\"delete-file-btn\"\n                      onClick={() => handleDeleteFile(file.date, file.name)}\n                      title=\"Elimina file\"\n                    >\n                      🗑️\n                    </button>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n\n// Componente principale con routing - AGGIORNATO per usare DataProvider\nconst MainApp = ({ currentUser, onLogout, isAuthenticated }) => {\n  const [activeSection, setActiveSection] = useState('dashboard');\n  const [dialog, setDialog] = useState({ isOpen: false, title: '', message: '', onConfirm: () => {} });\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const [isCollapsed, setIsCollapsed] = useState(false);\n\n  useEffect(() => {\n    const checkMobile = () => {\n      const mobile = window.innerWidth < 768;\n      setIsMobile(mobile);\n      if (mobile) {\n        setIsCollapsed(true);\n      }\n    };\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', isDarkMode);\n    if (isDarkMode) {\n      document.documentElement.style.setProperty('color-scheme', 'dark');\n    } else {\n      document.documentElement.style.setProperty('color-scheme', 'light');\n    }\n  }, [isDarkMode]);\n\n  const openDialog = (title, message, onConfirm) => {\n    setDialog({\n      isOpen: true,\n      title,\n      message,\n      onConfirm: () => {\n        onConfirm();\n        handleCloseDialog();\n      }\n    });\n  };\n\n  const handleCloseDialog = () => {\n    setDialog({ ...dialog, isOpen: false });\n  };\n\n  const renderContent = () => {\n    switch (activeSection) {\n      case 'dashboard':\n        return <ModernDashboard />;\n      case 'files':\n        return <FileUpload openDialog={openDialog} currentUser={currentUser} />;\n      case 'sm-ranking':\n        return <ModernSMRanking />;\n      case 'agents':\n        return <ModernAgentsPage />;\n      case 'products':\n        return <ModernProductsAnalysis />;\n      case 'new-clients':\n        return <ModernNewClientsPage />;\n      case 'fastweb':\n        return <ModernFastwebPage />;\n      case 'historical-analysis':\n        return <ModernHistoricalAnalysis setActiveSection={setActiveSection} />;\n      case 'settings':\n        return <ModernSettingsPage />;\n      case 'test':\n        return <TestPage />;\n      default:\n        return <ModernDashboard />;\n    }\n  };\n\n  return (\n    <DataProvider isAuthenticated={isAuthenticated}>\n      <div className={`modern-app-container ${isDarkMode ? 'dark' : ''}`}>\n        <ModernSidebar\n          activeSection={activeSection}\n          setActiveSection={setActiveSection}\n          currentUser={currentUser}\n          onLogout={onLogout}\n          isMobile={isMobile}\n          isCollapsed={isCollapsed}\n          setIsCollapsed={setIsCollapsed}\n          isDarkMode={isDarkMode}\n          setIsDarkMode={setIsDarkMode}\n        />\n\n        <div className=\"main-app-area\">\n          <ModernTopbar\n            activeSection={activeSection}\n            isMobile={isMobile}\n            isCollapsed={isCollapsed}\n            setIsCollapsed={setIsCollapsed}\n            currentUser={currentUser}\n            isDarkMode={isDarkMode}\n          />\n\n          <main className={`modern-main-content ${isDarkMode ? 'dark' : ''}`}>\n            {renderContent()}\n          </main>\n        </div>\n\n        <ConfirmationDialog\n          open={dialog.isOpen}\n          onClose={handleCloseDialog}\n          onConfirm={dialog.onConfirm}\n          title={dialog.title}\n          message={dialog.message}\n        />\n      </div>\n    </DataProvider>\n  );\n};\n\n// App principale\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [initializing, setInitializing] = useState(true);\n\n  // Controlla autenticazione all'avvio\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        let user = null;\n\n        if (apiService.isAuthenticated()) {\n          user = apiService.getCurrentUser();\n\n          if (!user) {\n            const session = await apiService.restoreSession();\n            if (session.success) {\n              user = session.user;\n            }\n          }\n        } else {\n          const session = await apiService.restoreSession();\n          if (session.success) {\n            user = session.user;\n          }\n        }\n\n        if (user) {\n          setCurrentUser(user);\n          setIsAuthenticated(true);\n\n          // Test connessione API\n          try {\n            await apiService.healthCheck();\n            console.log('✅ Connessione API verificata');\n          } catch (error) {\n            console.warn('⚠️ Problema connessione API:', error);\n            toast.warning('Connessione al server instabile');\n          }\n        } else {\n          setCurrentUser(null);\n          setIsAuthenticated(false);\n        }\n      } catch (error) {\n        console.error('Errore verifica autenticazione:', error);\n      } finally {\n        setInitializing(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  const handleLogin = (user) => {\n    setCurrentUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleLogout = async () => {\n    try {\n      await apiService.logout();\n      setCurrentUser(null);\n      setIsAuthenticated(false);\n      toast.success('Logout effettuato con successo');\n    } catch (error) {\n      console.error('Errore durante logout:', error);\n      // Logout locale comunque\n      setCurrentUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n\n  // Loading iniziale\n  if (initializing) {\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <div className=\"App\">\n          <div className=\"loading-container\">\n            <div className=\"loading-spinner\"></div>\n            <p>Inizializzazione RUSH Dashboard...</p>\n          </div>\n          <Toaster position=\"top-right\" />\n        </div>\n      </ThemeProvider>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className=\"App\">\n        {!isAuthenticated ? (\n          <Login onLogin={handleLogin} />\n        ) : (\n          <MainApp \n            currentUser={currentUser} \n            onLogout={handleLogout}\n            isAuthenticated={isAuthenticated}\n          />\n        )}\n        <Toaster \n          position=\"top-right\"\n          toastOptions={{\n            duration: 4000,\n            style: {\n              background: '#363636',\n              color: '#fff',\n              maxWidth: '500px', // ← Più spazio per i messaggi dettagliati\n            },\n            success: {\n              duration: 3000,\n              iconTheme: {\n                primary: '#4aed88',\n              },\n            },\n            error: {\n              duration: 5000,\n              iconTheme: {\n                primary: '#ff6b6b',\n              },\n            },\n          }}\n        />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["runtimeEnv","resolveRuntimeEnv","error","process","env","MODE","VITE_API_BASE_URL","mode","API_BASE_URL","_runtimeEnv$VITE_API_","isProduction","SENSITIVE_KEYS","Set","sanitizeForLogging","value","seen","arguments","length","undefined","WeakSet","depth","Date","toISOString","Error","name","message","stack","has","add","Array","isArray","map","item","Object","entries","reduce","acc","_ref","key","val","normalizedKey","String","toLowerCase","delete","createLogger","method","_len","args","_key","sanitizedArgs","arg","logDebug","console","log","bind","logError","logWarn","warn","SESSION_STORAGE_KEY","ApiError","constructor","statusCode","details","super","this","apiService","token","currentUser","expiresAt","sessionActive","baseURL","concat","loadStoredSession","makeRequest","endpoint","options","url","replace","skipAuthErrorHandling","headers","customHeaders","credentials","requestedCredentials","fetchOptions","_objectWithoutProperties","_excluded","isFormData","body","FormData","_objectSpread","getAuthHeaders","window","URL","location","href","origin","config","response","fetch","status","statusText","data","json","ok","clearSession","handleAuthError","TypeError","includes","shouldReload","reload","localStorage","removeItem","setToken","saveSessionToStorage","sessionData","setItem","JSON","stringify","storedData","getItem","parse","Boolean","removeError","login","username","password","_response$user","success","user","expires_at","logout","isAuthenticated","getCurrentUser","restoreSession","profile","changePassword","currentPassword","newPassword","current_password","new_password","loadFiles","_response$files","files","getFileData","fileDate","saveFile","fileData","date","deleteFile","uploadFile","file","parsedData","formData","append","getDashboardStats","getStatsForPeriod","startDate","endDate","getSMRanking","getAgentsDetails","getProductsAnalysis","getNewClientsData","getFastwebData","getUserProfile","updateUserProfile","profileData","healthCheck","getSystemInfo","cleanup","exportData","_this$getCurrentUser","fullData","filePromises","async","file_date","fileInfo","file_name","displayDate","display_date","uploadDate","upload_date","size","file_size","fileResults","Promise","all","result","exportDate","version","metadata","totalFiles","exportedBy","blob","Blob","type","createObjectURL","link","document","createElement","download","split","appendChild","click","removeChild","revokeObjectURL","importData","backupFile","getActivityLogs","limit","offset","search","query","filters","getUsers","users","updateUserRole","userId","role","adminUpdateUserPassword","createUser","userData","deleteUser","batchOperation","operation","fileIds","DYNAMIC_FIELD_PATTERNS","patterns","required","description","parseAgentRow","worksheet","row","mapping","getColumnValue","fieldKey","expectedType","column","cellRef","cell","v","toString","parsed","parseFloat","isNaN","trim","cleanCellValue","agent","nome","sm","distretto","fatturatoRush","bonusRisultati","fatturato","complessivo","simVoce","adsl","simDati","fibra","fibraBusiness","fastwebEnergia","nuovoCliente","station","mnp","totalePezzi","numero","easyRent","linkOu","linkOa","linkOaStart","interniOa","fatturatoVoce","fatturatoDati","fatturatoEasyRent","fatturatoOu","fatturatoOa","fatturatoEasyDeal","fatturatoAltro","fatturatoServiziDigitali","fatturatoCustom","sdm","fatturatoSdm","ssc","fatturatoSsc","yourBackup","fatturatoYourBackup","cloudNas","fatturatoCloudNas","easyGdpr","fatturatoEasyGdpr","miia","fatturatoMiia","fatturatoNuovoCliente","bsalesMobile","pdaDigitale","totaleVoce","totaleDati","totaleFastweb","fatturatoProdotti","columnToIndex","i","charCodeAt","extractDateFromFilename","filename","dateMatch","match","year","parseInt","month","day","dateString","formatCurrency","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatNumber","open","onClose","onConfirm","title","_jsxs","Dialog","children","_jsx","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","color","autoFocus","formatAgentName","part","charAt","toUpperCase","slice","join","_agent$fatturato","topProducts","agentData","filter","p","sort","a","b","str","performanceClass","Stat","_ref2","icon","label","className","User","DollarSign","TrendingUp","Award","Package","EmptyState","StatItem","isCurrency","Icon","formattedValue","KpiTrend","_ref3","currentValue","historicalValues","dataKey","lastMonthData","previousValue","percentageChange","Math","abs","toFixed","_ref4","_agent$fatturato2","allData","activeSection","setActiveSection","useState","toggleSection","sectionId","useEffect","handleEsc","event","keyCode","addEventListener","removeEventListener","historicalData","useMemo","uploadedFiles","_file$data","_agentData$fatturato","agents","find","originalNome","rush","reverse","getProductCount","category","ReactDOM","e","stopPropagation","colors","getAvatarColor","MapPin","Calendar","X","ResponsiveContainer","width","height","LineChart","CartesianGrid","strokeDasharray","stroke","XAxis","YAxis","yAxisId","orientation","Tooltip","contentStyle","backgroundColor","border","borderRadius","boxShadow","Legend","Line","strokeWidth","dot","fill","r","BarChart3","ChevronDown","Phone","Globe","Smartphone","Shield","Zap","toLocaleDateString","jsx","getElementById","SLIDER_DISPLAY_MAX","ModernAgentsPage","_stats$topPerformer","selectedFileDate","globalLoading","useData","selectedAgent","setSelectedAgent","refreshing","setRefreshing","setFilters","searchTerm","selectedSm","fatturatoRushRange","activePreset","params","URLSearchParams","newFilters","get","Number","set","history","replaceState","pathname","smList","maxFatturatoRush","allAgentsInPeriod","f","agentsWithId","index","uniqueSmList","trueMaxRush","max","handleFilterChange","min","prev","handlePresetFilter","preset","stats","totalAgents","avgRush","sum","topPerformer","totalRevenue","marks","Users","disabled","RefreshCw","toLocaleString","Filter","Search","placeholder","onChange","target","Slider","newValue","valueLabelDisplay","step","valueLabelFormat","sx","mt","AgentCard","AgentModal","ModernSMRanking","sortBy","setSortBy","sortOrder","setSortOrder","selectedMetric","setSelectedMetric","expandedSM","setExpandedSM","smData","_data$uploadedFiles","agentsBySM","forEach","smName","team","totalRush","totalNewClients","push","values","sortedSMData","aVal","bVal","handleSort","field","handleMetricChange","metric","getRankIcon","Crown","Trophy","Medal","getMetricColor","totalStats","totalSMs","avgTeamSize","Target","ChevronUp","_Fragment","Star","agentIndex","ModernProductsAnalysis","selectedCategory","setSelectedCategory","viewMode","setViewMode","chartType","setChartType","chartMetric","setChartMetric","CHART_COLORS","productCategories","products","productsData","_data$processedData$s","processedData","productMapping","revenueKeyMapping","easyDeal","altro","serviziDigitali","custom","keys","revenueKey","agentsWithProduct","volume","displayName","topAgents","filteredProducts","_productCategories$se","categoryProducts","fromEntries","sortedProducts","totalVolume","totalProducts","getProductIcon","productName","Wifi","getProductColor","filteredProductsArray","productData","formatChartValue","useCallback","numericValue","includeUnit","formatted","unit","formatCount","chartData","product","originalName","Activity","PieChart","_ref5","_ref6","productKey","background","_ref7","_product$topAgents$","RechartsPieChart","Pie","nameKey","cx","cy","outerRadius","_ref8","labelLine","entry","Cell","formatter","BarChart","angle","textAnchor","interval","fontSize","tickFormatter","Bar","LabelList","position","AreaChart","Area","fillOpacity","NewClientAgentCard","performance","clientCount","avatarName","n","substring","UserPlus","PerformerCard","rank","rankClass","ModernNewClientsPage","setSort","by","order","topPerformers","emptyState","totalClients","avgClientsPerAgent","topSm","clients","allAgents","filteredAgents","valA","valB","smPerformance","topSmEntry","handleSortChange","newSortBy","Handshake","Building","ArrowDown","ArrowUp","resetFilters","Briefcase","ModernFastwebPage","activeView","setActiveView","isRefreshing","setIsRefreshing","fastwebData","agentsWithFastweb","totalContracts","avgContracts","topAgent","smRanking","period","smMap","Map","current","contracts","agentList","from","gridColumn","Frown","setTimeout","Eye","UserCheck","formatPercentage","TrendIndicator","text","isPositive","isNegative","trendClass","TrendingDown","InsightCard","insight","CustomTooltip","active","payload","TrendCard","cardClass","loading","setLoading","hasData","historicalStats","_files","_files2","monthlyData","latest","previous","calcTrend","revenueTrend","averageRevenue","clientTrend","bestMonth","best","comparisonData","rows","totalRevenuePeriod","totalRushPeriod","totalNewClientsPeriod","averageAgentsPeriod","kpis","revenue","summary","averageAgents","trends","insights","BarChart2","LoadingState","NoDataState","FileText","History","handleRefresh","Lightbulb","margin","top","right","left","bottom","tick","content","activeDot","header","UserModal","onSave","setUserData","full_name","confirmPassword","handleChange","titles","create","handleSave","toast","ModernSettingsPage","setUsers","setError","modalState","setModalState","isOpen","dialog","setDialog","fetchUsers","fetchedUsers","err","openModal","closeModal","handleCloseDialog","created_at","Edit","KeyRound","openDialog","handleDeleteUser","Trash","ConfirmationDialog","TestPage","agentKeys","firstTenAgents","ModernDashboard","_stats$topAgent$fattu","setSelectedFileDate","totalFastweb","topSM","recentFiles","currentPeriod","onLogout","isMobile","isCollapsed","setIsCollapsed","isDarkMode","setIsDarkMode","menuItems","settingsMenuItems","Upload","Settings","handleItemClick","itemId","isActive","Sun","Moon","LogOut","_data$uploadedFiles$","Menu","Home","ChevronRight","dashboard","fastweb","DataContext","createContext","context","useContext","DataProvider","setData","selectedSM","setGlobalLoading","prevData","sortedFiles","dateA","dateB","localeCompare","sortFilesByDate","_fileData$metadata","_fileData$metadata2","_fileData$metadata3","_fileData$metadata4","_fileData$metadata5","_fileData$metadata6","file_data","total_agents","total_sms","total_revenue","total_rush","total_new_clients","total_fastweb","newSelectedFileDate","_sortedFiles$find","contextValue","Provider","theme","createTheme","palette","primary","main","secondary","default","typography","fontFamily","h4","fontWeight","Login","onLogin","setCredentials","onSubmit","preventDefault","htmlFor","FileUpload","uploading","setUploading","isViewer","accept","_parseResult$data","endsWith","parseResult","dateInfo","arrayBuffer","workbook","XLSX","SheetNames","Sheets","headerRow","range","decode_range","headerKeywords","bestRow","bestScore","score","cellCount","col","c","encode_cell","cellText","keyword","normalizedScore","findHeaderRow","missingColumns","warnings","availableColumns","totalColumns","colLetter","encode_col","headerText","normalized","mappedHeaders","fieldConfig","pattern","bestMatch","normalizedPattern","createIntelligentMapping","criticalMissing","needsMapping","smStats","agentCol","agentCell","agenti","fatturatoTotale","totals","parsedRows","parseExcelFile","confirm","warningCount","warningFields","w","duration","parseDate","agentsCount","smCount","totalFatturato","actionText","action","existingFile","dismiss","monthYear","fileName","handleDeleteFile","MainApp","setIsMobile","checkMobile","mobile","innerWidth","classList","toggle","documentElement","setProperty","ModernSidebar","ModernTopbar","renderContent","ModernHistoricalAnalysis","setIsAuthenticated","setCurrentUser","initializing","setInitializing","session","warning","checkAuth","ThemeProvider","CssBaseline","Toaster","toastOptions","maxWidth","iconTheme","onPerfEntry","render","React","App","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"sourceRoot":""}